<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>InnoDB 与 MyISAM 的区别</title>
      <link href="/differences-between-innodb-and-myisam/"/>
      <url>/differences-between-innodb-and-myisam/</url>
      
        <content type="html"><![CDATA[<p>目前 MySQL 的数据库引擎一般使用 InnoDB 和 MyISAM，但两者存在一些差别。网上零零散散的文章看起来比较麻烦，这里以表格汇总对比二者区别。如有纰漏，还望读者在评论区指正。</p><table><thead><tr><th></th><th>InnoDB</th><th>MyISAM</th></tr></thead><tbody><tr><td>MySQL 默认引擎</td><td>✅</td><td>❌</td></tr><tr><td>事务</td><td>✅</td><td>❌</td></tr><tr><td>并发</td><td>表级锁 ✅<br>行级锁 ✅，采用 MVCC 来支持高并发，有可能死锁</td><td>表级锁 ✅<br>行级锁 ❌</td></tr><tr><td>外键</td><td>✅</td><td>❌</td></tr><tr><td>在线热备份</td><td>✅</td><td>❌</td></tr><tr><td>COUNT (*)</td><td>无 meta-data 缓存，查全表获取</td><td>有 meta-data 缓存，直接获取</td></tr><tr><td>崩溃恢复</td><td>通过事务日志来恢复数据库</td><td>损坏率高，恢复速度慢，不能安全恢复</td></tr><tr><td>其他</td><td>默认隔离级别是可重复读（REPEATABLE READ），通过多版本并发控制（MVCC）+ 间隙锁（Next-Key Locking）防止幻影读</td><td>设计简单，数据以紧密格式存储</td></tr><tr><td>索引特性</td><td>主索引是聚簇索引，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。</td><td>DELAY_KEY_WRITE 选项：修改后，新索引数据写入内存中的键缓冲区，清理键缓冲区或者关闭表时才写入磁盘。极大提升写入性能，但崩溃时会造成索引损坏</td></tr><tr><td>全文索引</td><td>>= MySQL 5.6.4 ✅<br>  &lt; MySQL 5.6.4 ❌</td><td>✅<br>支持 BLOB 和 TEXT 的前 500 个字符索引</td></tr><tr><td>自有特性</td><td>内部优化：<br>1. 可预测性读加快读操作<br>2. 自适应哈希索引加速插入操作的插入缓冲区</td><td>1. 支持压缩表和空间数据索引<br>2.并发插入（CONCURRENT INSERT）：在表有读取操作的同时，也可以往表中插入新的记录</td></tr></tbody></table><hr><p>参考链接：<br><a href="https://github.com/CyC2018/CS-Notes/blob/master/docs/notes/MySQL.md#%E4%B8%89%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E" target="_blank" rel="noopener">技术面试必备基础知识：MySQL</a><br><a href="http://cxymrzero.github.io/blog/2015/08/17/myisam-innodb/" target="_blank" rel="noopener">MyISAM 与 InnoDB 区别</a><br><a href="https://juejin.im/post/5b1685bef265da6e5c3c1c34" target="_blank" rel="noopener">MySQL 常见的两种存储引擎：MyISAM 与 InnoDB 的爱恨情仇</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>播客札记（一）</title>
      <link href="/podcast-note-1/"/>
      <url>/podcast-note-1/</url>
      
        <content type="html"><![CDATA[<h1 id="翻转问答-VOL8-亲密关系"><a href="#翻转问答-VOL8-亲密关系" class="headerlink" title="翻转问答 VOL8 | 亲密关系"></a>翻转问答 VOL8 | 亲密关系</h1><p><a href="https://player.fm/series/flip-radio/fan-zhuan-wen-da-vol8-lai-ba-ni-men-zui-guan-xin-de-na-ge-wen-ti-qin-mi-guan-xi" target="_blank" rel="noopener">Episode Archive</a></p><h2 id="亲密关系的特点"><a href="#亲密关系的特点" class="headerlink" title="亲密关系的特点"></a>亲密关系的特点</h2><ul><li>个人主义社会——代表排除共同体、排除外部主张的合理性，关注自我的合理性，且自我合理性不与所处共同体相关，是一种纯粹的根本的自我。</li><li>亲密关系是一种纯粹关系，与个人主义的自我产生关联，过去的亲密关系属于共同体（家庭、集体），如今属于自我</li><li>现代自我拥有物理和心理意义上更多的私人空间，亲密关系与私人空间的冲突恰是其特殊性。</li><li>亲密关系可以充分满足自我认可。因为：<ol><li>亲密关系是自信心和基础安全感的来源</li><li>亲密关系是制度化社会中几乎唯一的非制度要素的情景，用以释放制度压抑（福柯提出性和药物释放制度压抑）</li><li>荣格心理学认为，亲密关系是人与自身异性人格（anima 和 animus）达成和解的要素，即是自身自信</li></ol></li></ul><h2 id="亲密关系为何脆弱"><a href="#亲密关系为何脆弱" class="headerlink" title="亲密关系为何脆弱"></a>亲密关系为何脆弱</h2><ul><li>现代生活中，维系亲密关系的外部必然性消失，促使人反思自身的亲密关系，但亲密关系本身禁不起反思</li><li>社会流动性越来越大，增加了更多亲密关系的选择</li><li>亲密关系博弈成为囚徒困境博弈，结合亲密关系边际效应使人更愿意考虑成本和收益而做出选择。</li><li>开放式关系看似消解了亲密关系的囚徒困境，但依旧无法达成 anima 和 animus 和解，且个人主义的本质下，亲密关系是一对一的。</li></ul><a id="more"></a><h2 id="现代知识异化中对亲密关系的-5-种关键隐喻"><a href="#现代知识异化中对亲密关系的-5-种关键隐喻" class="headerlink" title="现代知识异化中对亲密关系的 5 种关键隐喻"></a>现代知识异化中对亲密关系的 5 种关键隐喻</h2><ol><li>健康——感情健康。根本原因是纯粹的亲密关系失去了基础。难免被套用到客观评判体系，引入制度和技术对亲密关系进行调和。</li><li>企业——如何「经营」感情。</li><li>镜像神经元——充分了解对方、完全换位思考理解对方。</li><li>信仰——亲密关系是心诚则灵的东西。信仰在宗教中只照顾生活中与自我存在相关的绝对要素，如救赎——而不是现实功利主义在乎的东西。</li><li>自我——爱别人首先要爱自己。这是纯粹个人主义对亲密关系的排除。但除了自恋之外的「爱」本身就是否定自我的过程，要爱自己，不得不承认宾我与主我的存在，并反对接受宾我的反思。能够做到彻底的自爱的人，定是一个绝对自私的人。</li></ol><h2 id="如何保卫亲密关系"><a href="#如何保卫亲密关系" class="headerlink" title="如何保卫亲密关系"></a>如何保卫亲密关系</h2><ol><li>不仅保卫亲密关系，也要保卫其他真正的关系——如亲情关系、友情关系</li><li>通过其他真正的关系来锻炼自己承担人际风险的能力，从而减弱自己的胆怯和容易在亲密关系中收到的伤害。</li></ol><h1 id="翻转问答-VOL9-中医"><a href="#翻转问答-VOL9-中医" class="headerlink" title="翻转问答 VOL9 | 中医"></a>翻转问答 VOL9 | 中医</h1><p><a href="https://player.fm/series/flip-radio/fan-zhuan-wen-da-vol10-zhong-yi-ying-gai-ru-he-kan-dai-zhong-yi-he-xi-yi-de-dui-bi" target="_blank" rel="noopener">Episode Archive</a></p><ul><li>伪科学是指任何经宣称为科学，或描述方式看起来像科学，但实际上并不符合科学方法基本要求的知识、缺乏支持证据，经不起可信性测试，或缺乏科学形式，伪科学常常使用模糊的、自相矛盾的、夸张的或无法证明的主张，过度依赖确认而不是严格的反驳，缺乏其它专家的公开确认，缺乏系统化、理性化的理论过程。</li><li>中医是“伪科学”还是“非科学”？</li><li>科学还原论试图将各种领域完全祛魅，进行彻底的科学化。中医是否需要像艺术、宗教一样进行科学化？人的身体和医学一定要“科学化”吗？</li></ul><h2 id="物理世界是否必须科学化？"><a href="#物理世界是否必须科学化？" class="headerlink" title="物理世界是否必须科学化？"></a>物理世界是否必须科学化？</h2><ul><li>物理世界的分类：<ol><li>真实感受建构的世界：食物-味觉，按摩-触觉</li><li>目的建构的世界：与目的高度相关——交通、建筑</li><li>数学建构的世界：完全的抽象世界</li></ol></li><li>真实感受的物理世界的语汇与科学的语汇存在范式差异：如味觉「鲜」（厨师烹饪时加糖提鲜）实际并非用科学语境下的「鲜味」。所以并非所有场景都要用科学语汇来替代真实感受的物理世界的语汇。</li><li>目的的物理世界由于存在理论与实践的差异，但并非所有实践都需要确切的理论认识：如鸟的飞行行为本身并不依赖于理论认识；部分尖端科技的发现（认识）是实践（实验）中的偶然，并非现有认识才有实践。</li><li>数学（及其相关）的物理世界由于完全抽象而进行了科学化：如天文学的观测结果、基因层面的理论等。</li></ul><h2 id="医学是否应该属于数学的物理世界？"><a href="#医学是否应该属于数学的物理世界？" class="headerlink" title="医学是否应该属于数学的物理世界？"></a>医学是否应该属于数学的物理世界？</h2><ul><li>基础假设：科学构筑了现象世界以外的不能被感官感知的现象，这些东西是比被感官感知的东西更本质的原因。即如果能找到非无感现象的原因，则五感现象基本都是偏见和错误。</li><li>相信科学即相信上述基础假设。</li><li>现代医学的专业化细分使其可以属于数学的物理世界这一范畴。西医对细节化学现象的分析、对人体化学还原的做法是逻辑自洽的。</li><li>医学自洽是对细节化学现象的自洽，而非对人整体的自洽。</li><li>副作用的存在没有证伪任何化学理论，而是提出了更多难以解释的现象。</li></ul><h2 id="证伪是什么意思？证伪很重要吗？"><a href="#证伪是什么意思？证伪很重要吗？" class="headerlink" title="证伪是什么意思？证伪很重要吗？"></a>证伪是什么意思？证伪很重要吗？</h2><ul><li>「证伪 = 求真」是语言误用。</li><li>被证伪不代表因果性不存在。</li><li>只有科学可以被证伪，但日常医学实践并未以证伪的方式推进科学。</li><li>证伪、实证并非最重要的方法论。</li></ul><h2 id="西医的现状和逻辑问题"><a href="#西医的现状和逻辑问题" class="headerlink" title="西医的现状和逻辑问题"></a>西医的现状和逻辑问题</h2><ul><li>西医治疗的是微观的现象（症状），而非整个人体本身。</li><li>人体的健康状况不是细节现象，而整体宏观秩序。</li><li>西医的统计学基础决定了受众是社会整体，而非单个个体，西医以社会工程学为基础，而非个体研究为基础。临床检验流程，是从社会工程学角度确定药物对社会的安全性，而非对独立个体的安全性。同时，统计样本的选取，也左右着西医实际参考价值。个体差异的复杂性导致个体参与医学治疗的差异性。</li></ul><h2 id="中医有没有理论？"><a href="#中医有没有理论？" class="headerlink" title="中医有没有理论？"></a>中医有没有理论？</h2><ul><li>专家崇拜是现代性的一大问题。以信托的方式相信专家，是存在实际风险和问题的。</li><li>中医并非没有理论，而是非科学理论。</li><li>中医的理论前提是阴阳五行的信念，西医的理论前提是数学理论的实在。</li><li>实用主义角度来看，阴阳五行理论在某种程度上阐释了身体的现象和关系。我们承认其有理，但为何我们否认其「真」？</li></ul><h2 id="我们需要的一种“本体论”清醒"><a href="#我们需要的一种“本体论”清醒" class="headerlink" title="我们需要的一种“本体论”清醒"></a>我们需要的一种“本体论”清醒</h2><ul><li>认为科学发展可以一往无前，将有科学宗教和科学迷信的风险。</li><li>大多数科学的发现是应用领域的新应用，而非原理领域的新发现。</li><li>科学意义的「存在」和我们五感的「存在」并非相同意义，我们虽未以五感方式认知其科学「存在」，但我们对其有信任。这与阴阳五行理论的「存在」并无本质差异。</li><li>真理掌握我们，而非我们掌握真理。</li></ul><h2 id="为何中医话题敏感？"><a href="#为何中医话题敏感？" class="headerlink" title="为何中医话题敏感？"></a>为何中医话题敏感？</h2><ul><li>以公共说理和公共舆论为重要基础，科学的公共话题变得比较敏感。</li><li>人被隔绝的日常实践，通过口头表达和表达被人承认获得自我认知和实现。</li><li>随着互联网发展，公共言论和公共舆论与权力高度相关。</li><li>在公共说理领域，面对多变的环境和不确定性的受众，我们需要一种货币一样的硬通货来说理——普遍主义。</li><li>启蒙理性和科学，诞生于对神学的批判，但在批驳的同时继承了神学的确定性和普遍主义。</li><li>科学无法争取的普遍主义的领域，将被权力斥为不重要和无意义。如艺术、形而上学、人生价值。</li><li>认为「一个领域必须留给其专业的、有其实践经验的人」的想法，是十分傲慢、不负责任、导致社会进一步切割的观念。专家崇拜是现代性涌现的巨大问题，它带来社会盲目和个体自信心和安全感的丧失。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 播客札记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Podcast </tag>
            
            <tag> 播客 </tag>
            
            <tag> 翻转电台 </tag>
            
            <tag> 亲密关系 </tag>
            
            <tag> 中医 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SS/SSR中转V2ray起飞教程</title>
      <link href="/delegate-v2ray-traffic-to-ss-or-ssr/"/>
      <url>/delegate-v2ray-traffic-to-ss-or-ssr/</url>
      
        <content type="html"><![CDATA[<p>本文目标读者：</p><ul><li>拥有自建 V2Ray 代理</li><li>有机场使用经验</li><li>没钱买高价机场 / 乐于使(bái)用(piáo)公益机场</li><li>使用机场服务，但忌惮流量安全</li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前市面上已经有很多机场（提供 SS/SSR 服务的网站），且不乏众多公益机场，这些机场因为拥有一些好线路的服务器，所以在使用的时候可以获得较好的突破网络封锁的体验。比起自己购买一个垃圾服务器，使用时的龟速；以及购买一个优质线路服务器，承受每月高额费用；更不用说还要担心自己服务器被 GFW 认证的风险——使用机场真是省钱省心。但是隐私问题也不容小觑，支付时的隐私泄露按下不表，本文的初衷是规避使用机场时流量隐私泄露的问题——如何使用机场服务的同时不暴露自己的流量隐私。</p><p>V2Ray 除了支持自有协议 VMess 之外，还支持 Socks、Shadowsocks 等协议，配合自带的流量中转功能，可以在保护流量隐私的同时，借助机场起飞，最大程度上提升代理使用体验。</p><p>前面说这么多，说人话就是——花最少的钱，用最好的线路，让偷窥流量 / 监控流量的机场见鬼去吧。</p><h1 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h1><p><img src="https://i.loli.net/2019/04/01/5ca1b95248225.png" alt="无标题.png"></p><a id="more"></a><p>基本原理大致如下：</p><ol><li>V2Ray 客户端先将流量使用 VMess 协议加密</li><li>按照不同的加密方法：<br> SS 中转：V2Ray 客户端再使用 SS 协议加密，把两次加密后的流量发送到机场服务器进行中转<br> SSR 中转：V2Ray 客户端把 VMess 加密流量发给 SSR 客户端，SSR 客户端再使用 SSR 协议加密，把两次加密后的流量发送到机场服务器进行中转</li><li>机场服务器对流量进行 SS/SSR 解密后再把流量（VMess 协议加密流量）发往我们自建的 V2Ray 服务器</li><li>V2Ray 服务器正常访问网站</li><li>网站返回的数据按上述步骤和处理方式原路返回</li></ol><p>由于机场服务器收到的是 VMess 协议加密后的流量，加密方法又是我们自定义的，所以机场几无可能掌握我们的真实流量。下面动手实操。</p><h1 id="SS-中转-V2Ray-流量"><a href="#SS-中转-V2Ray-流量" class="headerlink" title="SS 中转 V2Ray 流量"></a>SS 中转 V2Ray 流量</h1><p>V2Ray 自身支持 Shadowsocks 协议，所以 SS 中转 V2Ray 流量按照官方的<a href="[https://toutyrater.github.io/advanced/outboundproxy.html](https://toutyrater.github.io/advanced/outboundproxy.html">白话文教程</a>来操作就行了。简单来说就是把配置文件中的 <code>outbounds</code> 部分设置为这样：<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处根据自己的V2Ray设置修改</span><br><span class="line">        <span class="string">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"1.1.1.1"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">8888</span>,</span><br><span class="line">            <span class="string">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="string">"id"</span>: <span class="string">"b12614c5-5ca4-4eba-a215-c61d642116ce"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"proxySettings"</span>: &#123;</span><br><span class="line">          <span class="string">"tag"</span>: <span class="string">"transit"</span>  // 把 V2Ray 流量发给 tag 名为 transit 的代理进行转发</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"shadowsocks"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处填上机场某个 SS 服务器的配置</span><br><span class="line">        <span class="string">"servers"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"2.2.2.2"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"aes-256-cfb"</span>,</span><br><span class="line">            <span class="string">"ota"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"password"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">1024</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"tag"</span>: <span class="string">"transit"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></p><h1 id="SSR-中转-V2Ray-流量"><a href="#SSR-中转-V2Ray-流量" class="headerlink" title="SSR 中转 V2Ray 流量"></a>SSR 中转 V2Ray 流量</h1><p>但是很多机场都是 SSR 机场，没有提供 SS 配置，那岂不是就不能用上面的骚操作了？既然 SSR 支持监听本地的 Socks 流量，V2Ray 又支持 Socks 协议传出，那我们只需要在本地同时打开 V2Ray 和 SSR 客户端，然后用 Socks 协议连接二者通信即可，相当于把上一节中 V2Ray 传出目标从服务器改为本地 SSR。那么配置文件中的 <code>outbounds</code> 部分就设置为这样：<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处根据自己的V2Ray设置修改</span><br><span class="line">        <span class="string">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"1.1.1.1"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">8888</span>,</span><br><span class="line">            <span class="string">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="string">"id"</span>: <span class="string">"b12614c5-5ca4-4eba-a215-c61d642116ce"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"proxySettings"</span>: &#123;</span><br><span class="line">          <span class="string">"tag"</span>: <span class="string">"transit"</span>  // 把 V2Ray 流量发给 tag 名为 transit 的代理进行转发</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;</span><br><span class="line">        <span class="string">"servers"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">          <span class="string">"address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">          <span class="string">"port"</span>: <span class="number">1080</span>  // 此处填写 SSR 客户端监听的本地端口</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"tag"</span>: <span class="string">"transit"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></p><p>以 Windows 平台为例，我们可以在客户端的「选项设置」中「允许来自局域网的连接」，并且设置 SSR 客户端监听的本地端口：</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95b997fe.png" alt="SSR设置"></p><p>完成设置后，在 SSR 客户端中选择想要使用的服务器节点，并且打开 V2Ray，需要代理的流量全部访问 <strong>V2Ray 客户端监听的端口</strong>即可。</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95d2597b.png" alt="选择SSR服务器节点"></p><p>如果设置正确，访问不存在的网站时，可以在 V2Ray 服务端日志中看到流量全部来自于我们选择机场服务器节点。</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95e30487.png" alt="V2Ray服务端日志"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="V2Ray-配置文件"><a href="#V2Ray-配置文件" class="headerlink" title="V2Ray 配置文件"></a>V2Ray 配置文件</h2><p>刚开始使用 V2Ray 的人可能会困惑于 V2Ray 配置文件的繁琐，下面提供几个与本文相关的，本人目前正在使用的 V2Ray 完整配置文件，其中客户端配置文件集成了基本的广告屏蔽和大陆直连，本地监听端口为 <code>1082</code>，可根据自己需要进行修改。同时也提供了最简单的服务端配置文件，仅供参考：</p><ul><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/ss-vmess-config.json" target="_blank" rel="noopener">SS 中转 V2Ray 客户端配置文件</a></li><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/ssr-vmess-config.json" target="_blank" rel="noopener">SSR 中转 V2Ray 客户端配置文件</a></li><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/server-config.json" target="_blank" rel="noopener">V2Ray 服务端配置文件</a></li></ul><p>另外，由于 SSR 中转 V2Ray 流量需要同时使用 SSR 客户端和 V2Ray 客户端，所以目前暂时无法在移动设备上实现，略有遗憾。但是既然都可以如此白嫖机场了，还是知足吧。如果你有什么好想法，不妨在评论区交流。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> VPS </tag>
            
            <tag> ShadowsocksR </tag>
            
            <tag> v2ray </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用HyperApp搭建Tiny Tiny RSS</title>
      <link href="/set-up-tiny-tiny-rss-with-hyperapp/"/>
      <url>/set-up-tiny-tiny-rss-with-hyperapp/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>VPS 需要先安装好 <code>docker-ce</code></li><li><a href="https://itunes.apple.com/app/apple-store/id1179750280?pt=118260435&amp;ct=guide&amp;mt=8" target="_blank" rel="noopener">HyperApp</a></li><li>一个已经解析正确的域名（ping 验证）</li><li>耐心。仔细。认真</li></ul><h1 id="HyperApp-服务端配置"><a href="#HyperApp-服务端配置" class="headerlink" title="HyperApp 服务端配置"></a>HyperApp 服务端配置</h1><h2 id="安装-PostgreSQL"><a href="#安装-PostgreSQL" class="headerlink" title="安装 PostgreSQL"></a>安装 PostgreSQL</h2><p>虽然 HyperApp 提供了相应的 PostgreSQL 应用一键安装，但是由于安装 Tiny Tiny RSS 时无法与其衔接，所以一并使用 <code>Docker Image</code> 方法进行安装。</p><a id="more"></a><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>sameersbn/postgresql:latest</td></tr><tr><td>Options</td><td><code>--name postgres --restart=always -v /srv/docker/postgres/data/:/var/lib/postgresql/ -e PG_PASSWORD=mydbpass -e DB_EXTENSION=pg_trgm -p 5432:5432</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>其他</td><td>所有其他设置均为空</td></tr></tbody></table><h2 id="安装-Tiny-Tiny-RSS"><a href="#安装-Tiny-Tiny-RSS" class="headerlink" title="安装 Tiny Tiny RSS"></a>安装 Tiny Tiny RSS</h2><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>wangqiru/ttrss</td></tr><tr><td>Options</td><td><code>--name ttrss --restart=always -e SELF_URL_PATH=https://你要给镜像站点的域名 -e DB_HOST=postgres -e DB_PORT=5432 -e DB_NAME=myttrss -e DB_USER=postgres -e DB_PASS=mydbpass</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>Nginx 设置名称</td><td>内容</td></tr><tr><td>域名</td><td>你要给镜像站点的域名</td></tr><tr><td>应用端口</td><td></td></tr><tr><td>Https</td><td>不重定向 HTTP 请求</td></tr><tr><td>域名</td><td>你要给镜像站点的域名（自动填写）</td></tr><tr><td>邮箱</td><td>域名所对应的邮箱</td></tr></tbody></table><ul><li>保存并且进行安装。请确保这时候 <code>Nginx Proxy</code> 以及 <code>Nginx SSL Support</code> 正常默认安装并且启动了</li></ul><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><p>安装 PostgreSQL 和 Tiny Tiny RSS 后还不能正常使用，还需要将两者连接起来。进入 VPS 的 SSH 窗口执行命令：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">docker<span class="built_in"> network </span>create ttrss_network</span><br><span class="line">docker<span class="built_in"> network </span>connect ttrss_network postgres</span><br><span class="line">docker<span class="built_in"> network </span>connect ttrss_network ttrss</span><br><span class="line">docker restart ttrss</span><br></pre></td></tr></table></figure><p>上述命令建立了一个名为 <code>ttrss_network</code> 的 docker 通讯网络，并将名为 <code>postgres</code> 和 <code>ttrss</code> 的容器连接到了这个网络内部。最后重启 Tiny Tiny RSS 容器。</p><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><ul><li><p>CentOS</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=80/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --add-port=443/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></li><li><p>Ubuntu</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">sudo ufw allow <span class="number">80</span></span><br><span class="line">sudo ufw allow <span class="number">443</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="配置使用-Tiny-Tiny-RSS"><a href="#配置使用-Tiny-Tiny-RSS" class="headerlink" title="配置使用 Tiny Tiny RSS"></a>配置使用 Tiny Tiny RSS</h1><h2 id="登录使用"><a href="#登录使用" class="headerlink" title="登录使用"></a>登录使用</h2><p><img src="https://i.loli.net/2019/02/26/5c74e8c180d1d.png" alt="Tiny Tiny RSS"></p><p>安装完成后，访问你给镜像站点设置的域名即可进入 Tiny Tiny RSS 登陆页面。默认账号是 <code>admin</code>，密码是 <code>password</code>。登录后务必修改密码。Tiny Tiny RSS 的其他设置技巧，可以参阅少数派的<a href="https://sspai.com/post/41302" target="_blank" rel="noopener">这篇文章</a>。</p><h2 id="全文输出"><a href="#全文输出" class="headerlink" title="全文输出"></a>全文输出</h2><p>一些网站并未提供完整的全文 RSS 源，而只提供了文章的摘要内容，阅读起来十分不便。作为 RSS 的重度用户，跳转到网站进行阅读实在是浪费时间。遇到这样的 RSS 源，除了可以使用内置了 Mercury 全文输出功能的客户端（iOS 平台 Reeder、Unread 等主流 RSS 阅读器支持）以外，还可以为自己搭建的 Tiny Tiny RSS 安装插件以支持 Mercury 功能。<br>下面还是使用 HyperApp 来操作，一步到位。</p><h3 id="安装-Mercury"><a href="#安装-Mercury" class="headerlink" title="安装 Mercury"></a>安装 Mercury</h3><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>wangqiru/mercury-parser-api</td></tr><tr><td>Options</td><td><code>-p 3000:3000</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>其他</td><td>所有其他设置均为空</td></tr></tbody></table><h3 id="防火墙设置-1"><a href="#防火墙设置-1" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><ul><li><p>CentOS</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=3000/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></li><li><p>Ubuntu</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">sudo ufw allow <span class="number">3000</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="配置-Mercury-插件"><a href="#配置-Mercury-插件" class="headerlink" title="配置 Mercury 插件"></a>配置 Mercury 插件</h3><ol><li>登陆 Tiny Tiny RSS，进入偏好设置（Preferences） - 插件（Plugins），启用 mercury_fulltext 的插件</li><li>登陆 Tiny Tiny RSS，进入偏好设置（Preferences） - 信息源（Feeds） -  Mercury_fulltext settings (mercury_fulltext) 选项卡。填入 <code>http://你要给镜像站点的域名或IP地址:3000</code> ，保存配置</li></ol><h3 id="开始使用-Mercury"><a href="#开始使用-Mercury" class="headerlink" title="开始使用 Mercury"></a>开始使用 Mercury</h3><ol><li>首先正常订阅一个 RSS 源</li><li>在首页左侧导航或订阅源管理中找到需要获取全文的订阅源，点击编辑订阅源（Edit Feed）</li><li>进入编辑订阅源（Edit Feed）窗口中的插件（Plugins）选项卡，勾选 <code>Get fulltext via Mercury Parser</code></li></ol><p>设置完成后，Tiny Tiny RSS 将根据你的自定义设定，对特殊 RSS 源使用 Mercury 拉取全文内容后再生成 RSS 内容。这样可以摆脱客户端的限制，在任何客户端上都能直接浏览全文 RSS 的文章。</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><ol><li><p>使用 HyperApp 安装两个镜像后为何还是显示尚未安装？<br>由于 HyperApp 是通过内部生成的容器名称自动识别的，但是安装镜像时我们指定了容器的 name，所以无法正常识别到容器，即显示尚未安装。</p></li><li><p>安装时可否不指定容器的 name？<br>指定容器的 name 是为了方便连接数据库，如果自己知道如何查找容器名称（前面命令中的 <code>--name</code> 参数），那么安装时不指定容器的 name 也是可行的。具体可以参阅使用 docker 的 <code>--link</code> 参数来连接两个容器。</p></li></ol><hr><p>参考链接：<br><a href="https://github.com/HenryQW/docker-ttrss-plugins" target="_blank" rel="noopener">Tiny Tiny RSS 容器镜像</a><br><a href="https://henry.wang/2018/04/25/ttrss-docker-plugins-guide.html" target="_blank" rel="noopener">A ttrss setup guide - Start your own RSS aggregator today</a><br><a href="https://sspai.com/post/41302" target="_blank" rel="noopener">如何搭建属于自己的 RSS 服务，高效精准获取信息</a><br><a href="https://www.hyperapp.fun/zh/advanced/docker-image-introduction.html" target="_blank" rel="noopener">Docker-image 介绍</a><br><a href="https://www.hyperapp.fun/zh/mirror.html" target="_blank" rel="noopener">超简单搭建常见 404 站点镜像</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> docker </tag>
            
            <tag> HyperApp </tag>
            
            <tag> Tiny Tiny RSS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>非常简单的Python3 HTTP服务</title>
      <link href="/create-simple-http-server-with-python3/"/>
      <url>/create-simple-http-server-with-python3/</url>
      
        <content type="html"><![CDATA[<p>多年前在<a href="http://weibo.com/haoel?s=6cm7D0" title="左耳朵耗子" target="_blank" rel="noopener">左耳朵耗子</a>的博客上看到<a href="https://coolshell.cn/articles/1480.html" target="_blank" rel="noopener">《非常简单的 PYTHON HTTP 服务》</a>一文，在急需建立 HTTP Server 的场合十分有用，比如临时分享文件之类。在 HTTP Server 访问的根目录下只需执行一行命令就能搞定：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure></p><p>但是随着 Python 2 逐渐被 Python 3 取代，上述命令无法继续使用。在 Python3 中没有 <code>SimpleHTTPServer</code>，而是直接使用<code>http.server</code> 即可。所以对应的 Python 3 命令是：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 -m http.server</span><br></pre></td></tr></table></figure></p><p>默认开启的 HTTP Server 服务监听的是 8000 端口，使用时注意系统防火墙是否放行。如需使用其他端口，只需在命令末尾加上端口号即可，如使用端口 1234：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 -m http.server 1234</span><br></pre></td></tr></table></figure></p><h1 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h1><p>上述 Python 运行的 HTTP 服务器必须前台运行命令，并实时输出 log，断开终端后自动停止服务。这时可以借助 <code>nohup</code> 命令使其后台运行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nohup python3 -m http.server &gt;&gt;/dev/null &amp;</span><br></pre></td></tr></table></figure></p><p>当然你也可以使用其他方法如 <code>screen</code> 等工具实现后台运行，再此就不赘述了。不过既然有更复杂的需要，那还是老老实实用 Nginx 吧。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> Python3 </tag>
            
            <tag> Python </tag>
            
            <tag> HTTP </tag>
            
            <tag> HTTP Server </tag>
            
            <tag> Web服务器 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux各种包管理换国内源</title>
      <link href="/replace-package-source-to-china-mirror/"/>
      <url>/replace-package-source-to-china-mirror/</url>
      
        <content type="html"><![CDATA[<p>在国外的机器上开发倒是没什么麻烦事，也不用操心这么多。但是由于众所周知的原因，在天朝可就麻烦多了，不想点法子的话下载依赖就够摸鱼一下午了。这么多包管理，不碰不要紧，一碰要狗命（单押x1 XD<br>干脆把手头用的这几个记一下，免得以后查来查去麻烦。</p><h1 id="一键换源脚本"><a href="#一键换源脚本" class="headerlink" title="一键换源脚本"></a>一键换源脚本</h1><p>写完 yum 和 apt 的部分才想起来，这种常见的东西应该是有脚本可以搞定的吧。找了下果然有<a href="https://www.oldking.net/697.html" target="_blank" rel="noopener">大佬</a>写好了的。<br>如果只是 Linux 软件包的话就用一个脚本搞定：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -qO- git.io/superupdate.sh | bash</span><br></pre></td></tr></table></figure></p><p>其他包管理的换源反正也不复杂，就手动弄一下。</p><a id="more"></a><hr><h1 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h1><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源</p><ol><li>备份原配置文件 <code>$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</code></li><li><p>换源（注意 OS Version）</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS 6</span></span><br><span class="line"><span class="comment"># wget 方式获取</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line"><span class="comment"># curl 方式获取</span></span><br><span class="line">$ curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo    </span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line"><span class="comment"># wget 方式获取</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="comment"># curl 方式获取</span></span><br><span class="line">$ curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure></li><li><p>刷新 cache 生效 <code>$ yum makecache</code></p></li></ol><h1 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h1><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源</p><ol><li>备份原配置文件 <code>$ cp /etc/apt/sources.list /etc/apt/sources.list_backup</code></li><li>清空配置 <code>$ echo &quot;&quot; &gt; /etc/apt/sources.list</code></li><li>换源（注意按 OS Version 进行添加） <code>$ vim /etc/apt/sources.list</code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ubuntu 14.04.5 LTS</span></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 16.04</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 18.04(bionic)</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 7.x (wheezy)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ wheezy main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ wheezy-proposed-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ wheezy main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 8.x (jessie)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 9.x (stretch)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br></pre></td></tr></table></figure></li></ol><h1 id="pip-pip3"><a href="#pip-pip3" class="headerlink" title="pip/pip3"></a>pip/pip3</h1><h2 id="永久换源"><a href="#永久换源" class="headerlink" title="永久换源"></a>永久换源</h2><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源<br>在配置文件中添加配置项 <code>vim ~/.pip/pip.conf</code><br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span>=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></p><h2 id="临时换源"><a href="#临时换源" class="headerlink" title="临时换源"></a>临时换源</h2><p>在使用 pip/pip3 命令安装软件时，在命令中添加参数 <code>-i https://mirrors.aliyun.com/pypi/simple/</code><br>例如升级 pip 的命令为：<code>pip install -U pip -i https://mirrors.aliyun.com/pypi/simple/</code></p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>使用 <a href="http://www.docker-cn.com/registry-mirror" target="_blank" rel="noopener">Docker 中国</a> 作镜像源<br>一般情况下修改配置文件<code>$ vim /etc/docker/daemon.json</code></p><p>添加下面配置项：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com/"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后重启 docker deamon 即可<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart docker</span><br></pre></td></tr></table></figure></p><p>如果是通过 snappy（Ubuntu 16.04+）安装的 docker 的话，配置文件路径和重启命令都不同，配置内容一样：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /var/snap/docker/current/config/daemon.json</span><br><span class="line">$ snap restart docker</span><br></pre></td></tr></table></figure></p><p>运行命令<code>$ docker info</code>，查看其中的配置项是否正确：<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Registry Mirror<span class="variable">s:</span></span><br><span class="line"> http<span class="variable">s:</span>//registry.docker-<span class="keyword">cn</span>.<span class="keyword">com</span>/</span><br></pre></td></tr></table></figure></p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker" target="_blank" rel="noopener">Docker 镜像使用帮助 [LUG@USTC]</a></p><h1 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h1><p>使用 <a href="https://pkg.phpcomposer.com/" target="_blank" rel="noopener">Packagist</a> 作镜像源</p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>任意目录下执行下例命令即可：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><h2 id="单个项目配置"><a href="#单个项目配置" class="headerlink" title="单个项目配置"></a>单个项目配置</h2><p>进入项目目录 <code>dir</code> 执行命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ composer config repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><p>使用 <a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝 NPM 镜像</a> 作镜像源<br>使用淘宝 NPM 定制的 <a href="https://github.com/cnpm/cnpm" target="_blank" rel="noopener">cnpm</a> (gzip 压缩支持) 命令行工具代替默认的 <code>npm</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>或者通过添加 <code>npm</code> 参数 <code>alias</code> 一个新命令:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or alias it in .bashrc or .zshrc</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'\n#alias for cnpm\nalias cnpm="npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">  --cache=$HOME/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">  --disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">  --userconfig=$HOME/.cnpmrc"'</span> &gt;&gt; ~/.zshrc &amp;&amp; <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 包管理 </tag>
            
            <tag> 换源 </tag>
            
            <tag> 国内源 </tag>
            
            <tag> 镜像源 </tag>
            
            <tag> npm </tag>
            
            <tag> docker </tag>
            
            <tag> composer </tag>
            
            <tag> yum </tag>
            
            <tag> apt-get </tag>
            
            <tag> pip </tag>
            
            <tag> pip3 </tag>
            
            <tag> 一键换源 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何优雅地找资源</title>
      <link href="/how-to-get-source/"/>
      <url>/how-to-get-source/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/11/10/5be5c84f8f10e.jpg" alt=""></p><p>其实在网络上需要查找一些什么资源并不像我们想象的那样难。如果学会利用搜索引擎，再加上几个好用的、值得信赖的网站，基本上可以事半功倍。所以对于普通人来说，做一个「资源帝」其实只是需要一个手册和方法论的指导而已。<br>著名的资源帝<a href="http://shedingkong.lofter.com/tag/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90" target="_blank" rel="noopener">设定控</a>提供的各类手册当然十分完美，但是我们实际用不到如此多的网站。除非你是松鼠症患者，有收集整理的心理刚需，否则资源手册的噪音大过实际效益。</p><p>这篇水分满满的文章也仅仅只是梳理一下笔者的资源搜索路径，按照几个主要的资源类型进行展开，顺便配上一些评（fei）论（hua），以供各位参考，基本上能搞定 80% 的书、影、音需求。</p><p>p.s. 关于文中的软件推荐，均以 Windows 为平台，暂未收录 macOS 相关软件。</p><a id="more"></a><h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><ul><li><p><a href="http://www.mlook.mobi/" target="_blank" rel="noopener">mLook</a><br>mLook 可以应付绝大多数的电子书需求，但是<strong>已经关闭开放注册</strong>。</p></li><li><p><a href="https://sk.kindleshare.cn/" target="_blank" rel="noopener">KindleShare</a><br>电子书搜索引擎 KindleShare 也还是不错的。</p></li><li><p><a href="http://readfree.me" target="_blank" rel="noopener">readfree</a><br>readfree 是我在众多书签中发掘到的质量上乘的付费下载网站，充值 10￥可以下载 1k 次，或者靠自己上传书籍的下载量来获取下载次数。我搜了几本书都有资源，当作备用网站不妨一试。</p></li><li><p><a href="https://www.easysearch.com.tw/" target="_blank" rel="noopener">EasySearch</a><br>EasySearch 是<a href="https://www.ymdie.com/archives/32219" target="_blank" rel="noopener">港台电子书</a>的搜索引擎，支持搜索博客來、<a href="https://www.kobo.com/tw/zh" target="_blank" rel="noopener">乐天 Kobo</a>、<a href="https://readmoo.com/" target="_blank" rel="noopener">读墨 Readmoo</a>、Taaze、Google Play 的电子书商品信息，你可以在上述网站购买电子书，使用各平台的客户端进行阅读。如果你想在 Kindle 上阅读 Kobo 商城购买的电子书，你可以按照<a href="https://twitter.com/yhyy135/status/1028389615730917376" target="_blank" rel="noopener">这个教程</a>进行操作。</p></li><li><p>Telegram 频道<br>如果你使用 <a href="https://telegram.org/" target="_blank" rel="noopener">Telegram</a> 的话（已被封锁），这里提供几个分享电子书的 Telegram 频道：<br><a href="https://t.me/zebookpush" target="_blank" rel="noopener">kindle电子书读书会</a>：频道每天据群友请求推书。只推原版无损高质 kindle 电子书。需要书时，直接前往<a href="https://t.me/zebook" target="_blank" rel="noopener">Telegram 群组</a>求书即可。<br><a href="https://t.me/booksforeverybody" target="_blank" rel="noopener">书籍分享</a><br><a href="https://t.me/free_programming_books" target="_blank" rel="noopener">电子书支援计划_技术分享</a>：分享技术类书籍为主</p></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://calibre-ebook.com/" target="_blank" rel="noopener">Calibre</a><br>Calibre 是使用 Kindle 的人必备的软件，可以把 mobi、epub、awz3、txt、pdf 等各种格式的电子书进行转换。</p></li><li><p><a href="https://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="noopener">SumatraPDF</a><br>SumatraPDF 是我在 Windows 上主要使用的电子阅读器，软件体积很小，而且可以打开 mobi、epub、azw3，满足了我日常所需。使用时，建议将<code>菜单 - 设置 - 高级选项</code>内的 <code>EbookUI - UseFixedPageUI</code> 值设为 <code>true</code>，否则无法在阅读时选中文本。</p></li></ul><h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><p>好像已经毫无疑问地迈入流媒体时代了，很久没有再下载过 mp3 文件，然后耐心维护本地曲库了。除非实在喜欢的音乐不妨下载一份在本地备用。</p><h2 id="网站-1"><a href="#网站-1" class="headerlink" title="网站"></a>网站</h2><ul><li><p><a href="https://zaihua.io/music/" target="_blank" rel="noopener">在花音乐搜索神器</a><br>该音乐搜索引擎支持网易、QQ、酷狗、酷我、虾米、百度、一听、咪咕、荔枝、蜻蜓、喜马拉雅、全民 K 歌、5sing。搜索后可试听、下载。音乐品质未知。</p></li><li><p><a href="https://lai.yuweining.cn/music" target="_blank" rel="noopener">音乐搜索神器</a><br>看样式应该和上面那个网站差不多。该音乐搜索引擎支持网易、QQ、酷狗、虾米、百度、咪咕。搜索后可试听、下载。音乐品质未知。</p></li><li><p><a href="https://pan.baidu.com/" target="_blank" rel="noopener">百度云</a><br>百度云依旧是文件分享的聚集地，利用<a href="http://www.xilinjie.com/" target="_blank" rel="noopener">西林街</a>和<a href="http://www.panc.cc/" target="_blank" rel="noopener">胖次</a>进行资源搜索以后，多半可以找到自己需要的资源。当然这两个网盘搜索引擎<strong>不仅限于查找音乐资源</strong>。</p></li><li><p><a href="http://www.mlook.mobi/" target="_blank" rel="noopener">OppsU!</a><br>站内有大量网友分享的正版专辑文件，多以 iTunes 的专辑文件为主。当然也由于版权和一些众所周知的原因，该网站注册门槛非常高，只有每年特定时间才会开放注册。</p></li></ul><h2 id="软件-1"><a href="#软件-1" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a><br>在民谣、电音、翻唱方面，网易云的资源还是比较丰富的，免费流播，付费下载，可备不时之需。想要下载网易云的音乐拷贝到其他设备上听，但是现在网易云的音乐有自己的 NCM 格式怎么办？不妨试试<a href="https://github.com/yoki123/ncmdump" target="_blank" rel="noopener">这个项目</a>的工具来去除音乐文件的保护，还原成正常的 mp3。</p></li><li><p><a href="https://www.spotify.com/" target="_blank" rel="noopener">Spotify</a><br>这是笔者目前主力使用的流媒体音乐平台。需付费（按区域选择不同，<a href="http://mts.io/projects/spotify-pricing/" target="_blank" rel="noopener">价格不同</a>），跨平台，曲库以非华语音乐为主，当然主流的华语音乐也够应付大多数需求。</p></li></ul><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="网站-2"><a href="#网站-2" class="headerlink" title="网站"></a>网站</h2><h3 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h3><ul><li><p><a href="http://yyets.com/" target="_blank" rel="noopener">人人字幕组</a><br>人人字幕组毫无疑问是国内数一数二的字幕组。字幕样式和翻译功底都算上乘。官网提供了各平台客户端的下载链接，以及相关网站的链接。</p></li><li><p><a href="http://www.zimuzu.io/" target="_blank" rel="noopener">人人影视资源下载站</a><br>下载站的网址非常好记：<code>zimuzu.io</code>。免费注册会员，每日签到进行升级，除特殊影片可能会有等级限制查看，其他正常资源一律免费提供下载链接，登录后即可查看下载链接。</p></li><li><p><a href="http://cili001.com/" target="_blank" rel="noopener">磁力站</a><br>由于众所周知的原因，一部分资源不能在人人影视资源下载站提供下载，甚至不能提供下载链接，所以磁力站作为第三方搜索引擎，其数据基本涵盖了所有人人影视新旧资源的下载链接。你可以在这里找到几乎所有在人人影视字幕组发布过的资源链接。</p></li><li><p><a href="http://www.dysfz.cc/" target="_blank" rel="noopener">电影首发站</a><br>该站提供大量电影下载链接，无需注册，完全免费，使用迅雷等下载工具即可正常下载。笔者主要用来下载国产电影，该站也提供其他影视资源。</p></li></ul><h3 id="美剧"><a href="#美剧" class="headerlink" title="美剧"></a>美剧</h3><ul><li><a href="http://www.zimuzu.io/" target="_blank" rel="noopener">人人影视资源下载站</a><br>人人字幕组除了提供含有中文字幕的电影下载之外，还有丰富的美剧资源。</li></ul><h3 id="纪录片"><a href="#纪录片" class="headerlink" title="纪录片"></a>纪录片</h3><p><a href="https://space.bilibili.com/22121599/#/" target="_blank" rel="noopener">哔哩哔哩-纪录片之家</a><br>哔哩哔哩站内有很多纪录片，而且很多视频的弹幕已经有野生翻译君助力。你可以在纪录片之家的 B 站首页进行查找，然后在线观看。</p><ul><li><p><a href="http://www.daolan.net/index.php" target="_blank" rel="noopener">道兰同好会</a><br>该站是一个纪录片译制论坛，主要译制 NHK 纪录片。</p></li><li><p><a href="https://kamonka.blogspot.com/" target="_blank" rel="noopener">NHK纪录片精选</a><br>NHK（日本放送协会）制作和播放的纪录片，由国内爱好者翻译制作，可直接下载，无需注册。P.S. 该网站已被审查封锁</p></li></ul><h3 id="动漫"><a href="#动漫" class="headerlink" title="动漫"></a>动漫</h3><ul><li><a href="http://share.dmhy.org/" target="_blank" rel="noopener">动漫花园</a><br>一个朋友介绍给我的追番站点。不过如果你是 ACG 人士，应该也不需要我过多介绍。</li></ul><h2 id="软件-2"><a href="#软件-2" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://potplayer.daum.net/" target="_blank" rel="noopener">PotPlayer</a><br>万能播放器。没有它打不开的视频文件，如果有，那多半是文件坏了。笔者有且只用它作为视频播放工具。</p></li><li><p>百度云文件下载软件<br>众所周知百度云非 VIP 会员有下载限速。这里提供三款不限速的下载软件。为了避免怀孕，建议以自己的小号登录使用。笔者使用的是 PanDownload，非常好用，下载速度非常快，首推。<br><a href="http://pandownload.com/" target="_blank" rel="noopener">PanDownload</a><br><a href="http://www.speedpan.com/" target="_blank" rel="noopener">速盘</a><br><a href="https://github.com/proxyee-down-org/proxyee-down" target="_blank" rel="noopener">Proxyee Down</a></p></li></ul><p>暂时写这么多，如果你有什么好的推荐不妨在评论区留言交流。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> mp3 </tag>
            
            <tag> 资源 </tag>
            
            <tag> 美剧 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 资源帝 </tag>
            
            <tag> 找资源 </tag>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>回忆就像衣柜里的春夏秋冬</title>
      <link href="/memory-of-Aug/"/>
      <url>/memory-of-Aug/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/09/07/5b9159755c82a.png" alt="Electric July"></p><p>特别喜欢这张<a href="https://movie.douban.com/subject/26312156/" target="_blank" rel="noopener">电影</a>画面，或许是因为正好自己的经历和电影如此的相映成趣，好像自己就站在那个田野里，静静地看着远方。因为自己心里的那个人或许已经再没有办法陪伴在自己的身边，而自己也无力去攀上通向远方的断桥。</p><a id="more"></a><p>当阳光洒在脸颊和手臂上的时候，当雨水淋湿衣袖的时候，增添的有可能是温暖和冰冷的回忆，也有可能只是在博客文章里寥寥的几笔。温度的差异，提醒自己的不是谁喜欢着谁，而是那个当下，你真真切切地和谁在一起。因为有了不一样的经历，所以它才能够像是收在柜子里的衣服那样，任着自己的性子取出那些让自己喜欢的和不喜欢的，然后花点心思慢慢更衣。最后在别人眼里，看到的其实是自己想要让人看到的衣冠，而那些丑陋的行迹，终究只能自己一个人去思考与犹豫。</p><p>回忆就像衣柜里的春夏秋冬，那些久久没有临幸的外衣，渐渐生出了令人厌恶的霉点。因为家乡四季如春，没有令人难受的湿气，所以面对发了霉的东西慌了阵脚、不知所措，索性把它们一件一件摊开来，检视它们的每一个细节，然后一声叹息。挑三拣四后的思绪一团乱麻，索性全都扔进洗衣机，好好洗涤一番。</p><p>亦或是长了教训，把它们一件一件展开来，找个衣架挨个挂起来晾晒一番。却在这时候才发现那些经不住时间考验的回忆，已经开始泛黄，任凭我怎么漂白，依旧褪不去历史的影子。最怕的应该是心爱的那件回忆上，不知什么时候破了洞，已经再也没有办法补齐，只能任由它这样下去，或者再一声叹息，就这样将其丢弃。</p><p>朋友戏谑我说：</p><blockquote><p>你已经可以写“八月，又溜走了”</p></blockquote><p>我什么也没有说，多半不是因为我没法正面回应自己的拖延，而是因为自己心里的八月还没有结束。</p><blockquote><p>这个八月，我到底在做什么？</p></blockquote><p>我一遍遍这样问自己，发现其实心里的答案早就如此明晰，只是我不愿承认与接受而已。如果要认真解释的话，那多半是因为夏日初秋时分，我拥有了和电影里如出一辙的悸动与情愫。在这段感情里，我试着在探寻「自我」的意识与定义，就像听到的那期<a href="http://cxks.in/16?t=720" target="_blank" rel="noopener">播客</a>里说，<code>理解某一刻的情绪，或许不像解题目一样可以获得确定的答案；对某一个情绪的理解，最后可能是对情绪状态中对自我的关注，是一整幅拼图中的一个碎片。当我们关注到越来越多的碎片，我们就会越来越感受到自我</code>。我好像越发明白在感情中成长所指的意义——我们总是感谢一些人一些事，教会我们了什么道理，实际上在人与人的互动关系中，更多的是自我的体察与反思，最终得出或利己或利他的选择。当自己真真切切地失去的时候，才会比得到的时候更加透彻地领悟某些老生常谈的道理。于是说到底，<strong>有些道理，毕竟还是需要自己经历过的才会明白。在自己亲历之前，别人说再多次也不以为意。</strong></p><p>一个人的夜晚，身体已经十分疲惫，却还是不愿睡去。不同于以往的无聊与烦躁，现时最不愿面对的，是睡眠带来的安稳——平日渴求的安逸，没什么值得被记忆和记录的；而现在的我却如此害怕闭上双眼进入梦乡的时候，回忆的气泡慢慢破碎，等我醒来的时候一个也不剩。在我拼命想要去写下些什么东西的时候，思来想去的结果，除了矫情，好像也难以道出什么心情。在旁人看来无所谓的事情，终究只有自己才知道它放在心里的什么位置。经常想起马伊俐在<a href="https://v.youku.com/v_show/id_XMjkxODg4MDM1Ng==.html" target="_blank" rel="noopener">《圆桌派》</a>里对「作」的举例，于是在自己身上发现了印证——<em>永不安分，永不知足，永远折腾，永远没完</em>。也许是自己还没长大吧，不过又有谁心甘情愿地承认自己是巨婴罢？</p><p>九月已经过去了几个白昼，可对于我来说，八月才刚刚结束。</p><p>八月，与其说是溜走了，不如说，是我还没来得及告别，就只能眼睁睁看着他的背影渐渐远去。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>V2ray配置Telegram的MTProto协议</title>
      <link href="/set-mtproto-for-telegram-via-v2ray/"/>
      <url>/set-mtproto-for-telegram-via-v2ray/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>V2ray 是继 ShadowSocks 后又一个蓬勃发展、欣欣向荣的代理利器，目前支持多种传输协议。现在可以使用它设置 MTProto 协议，搭建 Telegram 的内部代理服务器，实现无需打开其他突破网络封锁的客户端即可正常通讯的目的。</p><h1 id="V2ray-的代理原理"><a href="#V2ray-的代理原理" class="headerlink" title="V2ray 的代理原理"></a>V2ray 的代理原理</h1><p>v2ray 的代理原理和配置项的关系如下图：<br><img src="https://i.loli.net/2018/08/15/5b73c180d5ef0.png" alt="v2ray原理图及配置关系"></p><p>p.s.上图为 v2ray v4.0 之前的代理原理图。v2ray v4.1+ 合并了输入输出配置项：</p><ul><li><code>inbounds = inbound + inboundDetour</code></li><li><code>outbounds = outbound + outboundDetour</code></li><li>为便于理解，你可以将上图 <code>inbound</code>、<code>inboundDetour</code> 视为各种不同的代理方式，全部定义在新版配置文件的 <code>inbounds</code> 配置项中，<code>outbounds</code> 亦同理。</li></ul><a id="more"></a><p>v2ray 的的配置格式都是相同的，理论上不区分客户端和服务端，<code>客户端和服务器通用一种形式，只是实际的配置不一样。</code>v2ray 配置文件的配置项有以下几个部分：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"api"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"dns"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"stats"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"policy"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"reverse"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [],</span><br><span class="line">  <span class="attr">"transport"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们重点关注其中传入、传出和路由配置，即：<code>inbounds</code>、<code>outbounds</code>、<code>routing</code>。</p><ul><li><code>inbounds</code> 和 <code>outbounds</code> 定义多种不同的传入、传出方式。</li><li>自定义不同的传入和传出方式，然后用路由（<code>routing</code>）进行绑定，就可以实现定制化代理。</li></ul><p>下面举几个栗子：</p><ol><li>仅用来突破网络封锁：客户端 <code>outbounds</code> 设置一个 VMess 协议传出、服务端 <code>inbounds</code> 设置一个 VMess 协议传入，服务端 <code>outbounds</code> 设置一个 freedom 方式传出。这样，客户端与服务端将使用 VMess 协议加密流量突破网络封锁，而服务端访问被封锁网站没有特殊加密，使用正常网络传输协议。</li><li>服务端配置其他的传入、传出协议实现不同于的传输需求。比如服务端添加一组 MTProto 协议对应的传入、传出方式，即可以使用 Telegram 内部代理。或者使用 shadowsocks 协议传入，再用 vmess 协议传出给下一个服务端，实现多级代理等等。</li><li>多种传入、传出方式可以共存，打上标签（<code>tag</code>）以后，用路由（<code>routing</code>）实现自由绑定，所以仅使用 v2ray 就可实现多种方式的传输需求，比如同时支持 VMess、Shadowsocks、MTProto、Socks 协议进行通讯。v2ray 支持<a href="https://www.v2ray.com/chapter_02/02_protocols.html" target="_blank" rel="noopener">多种协议</a>，发挥你的创造性去使用吧。</li></ol><h1 id="MTProto-的配置"><a href="#MTProto-的配置" class="headerlink" title="MTProto 的配置"></a>MTProto 的配置</h1><p>v2ray 的<a href="https://www.v2ray.com/chapter_02/protocols/mtproto.html" target="_blank" rel="noopener">官方手册</a>提供了不完整的样例配置</p><h2 id="传入代理"><a href="#传入代理" class="headerlink" title="传入代理"></a>传入代理</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"inbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"tg-in"</span>,</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">443</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"users"</span>: [&#123;<span class="attr">"secret"</span>: <span class="string">"b0cbcef5a486d9636472ac27f8e11a9d"</span>&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>传出代理：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"outbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"tg-out"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>路由：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"routing": &#123;</span><br><span class="line">  "rules": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">      <span class="attr">"inboundTag"</span>: [</span><br><span class="line">        <span class="string">"tg-in"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"outboundTag"</span>: <span class="string">"tg-out"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="配置文件示例"><a href="#配置文件示例" class="headerlink" title="配置文件示例"></a>配置文件示例</h1><p>这里提供一个主要使用 VMess 协议突破网络封锁，额外支持 MTProto 协议实现 Telegram 内部代理的配置文件，其中：</p><ul><li>服务端设置的端口务必加入服务器防火墙例外，否则可能无法正常连接</li><li>UUID 可以在 <a href="https://www.uuidgenerator.net/" target="_blank" rel="noopener">Online UUID Generator</a> 网站生成</li><li>用户密钥可以使用命令 <code>openssl rand -hex 16</code> 生成</li></ul><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: 填写 VMess 协议监听端口,</span><br><span class="line">      ,</span><br><span class="line">      "protocol": "vmess",</span><br><span class="line">      "settings": &#123;</span><br><span class="line">        "clients": [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"填写UUID，不要去掉引号"</span>,</span><br><span class="line">            <span class="attr">"level"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">64</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"tg-in"</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">      <span class="attr">"port"</span>: 填写 MTProto 协议监听端口,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"users"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"secret"</span>: <span class="string">"填写用户密钥，不要去掉引号"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "outbounds": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"tg-out"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "rules": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:private"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"inboundTag"</span>: [</span><br><span class="line">          <span class="string">"tg-in"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"tg-out"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Telegram-内部代理设置"><a href="#Telegram-内部代理设置" class="headerlink" title="Telegram 内部代理设置"></a>Telegram 内部代理设置</h2><p>将服务器的 IP 地址、配置的 MTProto 协议监听端口、用户密钥填入 Telegram 的代理设置中即可使用。或者使用构造链接在 Telegram 内部打开进行自动设置：</p><p><code>https://t.me/proxy?server=服务器IP地址&amp;port=服务器MTProto协议监听端口&amp;secret=用户密钥</code></p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">1082</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"auth"</span>: <span class="string">"noauth"</span>,</span><br><span class="line">        <span class="attr">"udp"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="attr">"security"</span>: <span class="string">"auto"</span>,</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"填写 UUID 与服务端一致，不要去掉引号"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"port"</span>: 服务端 VMess 协议监听端口,</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"服务端 IP 地址，可以去掉引号"</span>,</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:private"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"domain"</span>: [</span><br><span class="line">          <span class="string">"geosite:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>参考链接：<br><a href="https://www.v2ray.com/chapter_02/01_overview.html" target="_blank" rel="noopener">v2ray 配置文件格式</a><br><a href="https://ntgeralt.blogspot.com/2018/08/telegramv2raymtproxy.html" target="_blank" rel="noopener">让 Telegram 连接 V2ray 服务端 mtproxy 协议</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> VPS </tag>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>七月，已经溜走了</title>
      <link href="/july-is-gone/"/>
      <url>/july-is-gone/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/07/31/5b608698e9572.jpg" alt="joined-screenshot4.jpg"><br>(IMG Source: <a href="https://en.wikiquote.org/wiki/Fight_Club_%28film%29" target="_blank" rel="noopener">Fight Club</a>)</p><p>我好像已经忘了这个月是怎么开始的了。我试着从屏幕右下角的几个数字向前回溯，然后试图写下点什么无病呻吟的东西，用来给「时间」这把尺子多加一个叫做七月的刻度。</p><a id="more"></a><p>一直不愿意在自己的博客上写一些日记随笔类的东西，心想着这些胡思乱想被人看到那会是一件多么羞耻的事情。就像微信里的朋友圈，满足的不过是 Peeping Tom 们内心的窥私欲——在通讯录里上下滑动，看到某个叫做 A 的家伙，想起他对于自己的身份，想起自己是在何时何地因为什么机缘巧合与其相识，然后点开他的朋友圈。如果他没有使用那个叫做「仅显示最近三日的状态」的奇技淫巧的话，他一点一滴想被我窥视的东西，便毫不掩饰地冲入我的视野——哎哟喂，这兔崽子活得也还不错哦。哦哟，这龟孙子也不过如此嘛……<br>可能会感慨一下谁谁谁的人模狗样，或者某某某的人生轨迹。但这不过是给自己一个「这世界不过如此」的充分条件罢了，看似充满信息的摄入，不过只能留下转身便忘了的回忆罢了。</p><p>把过去一个月的经历写出来，然后琢磨着能有什么联系和想法，慢慢想到了几个关于「改变」的印记：</p><ul><li>人生第二次搬家——明显的空间尺度上的「改变」</li><li>看了一场城市历史摄影展——明显的时间尺度上的「改变」</li><li>闲逛了一场动漫展——不同次元间的「改变」</li><li>一本<a href="https://books.google.com.hk/books?id=QGw7DwAAQBAJ&amp;dq=%E5%87%BA%E8%B3%A3%E4%B8%AD%E5%9C%8B&amp;hl=zh-CN" target="_blank" rel="noopener">政治类书籍</a>，但是写读书笔记时又在考虑要不要做自我审查——在言论身份上的「改变」</li><li>一本<a href="https://book.douban.com/subject/30217599/" target="_blank" rel="noopener">推理小说</a>——虚构与现实间的「改变」</li></ul><p>在此之前，从没有用这样的视角去观察过周遭的事情，也就想到了关于「时间」的概念。一次和 <a href="https://twitter.com/ibingfei" target="_blank" rel="noopener">Andy</a> 聊天提及<a href="https://zh.wikipedia.org/zh/%E7%8F%BE%E4%BB%A3%E6%80%A7" target="_blank" rel="noopener">现代性</a>中时间概念对人类社会和自我的影响，自然地顺着这条思维路径去反思自身行为方式和目的。<br>也就是最近一段时间的事情，突然想买一个卡片相机拍 vlog，至少「拥有一个 DV 去记录动态的生活和经历」是几年前代购清单上的一笔，只是取代 DV 位置的已不再是新款的 DV，而是一个又一个样貌趋同的被称之为 smart phone 的 stupid phone。<br>「你到底是为了什么想去拍？是为你自己，还是为了分享？」<br>「你留恋的，是那时那人那地的瞬间，还是春夏交替间的变换？」<br>若不是因为「时间」这人类社会定义的概念，若不是我们每个人拥有的时间观念，我们又怎会产生种种臆想？<br>我很难坚定地去说做的事情完完全全为了自己，因为如此廉价的分享渠道和人类自身的社会性，在冥冥中促使我们更想把自己的所思所想所记录传达出去，让自己的文字和思想通过如此低效的方式转移到另外的地方去。</p><p>尼采在《查拉图斯特拉如是说》里这样写道：</p><blockquote><p><strong><strong>我教你们超人</strong></strong>。人是应该被超越的东西。你们做了什么来超越他呢？<br>一切生物至今都创造了超越自己的东西：你们要做这大潮中的落潮，宁可回到动物那里去，也不愿意超越人类？<br>对人类来说，猿猴是什么？一个笑柄或是一个痛苦的耻辱。对超人来说，人也一样：一个笑柄或是一个痛苦的耻辱。<br>你们完成了由虫到人的过程，你们身上许多东西仍然是虫。你们曾经是猿猴，现在人比任何一只猿猴更是猿猴。<br>但是你们当中的最聪明者，也不过是植物与幽灵的矛盾体与共同体。但是我吩咐你们变成幽灵还是植物？<br>瞧，我教你们超人！</p></blockquote><p>如果说，hack myself 也算是一种趋近「超人」的行径的话，那么我相信<a href="https://zh.wikipedia.org/wiki/%E5%BE%B7%E7%88%BE%E6%96%90%E7%AE%B4%E8%A8%80" target="_blank" rel="noopener">德尔斐箴言</a>里那句 <code>Be Yourself or Know Yourself. （认识你自己。）</code> 也许会是我一辈子值得探索和作答的考题。</p><p>我还没落笔，七月，已经溜走了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《拜訪革命》读书笔记</title>
      <link href="/the-portrait-of-revolution-clip/"/>
      <url>/the-portrait-of-revolution-clip/</url>
      
        <content type="html"><![CDATA[<p>第 11 頁<br>似曾相識的開端，踏出截然不同的路徑，兩厢對照，變革的命運更加清晰。對當權者而言，如果開放可以延續權力，他便鬆手，如果鐵腕能夠穩固執政，他便握拳。然覆手雲雨之間，時機、地理、民意、外力，多少偶然互相撞擊，革命的軌道像雲霄飛車一樣不知道下一秒的起落。</p><hr><p>第 12 頁<br>許多美國人不關心世界，連護照都沒有，但這並不妨礙美國成為頭號自由之邦。但是否正因如此，以強烈排外為面貌的右翼風潮，近些年在美國、在歐洲急速抬頭？外交政策的制訂雖是精英之事，若大眾與精英之間嚴重脫節，英國脫歐、川普上台之類的事情就會一再震驚世界。</p><a id="more"></a><hr><p>第 13 頁<br>「走到某處邊界，總想看看，邊界背後是什麼，於是一路走下去。」</p><hr><p>第 20 頁<br>我好奇地追問篤信神明的尼泊爾人，為何支持不信宗教的「毛澤東主義」。「哦，不，這沒有關係，他們為國家做好事。」私營旅行社的庫馬拉說，毛派改變了窮苦大眾的命運，他押寶毛派主導的政府將帶來新的穩定、新的生意。</p><hr><p>第 21 頁<br>紅色到來之前，尼泊爾經歷了血色。<br>一九九六年起，普拉昌達領導毛派武裝與政府展開長達十年的內戰，造成約一萬三千人死亡，兩萬多人逃離家園，超過八百人失蹤。<br>有西方記者稱毛派武裝曾在加德滿都街頭射殺不服從命令的計程車司機，而他們雇傭十六歲以下的娃娃兵，也不是什麼秘密。萬幸，毛派最後放棄武力進占加德滿都， 一紙協議，國人止血。</p><hr><p>第 36 頁<br>整個尼泊爾百分之八十以上的人務農，其中一半人口掙扎在聯合國劃定的貧困線以下。土地掌握在極少數世襲地主手中，耕者衹賺取微薄的酬勞。</p><hr><p>第 42 頁<br>「兩伊戰爭對伊朗，相當於中國的朝鮮戰爭。」一名常駐當地的中國記者分析說，都是新生政權第一次遭遇對外戰爭，必傾性命一搏。何梅尼曾經流亡伊拉克宗教聖地納吉夫。迫於伊朗國王壓力，伊拉克總統薩達姆·海珊(Saddam Hussein)逐他出境。雖轉投巴黎，如魚得水，但革命成功後，何梅尼沒有忘記海珊落井下石，而海珊更惦記著在鄰國政權更迭時乘虛而入。</p><hr><p>第 44 頁<br>巴勒維國王的父親禮薩廢除了面紗。這位騎兵出身的將軍不以伊斯蘭教為生活準則，相信伊朗的出路在於全面西化。二十世紀初，東方文明國度或主動或被動，認可現代化道路的面貌就是西方化告別面紗，就是告別過去與落後。<br>二十世紀七〇年代，在反對巴勒維國王的抗議中，許多城市婦女主動包上頭巾——不是因為贊同伊斯蘭生活方式，而是表達對王權的不滿和對宗教女性的同情。但是她們沒有料到，推翻王權之後戴不戴面紗不再是一個選項——底層宗教熱情釋放出來，鋪天蓋地呼應何梅尼政教合一的設想。</p><hr><p>第 45 頁<br>我在伊朗的時候，趕上巴西世界盃半決賽。伊朗人酷愛足球，但是政府有令，不得聚眾圍觀。二〇〇九年事件以來，「人多」是個敏感詞，足球也變得政治起來。二〇一〇年南非世界盃，伊朗國家隊球員手腕上纏著綠絲帶上場，表達對穆薩維的支持。但既然政府有令，大部分伊朗人就在家關起門看電視。</p><hr><p>第 48 頁<br>艾哈邁迪內賈德借助打擊社會自由風氣，擴大了革命衛隊和巴斯基的權力，著裝要求更嚴，言論受到空前壓制。愛國主義也被用來挑釁反對者。他積極尋回兩伊戰爭遺骸，特別安置在青年男女偷偷約會的公園和大學校園，多次引發抗議。德黑蘭人說，別人「種樹」，艾哈邁迪內賈德「種烈士」。</p><hr><p>第 49 頁<br>「死亡、監禁、抓捕、毆打，所有這些耗盡了我們的能量。」達拉說。即便是二〇一一年阿拉伯抗議風潮驟起，伊朗也沒有重演綠色革命。桌上其他人紛紛點頭。人心疲累，現在學生們在一起不大談論政治。</p><hr><p>第 50 頁<br>紮小辮的舞台劇導演，為這過時的藝術家髮型蹲過幾天監獄。最近他排了一齣劇，按達拉的說法，「分明是舞蹈」，但不能叫「舞蹈」，因為伊斯蘭政府嚴禁跳舞。小辮改了名字叫「韻律活動」，希望掩人耳目通過審查。當他們議論政府管制的愚蠢時，臉上會露出興奮，你可以感受到他們的苦悶和無奈，但也夾雜一絲遊戲的快樂。</p><hr><p>第 51 頁<br>美國人介紹達拉時愛說：「這個姑娘為了信仰勇敢鬥爭，終於抵達美利堅。」可是達拉並不認同自己是什麼「英雄」，只是「出現在錯誤的地點（被便衣聽到電話）」。以美國公民身分出入德黑蘭並非難事，她說，好多伊朗毛拉（mullah）政客、富商的孩子都持有美國護照，國籍不會成為不能入境的理由，只要你「不惹事」。</p><ul><li>毛拉泛指精通伊斯蘭神學與律法的學者。</li></ul><hr><p>第 51 頁<br>玫瑰園正式竣工還是在兩伊戰爭之後，但「商場」概念的引入者，卻是末代國王巴勒維。他希望借此打擊巴札商人與伊斯蘭教士的勢力。「巴札」指的是中世紀以來中亞、北非的集市，不僅僅是貿易場所，更是當地商人、手工製造者和銀行（或借貸者）的一張關係網。在伊朗，巴札控制著國內三分之二的批發銷售，也把持著本地毯子和堅果的出口。巴札商人自然不喜歡外國商品進來競爭。國際封鎖傷害了伊朗産品外銷，但實際效果又保護了巴札商人在國內的壟斷。<br>幾個世紀以來，巴札商人捐錢給教士，教士們負責將伊斯蘭教義解釋得有利於他們的生意和生活模式。很多清真寺就建在巴札裡面。「金錢與教義」結盟，在一八九一年發起「菸草抗議」，抵制吸食英國商人專營的水菸，在一九〇五年參與立憲革命，削弱國王特權。而一九七九年反對國王的革命中，這種聯盟的效果更是決定性的。</p><hr><p>第 53 頁<br>走私在今天伊朗經濟的比重難以計算。後來我漸漸發現， iPhone 手機在德黑蘭很普遍，街上還有蘋果專賣店，彷彿整個從美國加州鑽地道大搖大擺地走了進來。店員穿的也是藍色 T 恤，胸前懸掛白色卡片。但誰都知道，蘋果和伊朗尚未「建交」。倒賣外國産品的走私生意，經手者很可能是掌握特權的革命衛隊，也可能跟巴札商人有關。錢，令政治界線模糊，利益圖譜變得複雜。</p><hr><p>第 54 頁<br>「你想不到他們會託我從美國帶什麼。」達拉每次回國，朋友們點名要的是「真的星巴克紙杯、原裝可口可樂」。玫瑰園商場有店鋪賣仿製的星巴克馬克杯，被當作高檔工藝品擺在黑絲絨軟墊上展出。而伊朗的可口可樂，來自一九七九年美國人落跑時留下的配方和工廠。「見過世面」的米夏講了一個更好笑的故事：他在義大利的時候，接待過父親的同事和他的兒子。這對伊朗父子每天都點名要吃麥當勞。「我勸他們義大利菜好吃，但他們只想吃麥當勞。」一次去鄉村，沒有麥當勞，不得不吃了一回當地餐。伊朗父子承認非常美味，可是第二天回到城裡，他們又要求吃麥當勞。米夏很生氣，當真實世界攤開在眼前，伊朗老鄉竟執著尋找臆想中的那一個。他們對那個世界的想像相當狹隘，縮小到美國，縮小到美國流行文化，縮小到起士漢堡。</p><hr><p>第 55 頁<br>現在，商場二樓正對何梅尼和哈米尼畫像的地方，貼著「免費無線上網」。幾乎所有人都能嫻熟地使用捷克產的翻牆軟體，越過政府在網際網路上設置的障礙，連最高領袖本人都在「被遮罩」的海外社交媒體上開了帳號。技術的發展似乎站在了反抗者這一邊，但當局並不打算放棄。如果沒有特殊軟體，直接在伊朗網際網路上搜索西方歌曲、電影或敏感政治，都會被立即連結到「伊斯蘭政府網站」的主頁。有時你覺得伊朗人與外面的世界就隔了一層紙，但那層紙是鐵打的。</p><hr><p>第 57 頁<br>何梅尼的學生和長期追隨者拉夫桑賈尼（Akbar Hashemi Rafsanjani），成了哈米尼的第一任總統，被稱為「伊朗鄧小平」。在許多發展中國家，「鄧小平」是「市場經濟啟動者」的代名詞。兩伊戰後百廢待興，拉夫桑賈尼推出兩個「五年計劃」，對超過一千家國營企業實行私有化。伊朗出現了股票市場、自由貿易區，農業國家開始向工業化轉變。</p><hr><p>第 62 頁<br>達拉鬥爭經驗不足，米夏更像是在抗議洗禮中長大。在德黑蘭藝術大學念書時，他崇拜一個高大壯實的學長——差不多有兩公尺高。米夏說起來的時候，還要向上仰望。學長是政治活躍分子。一天午餐，學長突然來到食堂，說不要吃今天的肉，那是國王時代就存在冰箱裡的。肉怎麼可能保存三十年？學長拿出從食堂偷來的一條牛後腿， 一看印章，真是巴勒維時代的。不管怎麼說，大家發現那天午餐的味道確實古怪。學長號召絕食，敲盤子繞著校園遊行。堅持三天，校方道歉承諾改善伙食。那一次，米夏看到了反抗的力量。</p><hr><p>第 69 頁<br>在他記憶中，綠色革命的結束，不僅僅因為政府的鐵腕鎮壓，還因為「抗議者和政府都懼怕國家動盪，上下一起停了」。<br>也許我流露了出些許驚訝，他接著說：「伊朗人和中國人一樣害怕國家動盪。」雷拉茲曾經是一家國有企業廠長，很早就到廣州考察過，對中國這些年的情況很熟悉。他仰慕中國經濟成就，十年前就預言中國應該在國際關係中領頭。</p><hr><p>第 77 頁<br>賈維爾笑了：「這真得怪他們。」他在我的筆記本上畫了一個「馬斯洛需求層次金字塔」，頂層是「自我成就」，最底層是「呼吸、食物、性、住房、健康」。他在「性」上劃了個叉：「我們的政權非常聰明，管住人最基本的需求，於是我們滿腦子就剩下這些，其他什麼都不想了。」<br>伊朗禁止公開戀愛。儘管女人戴面紗、男女授受不親等伊斯蘭習俗，在一九七九年革命之前就在伊朗社會存在，但是革命之後才寫進法律，出動風紀警察監管。性禁忌還常常與政治聯繫在一起。異議者不管做了什麼，對他們的譴責首先跟性醜聞扯上關係，並迫使他們向公眾懺悔。「我們的傳統文化還是比較保守， 一提『性醜聞』，大家馬上覺得這是個壞人。」賈維爾說。<br>性有時還比政治更危險。賈維爾有一本喬治·歐威爾《一九八四》——這本書刻畫了一個處處受到監管的虛擬社會，在伊朗翻譯並出版的波斯文版，刪去了幾處溫斯頓與茱麗葉溫存的性描寫，其他都保留了下來。</p><hr><p>第 80 頁<br>當地朋友說反美標語不只我看到的這些，還有直白樸實些的，比如「我們把美國踩在腳下」等等。但終究沒有我想像中滿街「反美話語的海洋」。十多年前伊朗學者搞過一次民意調查，百分之七十四受訪者願意跟美國談判，百分之六十四支持跟美國復交。結果，組織調查的人被關起來了。<br>伊朗的「性禁忌」常跟「西方文化滲透」聯繫在一起。何梅尼說：「公共場合男女混雜，是外國人的陰謀，用來瓦解穆斯林青年的意志。」「外國」很多時候單指美國。</p><hr><p>第 82 頁<br>賈維爾始終沒找到「百分之三十五的性壓抑」數據的出處。倒是伊朗議會在二〇一四年夏天，發佈一份八十二頁正式調查報告，承認百分之八十伊朗未婚女性有男友，中學生談戀愛都十分普遍。受訪的一萬四千兩百名學生中，百分之十七承認同性取向。本地媒體對這份報告不做討論，我是在英國《經濟學人》雜誌網站上讀到的。</p><hr><p>第 83 頁<br>地鐵隧道又深又廣，戰時也可作防空洞。末代國王時期做了規劃，承包給一家法國公司，可還沒動工，革命就爆發了，於是被迫擱置下來，直到伊斯蘭共和國也生出現代交通的煩惱，國王時代的地鐵設計圖才被翻出來，請中國長春和上海的公司來參與建設。</p><hr><p>第 97 頁<br>什葉派與遜尼派的分歧，概括來說，就是先知穆罕默德歸真之後，誰有資格成為繼任者。什葉派推崇先知的女婿阿里。阿里遇刺，他的兒子胡笙全家也遭主流派伏擊，慘遭滅門。此後什葉派無論從人數還是影響力，一直處於弱勢，演化出一套自己的信仰與智慧，與遜尼派有共識，也有差異。「胡笙的血」、千年的冤屈和復仇，構建了什葉派的情感共同體。薩法維王朝立什葉為國教， 一個原因是為了對抗強大的鄂圖曼帝國，與那裡的遜尼派切割。但立教之初，伊朗國內教法學家不夠，要從敘利亞、黎巴嫩借來，填充清真寺和學校。</p><hr><p>第 117 頁<br>第納爾是目前世界上許多國家的貨幣名稱，但幣值各不相同。此稱呼源自古羅馬帝國的銀幣Denarius。</p><hr><p>第 118 頁<br>一九二〇年，英國人取得對伊拉克的委任統治，預見到統治成本太高，只要了十年委任期（美軍或許早該料到自己的駐紮期限）。英國人臨走前劃定伊拉克、科威特邊境，以各自的椰棗林終點為界。結果當天夜裡，伊拉克、科威特兩邊都開始瘋狂補種椰棗樹。邊界爭議，正是海珊後來入侵科威特的理據。</p><hr><p>第 123 頁<br>伊拉克軍警打算驅散抗議者，不是因為集會內容，而是因為事先沒有申請。伊拉克新憲法賦予公民「集會、抗議的自由」，但必須提前向內政部申請，以便佈置警力，維持秩序。我向薩拉丁求證這件事，他說審批程序不是特別複雜，如今，抗議議員、抗議政府，上街遊行喊口號，理論上並不困難，但有些行動註定不會被批准，比如二〇一一年受到「阿拉伯之春」影響，伊拉克當地遜尼派抗議馬利基政府，還是遭到了軍警拘捕打壓。<br>「跟我說說，言論自由了有什麼好處？」<br>沒想到，這一問薩拉丁竟哀傷起來：「我們說什麼都行，但解決不了問題。」<br>「那沒有行嗎？」<br>「我想只會更糟。重要的是，今天每個伊拉克人看待自己不同了。」</p><hr><p>第 126 頁<br>美軍已經撤走，再不見灰綠色迷彩。十年治後，巴格達地面上看不出明顯的美國痕跡。雖然美式速食在中東非常普遍，但巴格達沒有麥當勞。所有人相信，它開張的第一天會被炸成「ground zero」（核爆點，亦指「九一一 」廢墟） 。一般餐館裡依舊沒有咖啡，只提供「伊拉克茶」，阿拉伯人愛喝的紅茶。<br>但是你也會看到，很多伊拉克人用最新款蘋果手機。由於免稅（或者走私），這裡的售價跟美國本土幾乎一樣。初次見面，我問美聯社攝影師穆罕默德，能不能找張巴格達全圖。「誰還用紙質地圖，用 Google 地圖吧。」他邊說邊在蘋果手機上給我示範，「伊拉克用的全是美國衛星，上美國網站快著呢。」</p><hr><p>第 132 頁<br>在東方，強權仍然受到推崇。而那些憎恨強權的，往往只是憎恨自己沒有成為強權。</p><hr><p>第 134 頁<br>西元8世紀阿拔斯王朝的「外文翻譯局」智慧宮，據說遺址仍在，但參觀要事先向文化部申請，拿著鑰匙開門進去。當時，在阿拉伯人主持下，外族人和新進穆斯林把無數希臘著作翻譯成阿拉伯文，無意中為後來的歐洲文藝復興留存了火種。但是，阿拉伯人對希臘著作的翻譯有選擇，取捨標準是教育性，或者說實用性。所以，他們孜孜不倦地在哲學和科學書籍中尋找真理，卻懶得理會希臘詩歌、戲劇和歷史。最遭忽視的，是地理和政治。有學者認為，就在這裡，伊斯蘭與西方現代文明的分野出現了：亞里斯多德的大部分作品都被翻譯，但巴格達的阿拉伯人禁止引進他的《政治學》。這本書論述了國家的性質，統治者與被統治者的關係。這個概念沒有釐清，導致伊斯蘭至今沒有做到政教分離。<br>一本書的缺失，阻礙了中東民主化進程，這個說法未免誇張。曾經向歐洲輸出文明的伊拉克。如今迎來了美國人的 nightclub，卻還沒有真正的民主。「現代性孕育穩定，但現代化過程卻滋生動亂」，杭廷頓的後半句，恰恰是今日中東、今日伊拉克的現實。</p><hr><p>第 139 頁<br>中國在伊拉克的大型計畫很難招到本地工程師。高級技工集中在巴格達，不願離開家人去外省。而中國工人們，無一不是跋涉兩萬多公里，把家人留在身後。<br>在伊拉克的中國人，幾乎人人背負這樣的故事，無論使館官員，還是建築工人。中國駐伊拉克使館，全館上下衹有大使夫人一名異性。常駐當地的一對中國記者夫婦，辦公室擺著兒子一歲時的全家福，而他現在已經兩歲，由親戚照料。<br>人人都以暫時犧牲換個好一點的將來。為了將來，眼前什麼是可以犧牲的呢——自由？歡樂？親情？愛情？青春？矛盾的是，這些犧牲，往往是為了家庭的共同未來，而放棄的，首先是與家人共處的歡愉。中國人的幸福，似乎不在眼前。<br>外國媒體常常感慨，中國人好像「怪物」，不惜抛家捨命。我向一名在伊拉克工作三年的中國企業領導提起這種評論，他不否認：「我也認為這樣不好，因為是被迫的。但是，過去三十年，中國能夠實現超常發展，必定因為有人付出了代價。」</p><hr><p>第 154 頁<br>跟這裡的中國人交談，發現他們大多喜歡杜拜，而吸引他們留下來的，首先是免稅、物質豐富，其次是不談政治。淑容結合中西醫之長，在這裡已行醫九年。問她在杜拜找到了什麼，答：「自由。她的前半生在希臘和美國度過，這個回答令我疑惑：「美國和希臘沒有自由嗎？」「不一樣，在美國，病人走進我的診所，我都得考慮一下他是民主黨還是共和黨，話別說錯了，而杜拜的政治氣氛太弱了。」在她看來，遠離政治，才是自由。</p><hr><p>第 195 頁<br>艾明大學畢業時打定主意不在政府系統工作，「因為沒有『關係』」。他說，在國家部委或國營企業找份好工作，首先要在複雜的資格考試中獲得高分。但他認識一些「不知道怎麼可能考及格」的同齡人，捧到金飯碗。「『背景』比能力更重要，進去之後也要憑關係上去。」所以他選擇留在民營企業——爸爸工作的醫藥公司。<br>「國家富裕了，但錢都到了執政黨口袋裡。」艾明抱怨正義發展黨的「關係網」把持經濟利益。<br>眼下他打算跟幾個朋友創業，做電信資料服務，儘管這跟他的化工系學位不搭界。土耳其電信被國營資本和大財團壟斷，我小心翼翼問艾明，涉足這個領域是不是得「認識什麼人」？他難為情地笑了：「哈哈，當然。」他的「關係」來自反對黨。我也笑了，人們跟「關係」的關係常常很複雜。</p><hr><p>第 197 頁<br>父親說話平和。他認為每個家庭成員的看法因記憶而不同。六十八歲的外婆經歷過土耳其最動盪的時期，上世紀九〇年代庫德人四處製造恐怖襲擊，二十多年來造成四萬人死亡。七、八〇年代，土耳其左右兩派政黨爭權，街頭每天發生劫掠、燒殺。自凱末爾的政黨一九五〇年輸掉選舉以來，土耳其一直由不同黨派組成的聯合政府經營，分分合合，風波不止，直到正義發展黨拿下議會半數以上席位， 一黨包攬政府，才穩定下來。外婆這般年紀的人，自然珍惜這十來年的好日子。<br>這讓我想起，母親是土耳其人的英國女記者阿勒夫·斯科特（Alev Scott）寫過一個細節：今天伊斯坦堡治安很好，但土耳其人對「亂」的恐懼根深蒂固。她看見房東執意把木製百葉窗換成鋁合金的，忍不住笑出來，「好像夏天裹著棉被」。但是只有經歷過動盪的人，才能理解這份恐懼。<br>父親親歷了一九八〇年政變，確切來說，是軍隊鎮壓學生反政府行動，傳言數萬名大學生慘死，但這在土耳其仍是個禁忌話題，確切數字不詳。所以當艾明走向蓋齊公園，父親就知道政府不會忌憚動武，跟上去保護兒子，卻終究沒有讓女兒去現場。博拉薩到現在都生爸爸的氣。<br>艾明和妹妹打記事起，大部分時間生活在厄多安時代。他們經歷的土耳其，既沒有亂過，也沒有窮過，通過衛星頻道網際網路，他們的生活跟歐洲年輕人零距離。艾明幾個月後要去奧地利，跟我的那位朋友周遊。二〇〇一年的經濟危機只是小插曲，博拉薩說「根本不記得」。她無法感念厄多安的好處，衹討厭他侵犯「個人自由」——比照歐洲各國， 一個政府搞好經濟不是理所應當嗎？「這個老傢伙怎麼不明白，我們是不一樣的人？」如果說厄多安開創了富強的土耳其，他卻認不出富強起來的土耳其人。</p><hr><p>第 199 頁<br>土耳其三十年來的經濟發展，成就了人們對命運的不同選擇。即便是一家人，有的到大城市發展，有的留在農村。整個國家在進步，不同人群的物質差異在縮小，但生活方式和精神世界的差異並沒有消失，當他們見面時，這種差異就更明顯。</p><hr><p>第 206 頁<br>道別艾明一家，我深感不安，外婆可能會反感這個外來者挑起家庭爭論。沒想到，合影的時候，她一隻手暖暖圈住我後腰，歡迎我下次再來。爸爸說，家裡經常爭論，「才是民主」。<br>「看來你家裡，外婆是唯一會投票給厄多安當總統的人了？」我問艾明。他開「爸爸公司的車」送我回酒店。「不見得。」小夥子狡黠一笑。上次地方選舉時，他身在外地不能投票，外婆替他去了投票站，以自己的名義投給反對黨。外婆說，未來不是她的，是外孫的，要聽從他的選擇。</p><hr><p>第 217 頁<br>托克維爾在《舊制度與大革命》中有這麼一句結論：「對一個糟糕的政府來說，最危險的時刻，是它開始了改革。」他認為，路易十六時期的法國實際上比之前更富裕、更開明，可是革命發生的時候，往往不在人民生活越來越壞的年頭，相反，是在人們發現暴政壓力減少、鐵鉗慢慢鬆開的契機——他們開始相信，自己有能力推翻暴政。</p><hr><p>第 260 頁<br>我眼前出現了更大的圖景：沙烏地阿拉伯給塞西政府十倍於美國的援助，拉攏埃及。卡達與沙烏地阿拉伯是對頭，接收與埃及現政權勢不兩立的穆兄會青年。這兩個國家都坐在從天而降的巨大能源財富上，隱隱的不安敦促著它們尋求長久的政治影響力。上一次，阿巴斯和瓦利德相逢在國家內部融合的舞台上，眼下，他們又出現在地區角力的棋盤上。這盤棋上所謂的「外來勢力」，主角不再是西方，而是同為阿拉伯族裔的鄰居們。從這個意義上說，大概有邊界有競爭，「外部勢力」就不會消亡吧。</p><hr><p>第 274 頁<br>革命沒有發生在埃及經濟陷入困難的時候，相反，恰恰是在埃及人經濟條件改善、對自身權利也愈加關注的階段。陳舊的統治結構遭遇新的變化時，如摧枯折腐。<br>二〇一一年二月十一日傍晚，我在拉姆西斯酒店房間傳稿，窗外傳來潮水般的掌聲和歡呼——不像是抗議。打開電視一看：穆巴拉克下台了！我和攝影師趕緊奔出去，立刻被歡慶的隊伍裹挾，我對著鏡頭說話時，竟被旁邊的人拉起手跳舞， 一面埃及國旗覆蓋了鏡頭。我們搭車去穆巴拉克總統府，司機居然不收錢：「為了革命！」他打了個勝利的手勢後，消失在狂歡的夜裡。沒有人到拉姆西斯酒店鬧事。人們主動清理垃圾，維持交通。十天後，在我離開時，沒有聽說任何打砸事件。<br>持續動盪打擊了旅遊、出口、外資幾乎所有行業，二〇一一年以來，埃及經濟發展急劇減緩，與革命爆發的前一年相比，多了一百三十萬失業者，其中近七成是持有高校畢業證的年輕人。各種街頭運動中的死亡人數，超過了二〇一一年的「倒穆」運動。</p><hr><p>第 279 頁<br>卡薩姆的妻子原本默默坐在牆角，這時開始高聲譴責穆兄會禍亂國家，她斬釘截鐵地說：「『一二五』不是真正的民眾革命，『六三〇』才是！」過去三年，兩個日子對埃及人尤為重要：二〇一一年一月二十五日，要求穆巴拉克下台的遊行爆發；二〇一二年六月三十日，軍方出手鎮壓穆斯林兄弟會， 一星期後逮捕了第一位民選總統莫爾西。然而，埃及人對這兩個日子的定義卻迥然不同：前一天，另外一個埃及人告訴我，「六三〇」是假民眾之名的兵變，「一二五」才是「純潔的革命」。不同定義，未必出自對穆兄會的好惡，而是每個人對錯綜局面的不同解讀。</p><hr><p>第 284 頁<br>波蘭歷史學家亞當·米奇尼克（Adana Michnik）說過，革命有兩個階段，第一為了自由，第二為了權力。第一階段煥發出人性最好最純潔的一面，第二階段卻釋放出壞的一面。</p><hr><p>第 291 頁<br>自一七九八年拿破崙在埃及登陸以來，歐美影響像一把利刃，不斷地塑造著中東，打磨出一個現代社會的模樣，但也留下不少硬傷（如殖民者不合理的邊界劃分） 、更不用說揮之不去的心靈創痛至今縈繞阿拉伯人、伊朗人、土耳其人的問題還是， 一種曾經燦爛的文明如何面對強盛的西方？</p><hr><p>第 292 頁<br>幾百年來，各種「主義」試圖為伊斯蘭文明復興找到一條出路。但二〇一一年發生的變革，卻沒有意識形態主宰。它也不像是關於「哪一種制度更適合」的嚴密論證，而是一聲樸素的生活要求：「別人有的，我也要：自由、公正、尊嚴。」</p><hr><p>第 302 頁<br>滿眼領導人畫像這道風景線，利比亞有，突尼西亞、埃及、巴林、敘利亞、葉門……最近如多米諾骨牌一樣發生騷亂的國家都有。畫中領導人或微笑或沉思，只是眼睛都不會平視地上的民眾。目光高於觀看者的角度，令他們顯得深邃，總是知道民眾不知道的事情。只可惜那些密佈的畫像，更像是江湖術士的符咒，關鍵時刻竟然失靈，埃及人只用了十八天，就扳倒了穆巴拉克，貼了三十多年的畫像一夜隨風去。從街道，從教室，從餐廳，從超市，從藥房，他都剛剛離去，「穆巴拉克橋」、「穆巴拉克地鐵站」立時換了名字。<br>二〇〇八年金融海嘯的時候，有人半開玩笑地提出「星巴克理論」——星巴克咖啡館越多的地方，遭受這輪危機衝擊的情況越嚴重。理由是，星巴克分店往往靠近金融街、房産交易中心，而銀行倒閉、房產泡沫正是這次危機的導火線。如此說來二〇一一年刮起的中東變革海嘯，是否也見到了一個「畫像理論」？領導人畫像頻密的地方，局勢註定不穩。因為通街畫像的本質是「少數人統治多數人」的模式，正是此番民間怒潮所指。<br>伊斯蘭教本來不容忍「畫像」、「造像」等一切有形的裝飾。清真寺裡絕對見不到人形圖案。教義認為，真主無形，因此無所不在。<br>但利比亞人向領袖致敬，有一句特別用語：「真主、格達費、利比亞，其他什麼都不是。」把領導人與真主並論，在穆斯林世界非常罕見，更何況「格達費」排名真主之後，國家之前。在一些虔誠的宗教人士眼中，格達費甚至是一個狂妄的異教徒。的黎波里一場足球賽後，離開賽場的人們曾湧上街頭，拍手高歌「格達費不是穆斯林」。滿眼領導人畫像，看似一個又一個神話，其實無關宗教，強調的是凡人在地上的統治。</p><hr><p>第 305 頁<br>比利時攝影師布魯諾告訴同行們，他無意中進入過穆薩新聞團隊辦公室，裡面沒人，辦公桌上攤著格達費畫像，還有寫了一半的遊行標語。同一天下午，新聞部組織記者去市中心廣場採訪示威民眾，布魯諾見過的畫像和標語就出現在那裡。不僅如此，「示威民眾」都是可携式的，可以出現在記者團所到的任何地方。新聞部大巴載著記者去往二百公里外的米蘇拉塔（Misrata）， 一輛小型巴士如影隨形，玻璃窗背後是標語、綠旗，乘客正是多名市中心「民眾」，準備出現在米蘇拉塔。中途休息，記者與他們相逢一笑，荒謬到極點，反成娛樂。</p><hr><p>第 309 頁<br>獨裁政權特徵之一，是給維護統治的「體制內」人員支付高於體制外民眾的收入，以此維繫忠誠。一旦這種好處喪失，就可能瓦解維護獨裁的體系。看似銅牆鐵壁的舊制，放大看來漏洞百出，崩潰起來也是一朝之事。</p><hr><p>第 313 頁<br>利比亞全稱為「大阿拉伯利比亞人民社會主義民眾國」（The Great Socialist People’s Libyan Arab Jamahiriya）。「民眾國」（Al-Jamahiriyyah）是格達費上校憑空造出來的一個阿拉伯詞彙，他認為百分之五十一壓倒百分之四十九的民主選舉最不合理，利比亞只能搞全民主政。根據中國社科院西亞非洲所研究員殷罡的考察，全民主政是這樣實施的：全國數千「人民委員會」構成地方管理機構，牽頭人不是選舉産生，而是「推舉」出來的，「遇有不同意見，不能決定時，要深入討論，直至達成一致」。偏偏湊巧的是，「一致達成的意見」，每次都把重要部門歸於格達費的心腹掌控。<br>二十世紀八〇年代，格達費武力鎮壓班加西起義。一九九六年，阿布·薩利姆監獄抗爭，三小時內一千兩百七十名政治犯被殺。所謂「協商達成一致」，不過是獨裁者「用一批聽話的人民換掉另一批不聽話的人民」而已。<br>「全民主政」的招牌下，組建政黨會以「叛國罪」論處。沒有政治光譜可以安放異議，民眾的訴求只剩下了擁戴或憎惡格達費統治。於是，推翻格達費的革命， 一上來也成了一群民眾壓倒另一群民眾。</p><hr><p>第 322 頁<br>歷史學家認為， 一個國家政治與經濟的運作效率，往往與掌權者在位時間呈反比。體系內若有超越個人的制度，可以減少「時間」的影響，但是如果沒有約束個人或集體長期把持利益的行為，終究會產生負面效應。石油大國利比亞，腐敗指數遠高於非洲鄰國。首都街道坑坑窪窪，統治者無心治理。<br>真正維繫「卡里斯馬」統治的是什麼呢？秘密警察、武裝鎮壓。有數據說，利比亞百分之十至十五的人負責向政府彙報百姓言行——全民噤聲顯而易見，當政府發言人安排記者到某地採訪，幾次有人在我們耳邊飛快扔下一句「格達費不好」後，即刻走遠。對待反對者，格達費絕不手軟，公開處刑或在電視上直播血淋淋的畫面。另一邊，親格達費派別、部落又往往得到莫大的好處，比如利比亞中部格達費家鄉地區，人們感念政府福利周全，口口聲聲喊效忠上校。「卡里斯馬」有兩隻手， 一隻是神一般的感召，另一隻則是魔一般的恐嚇。<br>答案也許稍嫌諷刺。突尼西亞與埃及恰恰因為統治者留下一線公共空間，令怒火有管道表達，而不致走火。穆巴拉克統治時期，民眾有權在可控範圍內和平示威。換句話說，透過非暴力手段表達訴求，埃及人並不陌生。<br>相反，格達費統治下的利比亞，不存在表達公共意見的平台。他對異議者鐵腕鎮壓，反對派銘記的只有「血債血償」。更壞的消息是，世界「理性抗爭」組織統計一九四〇年至二〇〇六年全球暴力及非暴力鬥爭，結果顯示，暴力革命即便成功，五年內達至民主的先例只有百务之五，但百分之四十一的非暴力鬥爭最終過渡到民主政治，而「十年內再爆發內戰的可能」，前者高出一倍。格達費身亡之後，利比亞境內暴力不止，令人擔憂理論成讖。</p><hr><p>第 332 頁<br>《後美國時代》（The Post American World）作者法里德·札卡瑞亞（Fareed Zakaria）、在早年另一本書《自由的未來》（The Future of Freedom）中，首先把這種現象稱作「不自由的民主」（illiberal democracy）。真正的民主是個套餐，不僅有顯而易見的選舉，還得有配套的司法獨立、權力監督、言論自由、集會自由、信仰自由、私產保護等等。這些總稱為「自由」（liberty）的護航措施有比較隱蔽的彈性，不像選舉那樣，「有還是沒有」一望便知。<br>中文裡的「自由」，常讓人想起「無拘無束」，甚至「無法無天」、「隨心所欲」，而札卡瑞亞在這裡講的「自由」恰恰相反，是一套細緻縝密的法律保障。有了這番保障，選票才有價值。可惜的是，札卡瑞亞慨歎，「以選舉為特徵的民主」橫掃全球，「自由」卻還只在西方徘徊。</p><hr><p>第 346 頁<br>飛機降落，全體乘客鼓掌，慶賀平安抵達。這似乎是非常西方的習慣。</p><hr><p>第 349 頁<br>「看，俄羅斯的源頭。」伊萬指了指廣場中心雕像，拍拍心口，「基輔是俄羅斯的母親。」雕像是傳說中建立基輔的四兄妹，名字首字連在一起拼成「基輔」的拉丁寫法。<br>古代俄羅斯人的第一個政治活動中心在基輔。十三世紀蒙古入侵，俄羅斯人棄守基輔一路向北。先是 Vladmimir-na-Klaizarn，然後是莫斯科，十八世紀終於落腳在聖彼得堡。<br>烏克蘭與俄羅斯的歷史，就是歷史學家打架的歷史。在俄羅斯看來，烏克蘭沒有歷史，它是十九世紀德國、奧地利為了削弱俄羅斯搗鼓出來的一個「概念」。可是俄羅斯又把基輔當作自己的「母親」，說自己的祖先是最早在基輔建都的羅斯國王。羅斯統治的地區也叫瓦良格，就是烏克蘭賣給中國那艘航母的名字。</p><hr><p>第 353 頁<br>「你要是有孩子，希望他們在哪裡接受教育呢？」「當然是俄羅斯。我們的考試叫考試，美國那種只能叫測驗，太簡單了……聽我說，俄羅斯有油，中國有錢，我們應該聯合起來，西方就不敢這麼橫了。」<br>「告訴我，到底什麼是俄羅斯的靈魂？」<br>「就是誰也壓不垮我們，誰也不能叫我們屈服。」<br>跟伊萬道別後，我邊往地鐵走，邊試圖梳理他的思路：在烏克蘭長大的半個俄羅斯人，對烏克蘭有感情，但歸根結底又把烏克蘭與俄羅斯看作一個共同體：個體的價值，必須依靠強大的共同體去實現。</p><hr><p>第 354 頁<br>英雄。民主。自由。獨立。解放。祖國。吃飽穿暖以後，細小的詞語滿足不了我們，而這些宏大的，又面目模糊、含義不清。</p><hr><p>第 386 頁<br>邊界初開，東西柏林經歷了巨大的經濟落差。二十年後，西柏林漸漸變為高檔住宅區，東柏林則因為房租低廉，成為整個歐洲年輕藝術家的天堂。東柏林咖啡館的早餐以豐盛和漫長著稱，這裡無人早起，半數人口都是藝術家。藝術家提供不了太多稅收，柏林欠下很多外債，靠借貸發展。柏林圍牆倒下之初，世界為之興奮，跨國企業摩拳擦掌，但是這裡不具備商業城市的氛圍。十五年後，索尼影視中心（Sony Center）黯然出售。西門子盤算了很久，終於也沒有來。</p><hr><p>第 396 頁<br>世界驚訝，但並不反感。希特勒完結，柏林圍牆倒塌，德國人不斷道歉和自省——「整個國家從對『強大』的渴求，轉為正常。沒什麼比正常更美好的了。」毛斯巴赫愉快地笑起來。他有一種舉重若輕的天分，在任何極端的集體情緒中，都要努力回到心裡那個平衡點。</p><hr><p>第 399 頁<br>德國墨卡托智庫（Mercator Institute for China Studies）統計過歐洲人在 Google 上搜索關於「中國」的熱門詞彙：「長城」、「創新」、「統治世界」、「中國菜」、「吃狗肉」等等，各國不一而足。他們也列出中國網民在百度上想知道的歐洲：「雅思」、「屠猶」、「足球」……但有一個詞是中國人對歐洲各國必搜的，出現頻率非常高：「買什麼便宜」。<br>二十年前，柏林圍牆西邊的資本主義，理直氣壯用物質去誘惑東邊的人。而今天，在中國人面前，這種誘惑僅僅是為他們的旅途增添「帝王般的享受」。中國護照仍然處處需要簽證，但中國錢包早已全球通用。那晚，在梅克爾發願吃生蠔的凱賓斯基酒店對面，我見到一個中國人。因為言論無忌，他無法回去。世界在中國遊客面前暢通無礙，但祖國本身，有時正是一道牆。</p><hr><p>第 400 頁<br>在柏林居住另一個十三年後，她給自己的生活做了個總結，創作成《東西相遇》，用漫畫對照德國人與中國人思維舉止細微處的差異。德國人用眼睛旅行，中國人離不開相機。德國人直面問題，中國人繞道而行。德國人安靜小聲，中國人熱熱鬧鬧。</p><hr><p>第 402 頁<br>東西德人本是一家。二戰結束後，德國被蘇聯和西方分而占之， 一九四九年東德、西德分別建國， 一九六一年柏林圍牆豎起。四十年間，兩邊的人變得不再是一個模子裡刻出來的。圍牆倒塌後二十多年，彼此還是立刻能從舉止言談裡辨認出差異。這是何等的驚人和悲哀。</p><hr><p>第 403 頁<br>一名同行激動地拉我去看另一塊展板：<br>（正面寫著：）<br>德意志民主共和國憲法第二條第一段：「德意志民主共和國所有權力由工人行使。」<br>（反面）<br>人民代表在工人階級政黨的領導下，行使工人農民的權力。<br>（正面）<br>德意志民主共和國憲法第二十七條第二段：「保障報紙、電台和電視台的自由。」<br>（反面）<br>如果新聞傷害社會主義意識形態，它的自由就可能被剝奪。<br>正面，是堂皇的說詞。反面，是實際發生的事情。</p><hr><p>第 408 頁<br>三年前，我在瑞士聽說列支敦斯登準備公投，立刻來了興趣：列國雖小，人可是全世界最富裕的居民——查一下世界銀行、聯合國及美國中情局發佈的資料，列支敦斯登人均國內生產總值（GDP per capital）或人均國民收入，幾乎年年進三甲。二○一二年人均國內生產總值世界第一，是那一年中國的二十三倍。我向來以為，揭竿而起是因為活不下去，這群「天堂裡的人民」怎麼也鬧起來了？</p><hr><p>第 409 頁<br>在君主制次第灰飛煙滅的歐洲，列支敦斯登大公百年實權在握，其中一個原因——國是他家買的。四百多年前，列支敦斯登家族買下兩塊直屬德意志神聖羅馬帝國的小莊園，合併為小型公國， 一轉身，地主有了政治身分，頂著大公頭銜翩然坐上帝國議會。今天這個小公國的國名，仍然是列支敦斯登家族姓氏。國民的身分意識，與王室家族不可分割。<br>二戰後公國也曾拮据困頓。後來，在現任大公的父親弗朗茨·約瑟夫二世（Franz Joseph II）治下，通過比瑞士更低的稅賦，更開放的銀行制度，吸引源源資金，再加上製造業沒有鬆懈， 一躍成為首富。</p><hr><p>第 409 頁<br>漢斯·亞當二世的公開形象更接近學者，花白頭髮，西服翩翩，熱衷著書傳播執政理念。列支敦斯登街道上看不見他的畫像，旅遊紀念品上也沒有。從大公的父親開始，列支敦斯登王室就以低調、親民為人稱道。珍妮說，列支敦斯登年輕人出國，最終大多選擇回來，哪裡都不如祖國的福利好。</p><hr><p>第 412 頁<br>P 先生曾提到一個細節，令我驚奇。他反大公否決權的立場眾所周知，但作為議會黨派代表，每週進宮面見大公。<br>「你每星期都見到你反對的人？」<br>「是的，作為黨派代表，我隨時可以打電話到王宮，要求會面，通常第二、第三天就可以見到大公或他的兒子王儲。」<br>電影裡進宮面聖的情形浮現腦海，我試著問：「你得下跪嗎？吻手嗎？」面見列支敦斯登大公，一般禮節性地稱呼「殿下」。P 是大公特權的反對者，拒絕行禮。第一次進宮，他問大公：「我的名字是畢伯·佛里克，請問我該如何稱呼您？」「叫我列支敦斯登先生。」大公答道。從此，會面代表中只有他不用口呼「殿下」。 「父母從小教導，別人如何對待你，取決於你是否允許他們那樣做。如果列支敦斯登大公變成獨裁者，那是人民縱容他那樣做。」</p><hr><p>第 414 頁<br>「世界上無數人會對你們說，這是最富裕的地方，宛如天堂，還有什麼不滿意？廢除了大公的否決權，你們的明天會更好嗎？」<br>賈妮往椅子上靠了靠，緩緩說：「廢除否決權，對我們的日常生活沒什麼影響，早晨起來太陽不會更亮。但重要的是，我們不想有個人坐在那裡『允許』改變發生，人民應該自行決定。大公的權力，是我們脖子上的一根繩索。」</p><hr><p>第 416 頁<br>通常而言，經濟發展到一定程度，人們會要求更加透明、更多參與感的政治體制，列支敦斯登已經沒有「絕對意義上的窮人」，就連收入相對較低的百分之十人群，都獲得國家補貼，有車有房。P 先生說，粗略一分，百分之六十列支敦斯登國民為中產階級，百分之三十高收入者大多從事金融業。但反對大公否決權的人，很難以收入、年齡、性別劃分，「只是一群思想超群的人」。<br>然而，這群人太少了。列支敦斯登屢次公投失敗，展現了一種令人困惑的景象：當經濟達到一定水準時，人們對改變上層建築的要求減弱。又如，另一個國民最富裕的國家卡達，實行的是絕對君主制，超然穩定。新加坡有繁榮無自由，也證明了經濟非政治變革的充分條件，甚至不是必要條件。</p><hr><p>第 416 頁<br>千百年來，奧地利大地上的王朝公國，此起彼伏，盛極一時，奥匈帝國半個世紀的榮光與傳奇似乎從未遠離，往事沉澱在血液裡，封建意識遊蕩在現代國家的呼吸中。今日實行代議制民主制度的奥地利，早就不見了王室，但人際關係中身分等級依然分明，個體不習慣做決定，遇事第一反應必是「問我的長官」。瑞士建築師在列支敦斯登人身上，同樣看到個體精神的缺乏。</p><hr><p>第 426 頁<br>眾院大廳裡，潔西嘉請大家傳閱兩個厚厚的本子。原來每個議員發言的每一句話，都會被記錄下來。這兩本是今年以來的現場紀錄。兩院大廳還安裝了直播攝影鏡頭，記者、公眾都可以同步收看。<br>我讀不懂本子上的筆記，薩賓娜叫我留意其中不同文字。瑞士有四種官方語言：德語、法語、義大利語和羅曼什語（Romansh）。多民族、多語言的國家很多，瑞士的奇特之處在於，不推廣統一語言，也沒有統一語言可推廣。即便在莊嚴的國會，議員們也是操不同方言，筆錄員飛速切換。現場配同聲傳譯，但議員大多精通兩三種語言，不需要翻譯，雞同鴨講，溝通無礙。當他們宣誓成為議員時，誓詞都是用不同語言念出來的。</p><hr><p>第 428 頁<br>國會走廊盡頭是個簡單的辦公室，總統問政處。瑞士總統不是一個人，而是七個人，輪流坐莊，一人當一年總統。七人班子其實是七個部長，各司兩三個部。目前輪值總統是女性，問政處門楣上的「總統」一詞改成陰性。</p><hr><p>第 430 頁<br>另外，「直接民主」的原則並非「簡單多數」，而是以「雙重多數」，避免人們做出愚蠢的選擇（比如戰爭），涉及修憲，除了獲得全民多數，還須取得以各州為單位的「州多數」，這一程序賦予公投結果更多理性。<br>是不是瑞士小國寡民，直接民主才找到合適的土壤？格達費的利比亞人口五百六十萬，少於瑞士的八百萬，也號稱採用直接民主，到頭來卻是獨裁者「溫情脈脈的面紗」。委內瑞拉人的公投，賦予查維斯終身連任權，更像是維護統治的工具。他們的「直接民主」少了瑞士版的兩大基礎：堅定的法律保障、嚴格的程序限定。克里斯·科巴克（Kris W. Kobach）在《公投：瑞士的直接民主》 （The Referendum: Direct Democracy in Switzerland）一書中指出，瑞士以罕見的直接民主，實現了罕見的穩定和富裕，「與其說它是個特例，不如稱之為先鋒」，它的經驗不無可取之處。</p><hr><p>第 431 頁<br>瑞士的存在，證明了另一種可能：人民的理性值得信賴，「大一統」的牢靠來自個體的平等與自由，而不是誰要誰犧牲一些權利。</p><hr><p>第 446 頁<br>平心而論，劇中英國首相不過具備一般政客都會犯的毛病：野心比能力大，私欲比公益重要。成天囈語要是英國救了歐元，自己就該成為歐盟主席。選舉前做的一切，就是為了上位，上位之後，全部目標就是保位。當局面終於搞砸，哭著喊著要找女王請辭。二號秘書終於看破，冷冷道：「首相，其實您的位子保不住，對百姓並不是壞事。」唐寧街大小人物，都被一根看不見的繩索牽制，那就是民意。一切都是為了取悅民意。媒體或理直氣壯，或死纏爛打，也是因為公眾輿論後盾堅強。</p><hr><p>第 449 頁<br>二戰後，殖民地獨立浪潮驚濤掠岸。始於伊莉莎白二世的父親喬治六世，印度、緬甸、斯里蘭卡相繼獨立。伊莉莎白二世初登王位，蘇伊士運河危機爆發，英國棄守埃及，後人多將此視為帝國衰弱的真正信號。一九五七年的馬來西亞，六〇年代的非洲諸國， 一九九四年的南非， 一九九七年的香港。帝國版圖，如沙灘上作畫，終為潮流吞沒，倏忽不見蹤影。</p><hr><p>第 454 頁<br>名義上「率土之濱，莫非王臣」，但英國君主三百年來沒有否定過議會做出的決定。普天之下就算還是王土，我花十英鎊進入的下議院，卻是女王終身不可踏足的禁地。導遊說，如果女王膽敢走過來，下院大門將毫不留情地在她面前狠狠關上。下議院英文是「House of Commons」，「平民或庶民之所」。國王的歸國王，庶民的歸庶民。</p><hr><p>第 456 頁<br>「君子訥於言而敏於行」。「說話」於我們不算頭等大事。但現實是，很多事情沒有說明，沒有解釋，於是連「行」也變得語焉不詳。</p><hr><p>第 462 頁<br>未來全球不穩定因素之一，正是飛速增長的中產階級與落後的管治之間的衝突。<br>但是這種衝突本身，很難單獨帶來徹底、積極的改變。中產階級革命改變不了什麼。他們通常手無寸鐵，跟傳統勢力缺乏聯繫。</p><hr><p>第 464 頁<br>經濟不是催生革命的決定性因素，但是統治者手中如果有經濟這張牌，就可以拖延革命的發生，土耳其、巴林鬧得再凶也無法翻天，列支敦斯登的富裕令大多數人安於現狀。經不起「阿拉伯之春」吹拂的，往往是推行經濟改革的共和體制，而躺在石油上的君主制國家，最多是吹縐春水，卻興不起浪潮。中國向委内瑞拉提供的數百億美金貸款，客觀上令查維斯和他的繼承者兩手不空。</p><hr><p>第 470 頁<br>中國人好論成敗，然而成敗最經不起時間考驗。歷史不在意歡呼或鞭撻，它多稜鏡般的顏色、謎一般的命運，期待注視與思考。阿拉伯社會變革始於二〇一〇年末，展示了無窮側面：中產革命缺乏組織，「窮人政黨」與中産對立，選票被曲解為民主政治唯一手段，舊勢力在新變局中的影響，民主轉型中的威權懷舊，威權手段在新變局中的笨拙，先進生產力第一次不為統治者壟斷，民主大門該不該向地下組織敞開，革命神聖感與神聖感的消散，法治缺失民主無以維繫，國際干預的法律模糊地帶……變革中有太多值得探討的話題，值得汲取的教訓。簡單歸於成敗，不知是因為禁忌重重，還是思維惰性？我們關上電視，看完微博上的互罵之後洗洗睡去，很少心平氣和地探尋得失原委。</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/view/subject/l/public/s29166267.jpg" alt="《拜訪革命》"><br><a href="https://book.douban.com/subject/26919483/" target="_blank" rel="noopener">《拜訪革命》</a><br>副标题: 從加德滿都、德黑蘭到倫敦，全球民主浪潮的見證<br>作者: 周軼君<br>出版社: 八旗文化<br>ISBN: 9789869384421</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用SCP命令转移Linux文件</title>
      <link href="/how-to-use-scp-cmd-to-transfer-linux-file/"/>
      <url>/how-to-use-scp-cmd-to-transfer-linux-file/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>出于更换 VPS 的目的，不得不对文件进行转移。最原始的办法可能是从 <code>A</code> 服务器拷贝一份到<code>本机</code>，然后再重新上传到 <code>B</code> 服务器。这样做既繁琐又费时。不如使用 Linux 的 <code>scp</code> 命令进行快速转移来的方便。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>scp</code>（secure copy），可以用于在 Linux 下进行远程文件拷贝。类似于 <code>cp</code> 命令，<code>scp</code> 是应用于多设备间的传输拷贝，而前者是 Linux 本地命令。另外，<code>scp</code> 为 SSH 加密传输，安全性有保障——也因此，连接的端口为远端服务器的 SSH 服务端口（SSH 一般默认端口为 22）。</p><a id="more"></a><h1 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h1><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">scp -参数 <span class="comment">[<span class="comment">[user@]</span>host1:]</span>file1 ... <span class="comment">[<span class="comment">[user@]</span>host2:]</span>file2</span><br></pre></td></tr></table></figure><h1 id="常用命令参数"><a href="#常用命令参数" class="headerlink" title="常用命令参数"></a>常用命令参数</h1><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-P</td><td>SSH 端口，缺省值为 22</td></tr><tr><td>-i</td><td>SSH 密钥登录，后面一个参数为私钥地址</td></tr><tr><td>-l</td><td>带宽限制，单位 Kbps</td></tr><tr><td>-r</td><td>递归复制整个目录</td></tr><tr><td>-C</td><td>允许压缩</td></tr></tbody></table><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>以下命令假设已登录<strong>本地机器</strong>为 <code>A</code>(IP: 192.168.1.1)，<strong>远端机器</strong>为 <code>B</code>(IP: 192.168.2.1)<br>根据 SSH 登录方式和 SSH 端口的不同，拷贝命令分为以下两种：</p><ol><li><p>远端 <code>B</code> 为密码登录， SSH 为默认端口 22<br><code>A:/abc/</code> &gt;&gt;&gt;上传&gt;&gt;&gt; <code>B:/root</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -r /abc root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/root</span></span><br></pre></td></tr></table></figure><p><code>A:/root</code> &lt;&lt;&lt;下载&lt;&lt;&lt; <code>B:/abc/</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -r root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/abc</span> /root</span><br></pre></td></tr></table></figure></li><li><p>远端 <code>B</code> 为密钥（密钥文件为 <code>.ssh/id_rsa</code>）登录， SSH 端口为 2222<br><code>A:/abc/</code> &gt;&gt;&gt;上传&gt;&gt;&gt; <code>B:/root</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -P <span class="number">2222</span> -i .ssh/id_rsa -r /abc root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/root</span></span><br></pre></td></tr></table></figure><p><code>A:/root</code> &lt;&lt;&lt;下载&lt;&lt;&lt; <code>B:/abc/</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -P <span class="number">2222</span> -i .ssh/id_rsa -r root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/abc</span> /root</span><br></pre></td></tr></table></figure><p>p.s. 使用密钥进行 <code>scp</code> 时，需保证密钥文件 <code>.ssh/id_rsa</code> 对应的公钥 <code>.ssh/id_rsa.pub</code> 内容已经写入到 <code>B</code> 的 <code>/root/.sshauthorized_keys</code> 文件中，否则无法正常使用密钥登录。具体原因与 SSH 密钥登录一致。</p></li></ol><hr><p>参考链接：<br><a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html" target="_blank" rel="noopener">scp 跨机远程拷贝</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
            <tag> VPS </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《以你的名字呼唤我》读书笔记</title>
      <link href="/call-me-by-your-name-clip/"/>
      <url>/call-me-by-your-name-clip/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/05/27/5b0a77b895b93.png" alt="Call Me by Your Name"></p><h1 id="以你的名字呼唤我"><a href="#以你的名字呼唤我" class="headerlink" title="以你的名字呼唤我"></a>以你的名字呼唤我</h1><blockquote><p>三四十年后，我将回到这里，回想起我永志不忘的这段对话，也有可能有一天我会想忘掉。我将与我的妻儿来到这儿，叫他们看这片风景，指着海湾、咖啡馆、“跃动舞厅”、“大饭店”，站在这里让那些雕像、草背椅和摇摇欲坠的木桌帮我回忆起曾有那么一个人名叫奥利弗。</p></blockquote><a id="more"></a><p>不得不说，在我看完《Call Me By You Name》的电影之后，我感到一丝丝遗憾和失落。不仅仅因为 Elio 和 Oliver 间那一段没有结果的感情，更因为影片无力于表达 Elio 丰富细腻的情感与心境。</p><p>我知道我知道，安德列 · 艾席蒙（即原著作者）作为编剧参与了电影的改编，但是电影镜头的表达依旧失去了 Elio 最令我着迷的内心戏。如果我没有看过原著，那么我对这部电影的评价一定是平庸而肤浅的，对此我深信不疑——因为 Elio 和 Oliver 的感情是如此波澜不惊，他们之间发生的一点一滴，不过是某人和某人的日常罢：</p><blockquote><p>-大家都在这里做些什么？<br>-不做什么。等夏天结束。<br>-那么，冬天做什么？<br>-先别告诉我：是等夏天来，对不对？ </p></blockquote><p>无论答案是什么，Oliver 其实都已看到 Elio 的内心，因为这之后的几个星期生发的情愫，会让 Elio 在这之后的多少个夏天想起这个夏天，想起曾属于自己并一直属于自己的卧室，想起被共享的属于自己的秘密基地，想起<a href="https://weibo.com/ttarticle/p/show?id=2309404158040470334211" target="_blank" rel="noopener">圣格来孟症候群</a>，想起红色、黄色、蓝色和绿色，想起植物王国的桃子，想起那个以自己名字呼唤的人。</p><blockquote><p>这话听起来有点像我几星期前第一次听到的 <strong><em>Later</em></strong>——尖锐、直率，阴郁沉闷，语调平板，没有一点我们刚刚共享的喜悦或热情。</p></blockquote><p>不可否认的是，害怕听到那句 <em>Later</em>  的不仅仅是观影者，更是 Elio 自己。因为这是来自 Oliver 的咒语和审判词——对二者间不可继续的对话不加注解地画上句点，对二者间不可继续的感情写下的休止符。无论 Elio 对李斯特的风格多么谙熟于心，无论 Elio 如何熟稔地用巴赫的风格去改写这首恋爱的变奏曲，最终获得的也仅是这满心期待的诗歌和乐章的未完成稿。</p><p>但，这已足够为内心的悸动做深刻的证明，足够为以名字呼唤的意乱情迷写下序章，足够向他展示自己的蛛丝马迹：</p><blockquote><p>我完全没想到要带他到这儿来。不只是为了向他展示我的小世界，也是为了请求我的小世界接受他，让我这个夏日午后独处的小基地也能认识他，评断他，看他适不适合这里，接纳他，以便我能回到这里来缅怀。我到这儿来逃离已知的世界，寻找我自己虚构的另一个世界。我向他引介我的起点。只要列出我在这儿读过的作品，他就知道我游历的蛛丝马迹。</p></blockquote><hr><h1 id="如果这都不算表白"><a href="#如果这都不算表白" class="headerlink" title="如果这都不算表白"></a>如果这都不算表白</h1><blockquote><p>「有什么是你不知道的？」<br>我看着他。机会来了。把握、或失去这个机会，但无论如何，我知道我永远无法摆脱这种耻辱；或者洋洋得意接受他的恭维，却对其他一切感到后悔。这或许是我这辈子第一次在毫无准备的状况下对成年人说话。我太紧张，以致无法做任何准备。<br>「我什么都不知道，奥利佛。不知道，什么都不知道。」<br>「你比这儿任何人知道的都多。」<br>为什么他要用乏味的信心喊话回应我近乎悲惨的语调？<br>「但愿你知道，我对眞正重要的事有多么无知。」<br>我拔足涉水，想办法既不溺水、也不安全游过，只是留在当场，因为这里就是眞相所在的位置——尽管我无法吐实，甚至给予暗示，但我发誓眞相就在我们身边，就像我们聊起刚刚游泳时搞丢的项链那样：我知道项链就在水里。但愿他知道，但愿他知道我给他每个机会，将二和二加在一起，然后得出比无限还大的数字<br>如果他明了，他必定早已起疑：如果他起疑，他必定曾经处于相同的立场，从平行小路的另一头，以冰冷、带着敌意、玻璃眼般犀利且无所不知的眼光观察我。<br>他必定想到什么——天晓得是什么。或许他不想露出太惊讶的神色。<br>「什么重要的事？」<br>他不老实吗？<br>「你明明知道。到了这节骨眼，就属<strong>你</strong>最该知道。」<br>沉默。<br>「你为什么要告诉我这一切？」<br>「因为我认为你该知道。」<br>「因为你认为我该知道。」他慢慢复述我的话，试着了解这几个字的完整意义，理出头绪，借着重复这句话拖延时间。我知道，铁烧得正灼热。<br>我脱口而出：「因为我希望你知道。因为除了你之外，我没有别人可说。」<br>就这样，我说出来了。<br>我说的够清楚吗？<br>我正要岔开话题，讲点海或明天的天气，聊聊父亲每年此时总是承诺要驾船去 E 城，眞不知是否可行。<br>但是多亏他，他不肯放过我。<br>「你知道你说了什么吗？」<br>这次我望着海，用含混疲倦的声调说。这是我最后的迂回、最后的掩蔽、最后的逃脱。 「知道，我知道我说什么，你<strong>一点</strong>也没误会。我只是不太擅长说话。不过你大可不再跟我说话。」<br>「等等。我没有误解你的话吗？」<br>「<strong>没有</strong>。」既然秘密已经脱口，我大可摆出从容不迫、略为恼怒的态度，就像屈服于警方的重罪犯，向一个个警察，一而再、再而三坦承自己如何抢劫店家。<br>「在这里等我，我得上楼去拿些文件。别走开。」<br>我用信任的微笑看着他「你很清楚我不会走开。」<br>如果这不算再次表白，那什么才算？</p></blockquote><hr><h1 id="我不羡慕痛苦本身，但我羡慕你会痛"><a href="#我不羡慕痛苦本身，但我羡慕你会痛" class="headerlink" title="我不羡慕痛苦本身，但我羡慕你会痛"></a>我不羡慕痛苦本身，但我羡慕你会痛</h1><p>令我遗憾的，还有那一幕 Elio 的 ASMR，电影的草草带过多半误导了太多的观众，让人以为这是因为 Elio 在一遍遍回想自己与 Oliver 释放荷尔蒙的欢愉。但恰恰相反，这正是现实上演的一出喜剧：</p><blockquote><p>或许是我的脚迷了路碰到他的。它撤退，不是马上，却也够快了，仿佛刻意留一段恰切的等待空当，好避免留下惊慌退缩的印象。我也多等了几秒，从没细想，只是让自己的脚开始搜寻另一只脚。才开始找，脚趾就碰到了他的脚；他的脚几乎动也不动，像一艘海盗船，尽管制造各种假象表示自己已经逃到数里之外，实际上却隐藏在距离仅五十码的浓雾中，一等机会出现就要突袭。我的脚还来不及采取任何行动，毫无预警，没给我任何时间接近他的脚或再度退回到安全距离之外休息，他突然温柔轻缓地伸脚压在我的脚上，开始爱抚摩擦，没有停歇。光滑圆润的脚踵顶着我的脚背，偶尔重重压上来，旋即放轻，以脚趾一阵爱抚，从头到尾暗示这是抱着好玩和游戏的心情做的。他以这种方式来冷落坐在我们对面从事“正餐苦差”那些人，也告诉我这件事与其他人无关，彻底仅限于我们之间，这是我们的事。但我不该做多余的解读，他鬼祟、顽强的爱抚让我背脊发凉，令我头昏目眩。不，我不会哭，这不是恐慌发作，这不是“意乱情迷”，我也不打算穿着短裤达到高潮，虽然我非常、非常喜欢，尤其他以足弓叠在我脚上的时刻。我盯着面前的沙拉盘，看见点缀着果汁的巧克力蛋糕上似乎有人倒人了比平常多的番茄酱汁，而且愈来愈多，那酱汁似乎来自我头上的天花板，直到我醒悟那是从我的鼻子大量涌出的。我倒吸一口气，立刻捏起餐巾往鼻子上捂，尽可能把头往后仰。“冰块，玛法尔达，拜托，快！”我轻轻说，表现出一切都在掌握中的样子。我向客人道歉：“今天早上我去了山上。常有的事。”</p></blockquote><p>我们和 Elio 一样，无法知道其父的生命经历，但我们也许可以获得启迪：</p><blockquote><p>我们的心、灵和身体是绝无仅有的。许多人活得好像自己有两个人生可活，一个是模型，另一个是成品，甚至有介于两者之间的各种版本。但我们的心和身体只被给予这一次，而在你终于领悟之前，你的心会疲惫，至于你的身体，总有一天没有人要再看它，更没有人愿意接近。现在的我觉得很遗憾。<strong>我不羡慕痛苦本身。但我羡慕你会痛。你可能感到难过，痛苦。别让它消失，更别说那些有过的快乐</strong>。</p></blockquote><div class="aplayer" data-id="516358164" data-server="netease" data-type="song" data-mode="single" data-autoplay="true"></div>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx配置反向代理隐藏服务端口</title>
      <link href="/how-to-use-reverse-proxy-to-hide-server-port/"/>
      <url>/how-to-use-reverse-proxy-to-hide-server-port/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>对于个人开发者来说，在一台 Linux 服务器或自己的 VPS 上，通常会部署多个 Web 服务，有的服务默认监听的是 80/443 端口，只需对 Nginx 进行简单的配置、设置伪静态等等即可完成，而有的服务既非静态网页，也不使用 Linux 中既有的 PHP 等程序，而是使用自己项目内部构建的程序（比如 Node.js、Tomcat 等），这些服务往往监听的是非 80/443 端口，在配置个人域名后，不得不在域名后加上服务器端口才能访问，既不美观，也不方便。是否有办法可以隐藏 URL 中的服务器端口，使用域名进行区分？</p><p>例如：<br><a href="http://1.1.1.1:1111" target="_blank" rel="noopener">http://1.1.1.1:1111</a> -&gt; <a href="http://1.example.com" target="_blank" rel="noopener">http://1.example.com</a><br><a href="http://1.1.1.1:2222" target="_blank" rel="noopener">http://1.1.1.1:2222</a> -&gt; <a href="http://2.example.com" target="_blank" rel="noopener">http://2.example.com</a><br><a href="http://example.com:3333" target="_blank" rel="noopener">http://example.com:3333</a> -&gt; <a href="http://3.example.com" target="_blank" rel="noopener">http://3.example.com</a></p><a id="more"></a><h1 id="代理服务器的类型"><a href="#代理服务器的类型" class="headerlink" title="代理服务器的类型"></a>代理服务器的类型</h1><p>与代理服务器相关的概念，主要有正向代理、反向代理、透明代理。这三者的关系在<a href="http://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">这篇文章</a>里介绍的很清楚，在此言简意赅地做举例梳理：<br>假设有<code>客户端 A</code>、<code>代理服务器 B</code>、<code>Web 服务器 C</code>：</p><ul><li><p><strong>正向代理</strong>：<code>客户端 A</code> 向 <code>代理服务器 B</code> 发送一个请求并指定 <code>Web 服务器 C</code> 为目标，<code>代理服务器 B</code> 转交请求并将获得的内容返回给 <code>客户端 A</code>。主要实践是突破网络封锁的各类工具。</p></li><li><p><strong><a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" target="_blank" rel="noopener">反向代理</a></strong>：<code>客户端 A</code> 类似于 Web 服务器，发出的内容和请求将由 <code>代理服务器 B</code> 进行判断分发，<code>客户端 A</code> 不知道 <code>代理服务器 B</code> 的存在。主要实践是 WEB 服务。</p></li><li><p><strong>透明代理</strong>：<code>客户端 A</code> 不知道 <code>代理服务器 B</code> 的存在，在访问 <code>服务器 C</code> 时，由 <code>代理服务器 B</code> 代为访问，但 <code>代理服务器 B</code> 对报文进行改写和过滤。主要实践是公司内部的网络管理系统（如深某服）。</p></li></ul><h1 id="反向代理的意义"><a href="#反向代理的意义" class="headerlink" title="反向代理的意义"></a>反向代理的意义</h1><ol><li>如前言所述，把不同的子域名转发到同一机器的不同的服务上。</li><li>进一步地，把不同的请求转发到不同的服务器上——即负载均衡。</li><li>隐藏实际服务，提升安全性</li></ol><h1 id="配置-Nginx-反向代理"><a href="#配置-Nginx-反向代理" class="headerlink" title="配置 Nginx 反向代理"></a>配置 Nginx 反向代理</h1><p>实际上对前沿所述的情况，针对某个服务进行 Nginx 反向代理配置很简单，下面是监听域名 example.com 并转发到 8080 端口的例子：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>   <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  example.com;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在<a href="https://www.jianshu.com/p/2e0fe505766b" target="_blank" rel="noopener">另外一篇文章</a>中，我看到了如下示例：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">upstream</span> webServer01 &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3001</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> webServer02 &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3002</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.myApp01.com;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/test.log;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span>       http://webServer01;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.myApp02.com;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/test.log;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span>       http://webServer02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这一配置也能实现以 <code>www.myApp01.com</code> 访问时，将进入<code>webServer01</code>，当我们以 <code>www.myApp02.com</code> 访问时，将进入<code>webServer02</code>。其中已经用到的 <code>upstream</code> 模块就是用来配置负载均衡的。关于负载均衡的详细资料，可以参考<a href="http://tengine.taobao.org/book/chapter_05.html" target="_blank" rel="noopener">Nginx 开发从入门到精通</a></p><h1 id="宝塔面板配置"><a href="#宝塔面板配置" class="headerlink" title="宝塔面板配置"></a>宝塔面板配置</h1><p>如果使用了<a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔面板</a>进行建站，可以在面板菜单【网站】中对特定网站进行设置，转发 1200 端口的例子如下图：</p><p><img src="https://i.loli.net/2018/05/17/5afd9bba06413.png" alt="宝塔面板配置网站反向代理"></p><hr><p>参考链接：<br><a href="http://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">图解正向代理、反向代理、透明代理</a><br><a href="https://www.jianshu.com/p/2e0fe505766b" target="_blank" rel="noopener">Nginx 反向代理的一次使用总结</a><br><a href="http://tengine.taobao.org/book/chapter_05.html" target="_blank" rel="noopener">Nginx 开发从入门到精通</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Nginx </tag>
            
            <tag> Web </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《回锅肉和香菇菜心的语言等级》读书笔记</title>
      <link href="/language-level-of-pork-mushrooms-and-cabbage-clip/"/>
      <url>/language-level-of-pork-mushrooms-and-cabbage-clip/</url>
      
        <content type="html"><![CDATA[<p>第 4 页<br>以北京的地名来论，老北京口中，以前北京内城的九大门：正阳门、崇文门、宣武门、东直门、朝阳门、西直门、阜成门、德胜门、安定门和皇宫里的天安门、午门、前门，都是不能加“儿”的，一来这些门体量颇大，高耸巍峨；二来，它们还常常跟皇权神权紧密相关，是高高在上万民敬仰的所在，断没有皇上说：“来呀——把这乱臣贼子拖出午门儿斩首！”那也太不严肃了。相反，东便门、西便门则常常在口语里听到儿化。这就是隐藏在语言背后的文化秩序。如今北京城的大门拆得所剩无几，外地人又如何分得出哪门大哪门小？也就越说越乱了，不讨再乱地没人说天安门儿。</p><hr><p>第 6 页<br>中国人对于数字的概念，从个、十、百、千数到万跟亿，最多到兆，再往上一般人不大知道还有京、垓、秭、穰、沟、涧、正、载、极……那么大，生活中也的确用不上。但无论怎么大，递进规律是一样的，早在东汉，《数述记遗》一书中就有记载，万万为亿、万亿为兆、万兆为京……所以按照中文的计数方式，若是四位一隔，立时眉目清楚。</p><a id="more"></a><hr><p>第 11 页<br>在广州，番字两读，“几番痴心”读同“翻”，在地名番禺里却要读作“潘”。一般人觉得这就是个多音字，而语言学家从类似线索里，则发现了语言演变的规律。这就是清代大学问家钱大昕总结出的“古无轻唇音”。这条关于汉语声母演变的重要规律，说通俗点，就是上古汉语里，只有双唇触碰在一起发音的b、p、m；没有把牙齿放在下唇上发音的 f。唇齿音 f 是唐宋以后才慢慢发展演变出来的。只是后来社会在变，语言也在变，一部分双唇音分化出了唇齿音，“番”字就在变化之列，改朝换代时节，日常口语“三番两次”随波逐流，牙齿轻巧地往前探，声母成了 f。至于“番茄”、“番薯”、“番枧”，都是明清以后才从海外传入中华的东西，那时大势已定，自然也读如“翻”。但地名因为跟特定的山川、河流、区域相对应，在本地是经常挂在嘴边的，为了交际的方便，读音字形需要相对稳定，以免造成误解含混。作为在战国时候就出现了的地名“番禺”，于是成了思想保守、行动迟缓的遗老遗少，顽固地双唇一抿，保留了两千年前的古音。<br>上海开埠晚，很多马路的命名来自别处的地名。就拿番禺路来说，一公里多长，北起延安西路，南至虹桥路，早年初建时以美国城市命名为哥伦比亚路，1943 年改名番禺路，沿用至今。不少民国政要，比如胡汉民、叶公超、古应芬、叶恭绰都是广东番禺人，就算当初改名没有攀附权贵的意思，至少也沾民国望人的光。早年大家比较了解番禺二字的由来，也颇知道正音如何读。前几年还有老人家写信到报社提意见，投诉上海的 72 路公共汽车电子报站读了别字，把番禺路读成了“翻禺路”。风流云转世事变迁，在如今上海人的知识谱系里，番禺二字就只是延安西路附近的一条马路而已，甚至不知它是广州下辖的一个区，自然将番禺之番，等同于番茄之番。我接触到的上海本地人或者上海新移民，十有八九根本觉得说 fan 禺路天经地义。</p><hr><p>第 16 页<br>台湾国语会编订过《国音标准汇编》，作为推行标准国语的根据。1946 年起，“老北京”齐铁恨先生每天早晨七点，准时在电台担任“国语读音示范”，播讲当时的各种国语读本，匡正语音。说齐老先生“一言九鼎”也不为过，当时几乎全台湾的国语教师都是就着广播现听现学现卖的，这位国语运动老专家的“京片子”于是就成了台湾国语的活标准，他嘴里的连词“和”读“汗”也就深入人心街知巷闻。齐铁恨是老舍的好友，当年老舍写成名作《骆驼祥子》之前，曾经写信给他打听过骆驼的生活习性，因为齐是北京香山人，山下有许多人家养骆驼。九十年代老舍的儿子舒乙访问台湾，除了觉得“乡音灌耳”，也很好奇台湾人把连词“和”念成“汗”。当时台湾作家何欣解释说：“这是齐铁恨先生在电台上教的，他的话就是法律，怎么教就怎么说了。”舒乙大笑，说：“齐先生使劲使过分了。”舒乙有此一说，大抵因为在北京土语里，连词“和”读 han 原本是轻声，齐老先生上电台郑重其事字正腔圆，一来二去，读得重变成了四声的“汗”。以至于 1949 年以后台湾出的几本正音字典，都标成了 han。这可让纯正北京口音的舒乙，微微觉得，有点汗。</p><hr><p>第 23 页<br>事实上，粤语跟普通话，或者粤语跟闽语之间的语言距离，甚至是大过欧洲同一语系之下的两种语言的。比如一个西班牙人和一个葡萄牙人，可以自说自话，但这几乎不妨碍他俩聊天儿。而一个只懂粤语的人和一个只懂闽语的人，却完全是鸡同鸭讲。这也是为什么大多数西方语言学家坚持认为，汉语不是一种单一的语言，而是一组有亲属关系的语言（包括了粤语、闽语、吴语、赣语、湘语、客家话和北方官话）组成的庞大语族。不借助民族共同语“普通话”，大部分的汉语方言都无法互通。但事情的另一面是，可以聊天儿的西班牙人和葡萄牙人，看不懂彼此的报纸，完全听不懂对方说什么的广东人和福建人，却可以笔谈。这也是国内的语言学家坚持粤、闽、吴、赣语等等是汉语方言的重要原因。神奇的汉字，打通古今连接南北，这一点，又是使用拼音文字的欧洲人很难理解的。</p><hr><p>第 24 页<br>一直以来坊间流传着一种说法，认为 Mandarin 源于中文的“满大人”。说是以前外国人把满清官员叫作“满大人”，随之他们说的话也就成了 Mandarin，听上去似乎挺靠谱儿的。清末积贫积弱，洋人一攻进来，满大人纷纷丢盔弃甲，加上割地赔款的不堪往事，很多人也就嫌弃了这个词，不愿意它代表咱音韵铿锵的普通话。事实上，这还真是冤枉了 Mandarin。<br>据利玛窦考证说，这个词最早来源于梵文，意思是会思考的人。后来从梵文发展到印地文，流传到马来文中，又进入了葡萄牙文成为 Mandarin。不管这么曲折的路线是不是十分可靠，但从明朝起西方人便称呼中国官员甚至亚洲国家官员为 Mandarin 了，那个时候还完全没有“满大人”呢。<br>明朝及清朝中叶之前中国的官方标准语一直是南京话。清初名义上的国语是满语，怎奈汉文化力量强大，进了北京城的八旗子弟都渐渐改了口音，谁也敌不过这时代潮流。于是，雍正八年清政府设置了正音馆，推广以北京音为标准的官话——官员在庙堂上说的话，这就是今天普通话的前身。当年开科取士，写八股文倒是没什么，大家读的都是“四书五经”，用的都是汉字，但一开口，没有官话，皇上如何听得懂福建老臣说话？即便不做京官，清代规定地方上从督抚直至州县一级的各路官员，都不能在自己家乡所属的省、府、州、县内担任要职。跨省做官，也没见过县太爷升堂时还带个师爷翻详的。<br>也就是在雍正年间，英国人开始把朝廷推行的“官话”翻译成了 Mandarin。同一词根，英语里还有 mandate（政府权力、命令）、mandary（官方的、行政的）等等。用 Mandarin 正是取其“行政推广的语言”之意。这个词有三百多年的历史了，也正是它在英文世界接受程府比较高的原因。</p><hr><p>第 34 页<br>不过，在美国，虽然有 94% 的美国人说英语，却只有 31 个州将英语确立为官方语言，不久前还有国会议员提出议案，要求美国政府所有的官方活动都使用英语，为移民规划设立统一的语言标准。在美国国家层面上，英语至今都根本没有政府官方工作语言的法定地位，好玩儿吧？</p><hr><p>第 47 页<br>因为有强烈的北京口语色彩，“俩”颇得人心，常常被人拿来转京腔，于是用错的例子比比皆是。有些人错在望文生义，觉得有个人字边，写到人的时候就用它以示郑重。其实根本不关人事。北京话里有个熟语叫仨瓜俩枣，指的就是不值钱的小物件。正因为“俩”原本就隐含了量词，说“俩个人”变得叠床架屋。“小两口”也一样，已经有了量词“口”，当然就不能再用“俩”了。<br>有一次碰到编辑和校对争执，有篇文章的开头写着：我有俩姥爷。原本是个挺有悬念和情节感的开头，显然要随之铺陈的是关于姥姥的曲折人生。谁知道在校对那里，竟然被改成了“我有姥爷俩”。“俩”字乾坤大挪移，放在了姥爷后面，让人啼笑皆非。校对丝毫不觉得错，振振有词地拿出夫妻俩、姊妹俩、妯娌俩做例子——亲戚关系不都是把“俩”放在后面么？乍一听，还真被他唬住了。仔细分析，的确“俩”既可以出现在名词之前，也可以出现在名词之后。但放在名词后面的“俩”，限制要大得多，根本不能自由滑动。<br>放在后面的“俩”，要求前面的名词则必须是关系词，而非身份词。比如夫妻、妯娌、姊妹、师徒，都是由关系双方并列成词，二者缺一不可，后面加“俩”，恰好是强调了这种关系必须两个人都在才能成立。而姥爷是种身份，只要闺女生了孩子，某个人就会立即升舱做姥爷，即便外孙不在眼前，也不影响他姥爷的身份。至于表面看上去的反例哥俩、姐俩、娘俩、爷俩，在北京话口语里，中间都是要加“儿”的。它们指称的仍然是兄弟、姐妹、母子（母女），父子（父女）关系。</p><hr><p>第 57 页<br>语言学家经过大量的调查实例发现，人们倾向于用较高的抽象度去编码和传播内群体的积极行为和外群体的消极行为，反之亦然。<br>这话有点高深？把它翻译得通俗点就是，人在说自己人好事和外人坏事的时候，习惯抽象性拔高。韩老师说起焦刘洋用到了“红色中国”和“伟大时刻”，说起破纪录的美国人则很客观地描述着她的成绩和赛前承诺。中国选手失手的时候，韩老师及其他解说员都决计不会说这是“中国的失败”。从认知的角度来看，人不管属于什么群体，是好事还是坏事，总是倾向于用抽象的语言区描述符合自己期待的行为，比如西方世界通常觉得犹太人吝啬，于是任何犹太人有吝啬意味的行为，都会被抽象为犹太人的民族特性，而遇到一个犹太人慷慨解囊，由于不符合人们的预期，行为就被认为是突发的、非典型的，描述的语言就会具体起来。觉得这例子有点远？回忆一下你是怎么描述自家的聪明儿子和陌生的河南人的。偏见其实无所不在。</p><hr><p>第 63 页<br>在语言当中。汉语中有不少词汇来自外语，从早前的印度、波斯到后来的日本和西洋各国。外来词恰恰反映了汉语跟异文化交流的轨迹。早年留洋的人是把所有的外来词都音译成汉字的，比如来自梵语的“摩诃般涅槃那”，来自英语的“烟士披里纯”和来自希腊语的“奥林匹克”。问题是这些词音节实在太多了。古汉语以单音节词汇为主，发展到现代汉语，扩展成双音节词汇为主，但始终倾向组成词的每个字都有意义。名词很少长过三音节，四字格成语通常是用来描摹性状而非称呼事物。在汉语中生根发芽的外来词，比如“沙发”、“咖啡”什么的，绝大多数都是双音节，那些单个字没意义且还特别冗长的外来词可就命途多舛了：“摩诃般涅槃那”被斩首剁脚，只剩了“涅槃”；不知所云的“烟士披里纯”被清理门户，改用家生子“灵感”；至于那全球瞩目的运动会，也不得不简缩开支成了“奥运会”，只有开幕式上白岩松特别富有激情的解说，才会一字不漏地说“奥林匹克”。</p><hr><p>第 68 页<br>石头剪子布的游戏如今遍布全中国，几乎所有的孩子小时候都玩儿过。普及性这么高的东西，各地叫法却五花八门，北京人叫“cei丁壳”，上海人叫“猜咚猜”，成都人叫“实拳儿”，西安人叫“猜咚吃”，天津叫“笨桥裹”，长春人叫“钢浪锤”，杭州人叫“琴棕绷”，广州人叫“包剪揼”。相比之下，出现在汉代的“手势令”发展到今天，在各地方言中无非叫“猜拳”、“划拳”或者“豁拳”，花样并不很多。二者叫法的巨大反差恰恰说明了，石头剪子布的出现很可能要晚得多，没准儿都是明代以后的事儿。之所以找不到比较准确的记录，多半是因为文人觉得那是无聊童戏，不屑记之。编纂词条的人好古之心可以理解，但追溯到汉代，未免牵强附会。</p><hr><p>第 78 页<br>美国语言学家曾经提出过“萨丕尔一沃尔夫假说”，他们倾向认为人类所有较高层次的思维都依赖于语言，人们习惯使用的语言的结构影响人们理解周围环境的方式。这一观点后来被称为语言相对论或者语言决定论。不过好在，语言只是赋予了思维以具体的外壳，这个世界上，既有持相同语言的人彼此的误解，也有持不同语言的人可能的沟通。世界的边界，远比语言大得多。</p><hr><p>第 79 页<br><strong>柬埔寨的译法</strong><br>最近因为中国人民的伟大朋友过世，柬埔寨一时成为话题热点。就有人奇怪，柬埔寨三个字跟英文的 Cambodia 相比，除了中间的 “埔” 字约莫有点 bo 的样子，前后的 “柬” 和“寨”，似乎相去甚远。虽说两种语言间的音译，很难百分百准确，但这口音也太重了点吧？<br>这事还得话说从前。这个中南半岛的古国有两千多年的历史。柬埔寨如今的国名，按照高棉语的读音转写成拉丁拼法是 Kumpuchea，这个名字据说源自他们的建国元勋印度婆罗门僧侣 Kumpu，而 chea 意为子孙。柬埔寨就是 Kumpu 后裔的自称。中国的秦汉时期，这里是扶南属国。到了《隋书》称为真腊，是从 Siem Reap 之名译来的。<br>柬埔寨旧名 Khmer，《唐书》里称之为吉蔑、阁蔑都是由此而来。对上世纪七十年代末八十年代初国际新闻有印象的人，应该记得红色高棉的出现频率相当高，高棉是 Khmer 后来的译法。元代元成宗铁穆尔曾派温州人周达观出使真腊，周在吴哥呆了一年，回国后写了总结报告《真腊风土记》，开篇说得明白：“真腊国或称占腊，其国自称曰甘孛智。今圣朝按西番经，名其国曰澉浦只，盖亦甘孛智之近音也。” 这段话可以看出三层意思，第一，周达观标题里的真腊，就像今天有人写篇关于日本的东西，起个名儿叫《东瀛十日》或者《扶桑行迹》之类的，纯粹为了拗个复古的姿势。第二，周达观在真腊呆了一年，想来是颇学了几句当地高棉话的，他所说的甘孛智应当是自己揣摩着当地读音翻译成汉语的。第三，元朝总称西域各族为西番，“圣朝” 命名的 “澉浦只”，是从佛经里转来的二手货。<br>今天通行的 “柬埔寨”，最早的记录是明代万历年间，用“柬” 来对译 kum，今天读来相去甚远，不是古人翻译得不准确，而是 400 多年来汉语发生了变化。一个 “柬” 字，反应的恰是汉语语音古今演变的两条重要规律：舌根音的腭化和 m 尾韵的消失。语言的演变因为地域差异而不平衡，在这场语音演变的马拉松中，北方话跑得比较快，声母 k 受发音部位靠前的韵母影响变成了 j，韵尾 m 也并入了 n，就读成了 jian；粤语跑得比较慢，仍然保持了 “柬” 古时的特征，读作 kam。如同一场凶杀案的现场，法医循着半个模糊的脚印，最终描画出嫌犯的身高体重甚至职业特征普通人大惑不解的译音偏差，恰恰为研究语言演变提供了生动的证据，这样的证据还能在方言中得到印证。<br>至于那个 “寨”，对应于高棉语的 chea，中国人听来其实还满像的。英语里转写成 dia，大概是从法语 Cambodge 里来的，但若拿这个笑话人家翻得差，又着实五十步笑百步。</p><hr><p>第 84 页<br>在不同类型的语言中，语序的重要性不同。汉语是没有形态变化的语言，语序举足轻重，语序一变，“我打你”和“你打我”意思截然不同。即使“饭我吃”这种基本语义关系跟“我吃饭”没有区别的句子，也因为把受动者提到了前面，有指明语义焦点作用，把饭当作一个话题来处理。它不能单独成句，总是要放在特定的环境或上下文当中。比如可能是对比“饭我吃，活儿你干”，跟正常叙述的“我吃饭”有所区别。而在拉丁语、芬兰语当中，虽然有主流语序，但因为每个名词都有标明其语义角色的“格”的变化，有了身份标记，游走起来则变得相当灵活。<br>语言学家把汉语这种固定词序和通过独立的虚词来表达语法意义的语言称为孤立语，相对应的，德语、法语、拉丁语这种由词的形态变化实现语法作用的称为屈折语。单个汉字无变一身轻，行动却比较受限，必须各安其位；拉丁语里每个名词都要考虑性、数、格，每个动词都有时、体、态，戴着形态枷锁，相对却行动自由。这个世界真是公平。</p><hr><p>第 88 页<br>要是会说现今老南京城区八十岁以上的老人家那种保留了入声、分得出尖团的“老南京话”，段位就相当高了，穿到明朝如鱼得水。而且这种口音相当高贵，哪怕后来明朝迁了都清朝设了正音馆，但直到清末，南京官话都是官场和知识阶层的主流口音，享有非常高的地位，当时有“申话不如京话好，南京土白最堪嘉”之说。正因为明清两代作为汉语正音，老南京话相当稳定，会此种口音，当能应付“明穿”“清穿”跨代之需，管用五六百年呢。</p><hr><p>第 94 页<br>东汉末年人们开始使用反切注音。据说是因为佛教的传入，某些儒生受到梵音拼音字理的启发，以两个字来注音，取上字的声母，取下字的韵母和声调，拼合即能读出被切字的读音。最初这种注音方式写成“某某反”，因为避讳造反的“反”，唐未改称“某某切”。比如“苏”，注为素姑切，就是取了“素”的声母 s，“姑”的韵母 u 和平声的声调。直到 1918 年北洋政府教育部公布国语注音字母之前，其间的一千多年，反切法是汉语最主流的注音方法。<br>上字取声，下字取韵，反切的出现，标志着古人开始对汉字音节进行拆分，这也是中国音韵学的开端。不过，因为反切上下字都各有声韵，在拼合时需要掐头去尾，不是那么直接，而且有的韵字数很少，找不到合适的反切字不得不借用旁韵，也不能算十分精确。更何况这方法用了一千多年，若意识不到汉语声韵调都发生了变化，唐人标注的反切，清人又会百般不解。故而音韵学即便在读书人当中也被视为绝学，不敢轻言。</p><hr><p>第 103 页<br>其实，用身体作尺子，不是中国人的专美。罗马帝国的查理曼一世规定以他的脚长为“一罗马尺”，英王埃德加规定过，以他拇指的关节长度为“一英寸”，亨利国王规定他的鼻子尖到伸直手臂的中指尖距离为一码。所谓英尺 foot 跟脚是同一个词。脚的长度因人而异，这个英尺如何确定呢？有人说是约翰国王、也有人说是查理国王的脚。不过到十六世纪，德国人另辟蹊径。他们在一个礼拜日，让从教堂里走出来的 16 个男子站在一起，然后将其左脚的长度加在一起，除以 16，求出一个平均的脚长。这就是今天英尺的由来。从王的专权到普通人的平均数，这是时代的进步。<br>为什么汉语把 foot 翻译成英尺？前阵子有人在微博上发帖，声称手腕到手肘的距离恰跟自己的脚长一致，很多人搬脚比画，纷纷跟帖大呼神奇。其实，被称为测量解剖学鼻祖的达·芬奇早就发现了这个秘密，在他的素描名画《维特鲁威人》中，人手前臂的长度和脚恰是一样的比例。别忘了，汉语中前臂的那根骨头，就叫尺骨。</p><hr><p>第 179 页<br>日语除了来自日本民族原来的日常动词和具象名词之外，历史上吸收了大量的外来语，早期是汉语，到了近代明治维新后，除了一些后来还回传到中国的“政治”、“经济”、“民主”、“干部”等用汉字意译的西方文化词汇外，更大量是音译的来自英语、荷兰语、葡萄牙语、法语的现代军事、科技、艺术词汇，在日文中用片假名标示。我的朋友抱怨过他在日本读研究生的时候，计算机课本宛若天书，满篇都是片假名，“给个英文版我大概更明白点。”他苦笑着摇头。在当代，习惯了外来词汇直接拿来就用的日本人，把日文餐桌词汇直接音译成英语，也就是可以理解的事情了。</p><hr><p>第 190 页<br>这真让人有点焦虑。焦虑的不是电脑的强大，而是人脑的懒惰。如今电脑能写的，还只是些有固定模式的“陈词滥调”。但是按照计算机深度学习的能力和神经式网络的研究进展，也许它会写得越来越好。但要是人的阅读快感，仅仅来源于那种模式化的玄幻小说，渐渐丧失感受新奇与精微的能力，也许真有一天，强大的机器写作就把唐家三少给替代了。<br>人类最终能够与机器抗衡的，大概就是那些微妙的东西吧。而微妙，决定了这世界不是骇客帝国。</p><hr><p>第 214 页<br>重复，是跟幼儿的心理发展历程紧密相关的。按照弗洛伊德老人家的说法，从母体的保护中降生，面对外部世界毫无还手之力的孩子，都会有一种害怕和无能的感觉，这就是出生创伤，这样的创伤带来焦虑，因为对环境无法预期和控制。而重复的东西，让人获得安全感，那些纷至沓来的固定句型和可以预期的情节，让孩子检验着自己的记忆和期望，因此对于孩子的世界来说，既定的重复情节提供的恰是这样一种似曾相识，从而带来心理上的安全感，同时关键词的替代能够带来些许新鲜感，这就是三段式故事背后的心理依据，甚至这构成了人类文化心理原型，超越种族与时代。</p><hr><p>第 216 页<br>语言与思维的关系，是个很有趣的哲学命题。美国语言学家萨丕尔和他的弟子沃尔夫曾经提出过关于语言与思维关系的假设，他们认为所有高层次的思维都倚赖于语言。说得更明白一些，就是语言决定思维，这被称为语言决定论。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/view/subject/l/public/s28243310.jpg" alt="《回锅肉和香菇菜心的语言等级》"><br><a href="https://book.douban.com/subject/26559540/" target="_blank" rel="noopener">《回锅肉和香菇菜心的语言等级》</a><br>作者: 李倩<br>出版社: 商务印书馆<br>ISBN: 9787100112697</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《中东死生门》读书笔记</title>
      <link href="/life-in-the-middle-east-clip/"/>
      <url>/life-in-the-middle-east-clip/</url>
      
        <content type="html"><![CDATA[<p>第 IV 页<br>以色列与巴勒斯坦冲突的故事似乎陷于循环，死结除了政治复杂角力，还在于敌对双方的主流叙述，都拒绝视对方为“人”，而限定为魔鬼。发动大众跟魔鬼作战是容易的，围剿人，则会遭遇各种道义束缚。在我两年的拍摄中，从没有见过纯粹的魔鬼或天使，流泪的流血的都是人。“妖魔化”对方的手法，在全世界各种冲突中都可以见到。</p><hr><p>第 38 页<br>在加沙，日常生活与突然死亡之间，赴死是一个特殊的状态，可以延展，可以重复。它是舞台上的一记亮相，是日常生活发生的一次核聚变，它的光芒照亮了日常，令之神圣，但也足以顷刻间摧毁生活。就像观察中国人怎么吃，法国人怎么恋爱，要了解巴勒斯坦人和以色列人，就要看他们怎样对待死亡。</p><a id="more"></a><hr><p>第 46 页<br>没有多少媒体报道萨希卜的故事，因为他没有炸死其他人我在地图前站了好一会儿。不知道招募萨希卜的人用的什么诱惑。但可以想见，他生长的环境里，赴死的仪式频繁演出，它接管了所有绝望、不如意，乃至希望的去向。它指向为一个政治目的而死，是一切的最后答案。</p><hr><p>第 68 页<br>逾越节。耶路撒冷城市边缘，圣约翰受洗堂旁边的一个小咖啡馆。摆设很有创意，中国的洋铁皮壶漆成大红大蓝，描上花花草草。一看菜单，发现这家咖啡馆并不遵守逾越节不能吃含酵食品的规矩。服务小姐笑笑：“我们什么都有。”以色列有两张面孔，一张宗教，一张世俗。</p><hr><p>第 76 页<br>注意到胖主唱穿着军裤，我问他是不是在服兵役。其他人起哄说，胖子在耶路撒冷情报部门工作。“在情报部门，你不需要聪明，只要足够聪明。”胖子有几分得意地说。我问他，对巴勒斯坦人来说，什么才是“全力控诉”呢？他也说不清楚，反正“自杀爆炸损害了他们自己”。“2000年流血冲突爆发前，如果我们想派军队进约旦河西岸的巴勒斯坦城市，很犹豫，因为那是巴勒斯坦人的地方，现在一只要有一次自杀爆炸，我们毫不犹豫冲进他们的村庄……”</p><hr><p>第 89 页<br>头巾隐藏头发，听说女性的头发被视为引发邪念之物；长袍自然是为了遮盖身体线条。阿拉伯妇女非常爱美，不化妆她们是不会出门的。袍子、头巾、拎包和鞋子颜色必须统一，袍子多为一色，头巾可以斑斓。</p><hr><p>第 101 页<br>转上顶楼阳台，金顶清真寺、阿克萨清真寺，历历在目。“‘阿克萨’的意思是极远、天边，”谢姆托夫用英语飞快地说，“但阿克萨不一定在耶路撒冷，阿拉伯人无根据地把阿克萨同耶路撒冷联系在一起，还宣称对这里的主权……不过你可千万别跟穆斯林这么说，也别说这是我说的。”他一再叮嘱。</p><hr><p>第 113 页<br>冒着大雨，我和拉纳终于来到伯利恒圣诞教堂前—传说中耶稣诞生的地方。<br>低头弯腰进了一道小门。“弯腰进入谦卑之门时，别以为我心里不害怕……”美国《洛杉矶时报》女影记者科尔这样回忆。2002 年 4 月，123 个遭到以色列军队围追堵截的巴勒斯坦人闯入圣诞教堂寻求庇护，与以色列军队对峙 39 天，终获和平解决。对峙期间，科尔突破封锁，从这扇“谦卑之门”跑进教堂，拍摄了后来获得普利策新闻奖的照片。入口如此窄小，传说是基督徒为了阻挡穆斯林骑马进入。不管怎么说，为进入圣地而弯腰谦卑，仿佛天设。</p><hr><p>第 143 页<br>在一处僻静的小山头脚下，几个巴勒斯坦人沿弯弯曲曲的小道走来。安说，看，这些人穿小路，就可以绕开以色列检查站。“自杀爆炸者就是这样渗透到以色列的？”我问。“有一部分是。安承认。“那么以色列为什么不把这些道路全部封死呢？”“西岸地形错综复杂，与以色列的交界线很长，根本不可能全部堵死。”安还说，吉普车驶过的许多道路正是近几年形成的，因为原来的道路已经被以色列封死。<br>安认为，修建隔离墙并不能杜绝人弹，真正用意是攫取更多土地。隔离墙并没有按照 1949 年巴以停战分界线，也就是“绿线”修筑，而是越过“绿线”，伸进巴勒斯坦控制区，形成一道实际边界。<br>隔离墙打破了巴勒斯坦人与土地之间的联系，失去土地的巴勒斯坦人将变成以色列或邻近阿拉伯国家的工厂奴隶，安这样形容。更惊人的是，大部分修建隔离墙的工人是巴勒斯坦人——在失业率达到 70％ 以上的约旦河西岸巴勒斯坦城市，这也是一份工作。<br>吉普车再次上路。在一条5米多宽的土路两侧，各出现一道铁丝网。安指给我看，铁丝网背后各是一个巴勒斯坦村庄。两个相隔仅5米的村庄今后如何往来呢？以列建议修建地下隧道供巴勒斯坦人行走一当然，这得由巴方出钱，而以方控制出入。</p><hr><p>第 152 页<br>在失业率高达 75％ 的加沙地带，有一份工作实在不易。埃雷兹检查站旁有一个以色列工业园，在那里打工的 1500 多名巴勒斯坦人主要从事钢铁、塑料制品加工，每小时收入 5 谢克尔，一天下来可以挣 50 谢克尔。如此算来，每月收入可以达到 1500 谢克尔，相当于加沙城里一个公司职员的月薪！但工人们否定了我的想法。一星期中有三四天以色列因为‘安全原因’关闭工业区。”另外有一万多名巴勒斯坦人获准出埃雷兹，到附近以色列城镇工作，但每天必须返回加沙地带。<br>过关的辛苦且不说，最难的是两头受“威胁”。哈马斯等激进组织“恐吓”上班的工人:“给以色列人打工就是背叛巴勒斯坦人！”向工业区发射的卡桑火箭，不止一次落到工人队伍里；而大多数被迫成为“巴奸”、向以色列提供情报的巴勒斯坦人，也出自工人队伍。道理很简单，一张打工证，全家老小的生计。曾经有一名杰哈德官员遭到以色列“定点清除”，“出卖”他的正是自己的远房侄子。侄子去以色列工业区打工，从姓氏上被以色列方面发现他同那名杰哈德官员来自同一家族。摆在他面前的问题就是：要么出卖叔叔，要么失业回家。</p><hr><p>第 198 页<br>“Abraham”和“Ibrahim”分别是希伯来语、阿拉伯语对“亚伯拉罕”的不同发音。根据《圣经·旧约》和《古兰经》记载，亚伯拉罕是犹太人和阿拉伯人共同的祖先。犹太人是小儿子，亚伯拉罕同发妻生的；阿拉伯人是长子，亚伯拉罕跟婢女生的。</p><hr><p>第 219 页<br>黑漆漆的路上，他教我辨认，橙色灯光的地方就是犹太人住的，白色、青色的灯光，便是巴勒斯坦人住地，夜里很容易辨认。他说，以色列不许巴勒斯坦人用橙色灯泡，以示区别。</p><hr><p>第 223 页<br>说起埃拉特，施罗莫露出笑容。这座城市离巴勒斯坦区域较远，几乎没有遭受过恐怖袭击。以色列有个地下赌场，专赌下次自杀爆炸在哪里发生。耶路撒冷“一赔二”，埃拉特“一赔二十”可见后者安全系数较高。</p><hr><p>第 225 页<br>两分钟的工夫，莫蒂回来，手里多了支烟。他的英语不是很好，父母是摩洛哥来的犹太人，所以会几句阿拉伯语；阿拉伯语中的一些单词和犹太人使用的希伯来语相近，我也学了几句，所以我们就 3 种语言（英语、阿拉伯语、希伯来语）混着说，外加手势比画。</p><hr><p>第 227 页<br>聊天归聊天，安德烈从来没有放松对我的检查。尽管他已经非常清楚我的笔记本电脑什么品牌，开关在哪里，背景照片是什么，甚至化妆包里有多少小零碎儿，通常什么颜色的外套……安德烈每次还是戴上一次性手套，逐一翻检，嘴里重复着“请谅解，请谅解……”<br>两个月后，埃雷兹发生汽车连环爆炸袭击，此后安全控制陡然加强。记者不再享受“贵宾通道”，改走巴勒斯坦工人通道，而且至少等候两小时才能从通道进入检查大厅。终于被姗姗而来的以色列士兵带入检查大厅，接受安德烈检查时，我向他抱怨“见到你真难啊，我等了两个小时！”他的脸更加阴沉：“非常抱歉，现在形势变了，但是你不知道我们面对多少压力，每天我离开家时，妻子都对我说：‘希望晚上见到你回来’……”<br>几天以后，安德烈脖子上多了杆乌兹冲锋枪。</p><hr><p>第 238 页<br>他指着路边背书包的孩子，看，如果犹太人盯上了我，一颗炸弹掉进我车里，这些小孩也完了。你看，那个小孩，喏，那个蓝衬衣的，他难道不是平民吗？不是无辜的吗？<br>我问，那你怎么看自杀爆炸呢？公共汽车上，餐馆里，那些以色列人不是平民吗？不是无辜的吗？他回答说，你说得对，但是我们巴勒斯坦人“没有飞机，没有坦克，只有自己的身体”。</p><hr><p>第 314 页<br>十多年过去，今天看待巴以冲突，犹如活化石。仍然是旧的战争思维：为了土地。悲哀的是，就连整个中东的焦点，都转向了伊朗核问题、新能源革命和国际恐怖主义。今天世界上发生着两件极其不平等的事情：一是高科技迅猛发展，人类命运“共同感”加强；二是主要国家政府仍然提高军费，各自提防。换句话说，形成两幅落差很大的画面：一群人或许殖民火星，同时另一群人在地上用石头相互攻击。未来的科技发展，可能让现在的主要政治问题都变得荒谬，彻底改变人类社会的权力结构。没有人知道，百年冲突，或许会以意想不到的方式终结？几乎可以肯定的是，未来巴以问题不再重要，但那里的人们，他们的命运不该被遗忘。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/view/subject/l/public/s29495542.jpg" alt="《中东死生门》"><br><a href="https://book.douban.com/subject/27089521/" target="_blank" rel="noopener">《中东死生门》</a><br>副标题: 巴以行走观察<br>作者: 周轶君<br>出版社: 中信出版集团<br>ISBN: 9787508676432</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《发条橙》读书笔记</title>
      <link href="/a-clockwork-orange-clip/"/>
      <url>/a-clockwork-orange-clip/</url>
      
        <content type="html"><![CDATA[<p>引言<br>由于人在定义中就被赋予了自由意志，可以由此来选择善恶。只能行善，或者只能行恶的人，就成了发条橙——也就是说，他的外表是有机物，似乎具有可爱的色彩和汁水，实际上仅仅是发条玩具，由着上帝、魔鬼或无所不能的国家（它日益取代了前两者）来摆弄。彻底善与彻底恶一样没有人性，重要的是道德选择权。恶必须与善共存，以便道德选择权的行使。人生是由道德实体的尖锐对立所维持的。电视新闻讲的全是这些。不幸的是，我们身上原罪深重，反而认为恶很诱人，破坏比创造更加容易，更加壮观。我们喜欢看宇宙分崩离析的幻象，哪怕吓得裤子拖地。   </p><hr><p>第 23 页<br>“是书啊？”我说道，“你正在写的是书啊？”我把嗓音弄得很沙哑，“我对会写书的人始终十二万分地钦佩。”我看了看顶上的一页，上面有书名《发条橙》，然后说：“这书名颇为傻冒。谁听说过上了发条的甜橙？”接着我以牧师布道式高亢的嗓音朗读了片断：“——硬是强迫生机勃勃、善于分泌甜味的人类，挤出最后一轮的橙汁，供给留着胡子的上帝的嘴唇，哎哟，生搬硬套只适于机械装置的定律和条件，对此我要口诛笔伐——”丁姆听着又发出了唇乐，我也忍不住笑了。于是我撕破纸头，把碎片播撒在地板上。   </p><a id="more"></a><hr><p>第 34 页<br>此后，我听了美妙的莫扎特《朱庇特交响曲》，并出现不同面孔遭到踩踏和喷射的新图景，这时我想，越过梦境前只听最后一张唱片了，我想听古典，强烈而很坚定的东西，所以就选了巴赫的《勃兰登堡协奏曲》，只配了中低音弦乐器。听着听着我产生了与以前不同的快感，并再次看到那晚撕破的纸上的这个书名，事情发生在一个名叫“家”的小屋，时间已经显得十分悠远。书名讲的是一只上了发条的甜橙。听着巴赫，我开始更深刻地理解个中意义；而心中则充盈着那位德国音乐大师带来的棕色的极致美感。我想到，我愿意更狠毒地推搡那夫妻俩就在他们家的地板上，把他们撕成碎片。   </p><hr><p>第 38 页<br>“呃，”德尔托得说，“我对你也说惯了，小同学，你要注意啊，你非常清楚，下次就不是教养学校的问题喽。下次就是送上审判台了，我嘛是前功尽弃。你若对自己可怕的一生毫不在乎的话呢，至少也该为我稍微想想吧；我为你出过力流过汗的。悄悄告诉你吧，我们每改造失败一个人，都会得到一颗大黑星；你们每有一个人进铁窗，我们都要做失败忏悔的。”   </p><hr><p>第 38 页<br>接着他以万分沉痛的口吻说，尽管仍然在摇动着旧摇椅：“你们这些人到底中什么邪啦？我们正在研究这个课题，已经搞了要命的近百年了，却毫无进展。你的家庭很不错，父母很慈爱，脑袋瓜也不赖。是不是有什么魔鬼附在你的身上？”<br>“没有人向我灌输任何东西，先生，”我说，“我已经很久没有落入条子之手了。”<br>“这正是我所担心的，”德尔托得叹息道，“是太久了，还怎么保持健康。据我估算，你快到落网的时候了。所以要警告你，小同学，放规矩点，不要让漂亮年轻的长鼻子蒙尘，对吧。我的意思清楚吗？”<br>“就像清澈的湖水，先生，”我说，“就像盛夏的蔚蓝天空一样清楚。包在我身上吧。”我朝他露齿一笑。   </p><hr><p>第 39 页<br>我说：“这挺公正，但很可惜，老爷们，因为牢笼生活我实在忍受不了啊。我的努力方向是，趁未来还向我伸出洁白的手臂的时候，好自为之，再也不要被警察捉了去；要提防别人手持刀子追上来刺一刀；不要在公路上飙车，以免金属件扭曲，碎玻璃飞溅，鲜血喷洒，凝成最终的合唱。”这话很公允，但是，弟兄们哪，他们不厌其烦咬着脚指甲去追究不良行为的“根源”，这实在令我捧腹大笑。他们不去探究“善行”的根源何在，那为什么要追究其对立的门户呢？如果人们善良，那是因为喜欢这样，我是绝不去干涉他们享受快乐的，而其对立面也该享受同等待遇才是。我是在光顾这个对立面。而且，不良行为是关乎自我的，涉及单独的一个，你或我，而那自我是上帝创造的，是上帝的大骄傲、大快乐。“非自我”是不能容忍不良行为的，也就是政府、法官、学校的人们不能允许不良行为，因为他们不能允许自我。弟兄们哪，我们的现代史，难道不是一个勇敢的小自我对抗这些大机器的故事吗？对于这一点，我跟你们是认真的。而我的所作所为，是因为喜欢做才做的。   </p><hr><p>第 101 页<br>电灯熄灭，你们的小说叙事者兼朋友——鄙人孤零零地坐在黑暗中，心中万分恐惧，身体动弹不得，眼睛闭不上，什么都不能动。此时，电影开始放映，喇叭里传出响亮的背景音乐，十分猛烈，充满了不和谐音。银幕上的画面出现了，没有片名和演职员名单。场景是大街，可以是任何城镇的任何街道是个黑夜，点着路灯。电影的质量是符合专业标准的，不像偏僻街道居民家中放映的那种肮脏电影，会出现闪亮和色斑。音乐不停地嘭嘭送出，令人毛骨悚然。画面上出现一个老头子，非常衰老，在街上踯躅，而两个穿着时髦的家伙扑上去，这时依然流行细腿裤，当然宽领带已经让位于真正的领带了。两个人开始戏弄老头，可以听见尖叫和呻吟，十分逼真，甚至能听清两个拳打脚踢者的喘气声。他们把老头揍成了肉饼，拳头啪啪啪打个不停，布拉提撕开后，赤膊的老头还领受了一顿靴子踢，直到血淋淋的躯体躺倒在明沟的污泥中才作罢，两个流氓迅速逃走了。下面是挨揍老头的头部特写，流淌的红血血真漂亮。真有趣，现实世界的色彩，只有在银幕上才能看真切。   </p><hr><p>第 104 页<br>那天被迫观看的其他可怕镜头，弟兄们，我实在不想描述了。这挖空心思的布罗兹基大夫、布拉农大夫和其他白大褂哟，记得还有这转动旋钮、观察仪表的姑娘，肯定比国监内的任何囚犯更加肮脏不堪、臭不可闻。我万万没料到，有人甚至会想得出将强迫我看的东西拍成电影，而且把我绑在椅子上，眼睛绷得大大的。我别无他法，也就是大声呼叫，请他们关掉，关掉，这稍微掩盖了打斗和戏弄的声音，压低了背景渲染音乐。我终于看完了最后一部电影，布罗兹基大夫打着哈欠，以厌烦的口吻说：“我看第一天就这样算了，你说呢，布拉农大夫？”此刻，你们可以想见我的解脱心情。电灯亮了，我坐在那儿，格利佛就像制造痛苦的庞大发动机在噗通噗通直跳，嘴巴干涩，唾沫不少，感到可以把断奶以来吃过的每一口食物呕出来，弟兄们哪。   </p><hr><p>第 122 页<br>布罗兹基大夫对观众说：“请看，我们的实验对象通过被迫趋向恶，反而被迫趋向善。暴力意图伴随着猛烈的切身痛感。为了消除痛感，不得不转向截然相反的态度。有问题吗？”<br>“选择权。”一个浑厚的声音说。我发现这是教诲师呀。他没有真正的选择权，对不对？他有利己之心，害怕痛感，所以被迫走向自我糟蹋的古怪行为。其虚假性显而易见。他不再胡作非为，同时也不再能够作道德选择。”<br>“这问题很微妙，”布罗兹基大夫微笑着，“我们所关心的不是动机，不是高尚的伦理规范，而仅仅是减少犯罪——”<br>“还有，”那衣冠楚楚的大部长插话道，“缓解监狱的人满为患。”   </p><hr><p>第 125 页<br>“他会成为你的好基督徒的，”布罗兹基大夫大声说，“准备转过另外一边脸给你打，准备自己上十字架，而不是送人家上十字架；他即使想到捏死个把苍蝇，都会打心眼里感到恶心。”这话倒没错，弟兄们，他提起捏死苍蝇的时候，我感到一点点恶心，便尽力使自己想着用糖喂苍蝇，把它当做要命的宠物来照料，才消退了恶心和疼痛。“改邪归正了，”他喊道，“在上帝的天使面前真欢乐。”   </p><hr><p>第 146 页<br>他们动手的时候，驾驶员一直坐在方向盘前，边抽烟边看书。汽车里有灯光可供看书，他根本不看比利仔和丁姆对叙事者鄙人的行动。他们的所作所为我也不想详述了，只听农机马达声、秃枝鸟鸣声衬托着喘气声、捶打声，只见汽车灯光中有烟雾热气，驾驶员平静地翻动书页，而在此期间，他们一直在“修理”我，弟兄们哪。然后，我也分不清是比利仔还是丁姆说：“我看差不多了，哥们儿，你说呢？”接着他们每人给我的面孔最后打一拳，我倒下，躺在草地上。天气寒冷，而我一点没有感到冷。他们掸掸袖口，穿戴好刚才脱掉的头盔和上衣，回到了车上。“后会有期，亚历克斯。”比利仔说，丁姆只是发出小丑式的大笑。驾驶员看完那页，把书放好，随之发动汽车，向城里开去，我的前哥们儿和前敌人在挥手。我直挺挺躺着，蓬头垢面精疲力竭。   </p><hr><p>第 149 页<br>“又一个受害人，”他叹息着，“现代受害人。我去拿威士忌，然后必须将伤口稍加清洗。”他走开了。我扫视一眼这舒适的小房间，简直到处都是书，一个壁炉，几把椅子；不知怎么，看得出屋子里没有女主人。桌上有一架打字机，乱堆着大量的文稿，我记得这家伙是个作家。《发条橙》，就是它。它在我脑海中萦绕不去，真有趣。但我不能泄露出来，我正需要主人的帮助和善心呢。那些可怕的狗杂种在白大楼里就是那样整治我的，迫使我急切地依赖帮助和善心，同时渴望自己也能提供帮助和善心，如果有人愿意接受的话。   </p><hr><p>第 152 页<br>“我想你确是犯了罪，但刑罚实在不相称。他们已经把你变成了非人的东西，你再也没有选择的权利。你已经委身于社会所接受的行为，成了台行善的小机器。这一点我看得一清二楚——无非是意识域边缘条件反射的营生罢了。音乐、性行为、文学艺术，全都必须成为痛苦的来源，而不是快乐的源泉。”<br>“对的，先生。”我说，一边吸着这位善人给的软木过滤嘴香烟。<br>“他们一贯贪多务得，”他说，心不在焉地擦干一只盘子，“但其基本意图是真正的犯罪。不会选择的人，就不再是人了。”   </p><hr><p>第 154 页<br>那里还有三两个书架，不出我所料，果然有一本《发条橙》，书的背面，书脊上，写着作者的名字——F.亚历山大，上帝呀，我想道，他也叫亚历克斯啊。我翻了翻，身穿他的睡衣，赤着脚，却一点不感到冷，整个屋子很暖和；不过，我看不出书是讲什么的。它的写作风格似乎非常疯狂，充斥着“哪”、“啊”之类的废话，但大概的意思是，如今的人们都变成了机器，他们、你们、我、他，还有拍我的马屁吧——外表却分明是自然生长的水果。F·亚历山大似乎认为，我们都生长在上帝种植的世界果园中他称之为世界之树之上，我们的存在是因为上帝需要我们来解渴，爱的饥渴云云。   </p><hr><p>第 162 页<br>我醒来时，可以听到墙上传出音乐声，非常响亮，是它把我拖出了那点点瞌睡。那是我十分熟悉的交响乐，已经好几年没有欣赏过了。它是丹麦人奥托·斯卡德里克的《第三交响曲》，是响亮狂热的作品，特别是第一乐章，正在放的就是这一章。我兴致勃勃、快乐地听了两秒钟，接着疼痛和恶心排山倒海地压过来，我的肚子深处开始呻吟。就这样，当初这么热爱音乐的我爬下了床，一边哎哟哎哟地喊叫，接着嘭嘭嘭地敲墙，一边喊道：停下，停下，关掉！”但音乐照放不误，而且显得更响亮了。我向墙上击拳，直到骨节全都是红红血和撕脱的皮，喊叫喊叫啊，但音乐没有停止。然后我想，我得逃出去，于是踉踉跄跄地出了小卧室，冲向公寓的前门，但门反锁上了，根本出不去。与此同时，音乐越来越响亮，好像有意折磨我似的，弟兄们哪。于是，我把手指深深地插入耳朵，可长号和铜鼓声透过手指来还是很响。我再次喊叫，让他们停止，捶打着墙壁，但毫无作用。“哎哟，我怎么办呢？”我独自哭泣着，“上帝保佑我吧。”我疼痛而恶心地满公寓摸索，试图把音乐关掉，呻吟似乎是发自腹中深处。此刻，在起居室桌上那堆书本、纸头上面，我发现了自己不得不做的事情，即图书馆里的老头们、假扮成警察的丁姆和比利仔没让我做成的事情，也就是干掉自己，一死了之，永远离开这邪恶凶残的世界。我看到一份传单封面有“死”字，尽管是《政府去死吧》就像命中注定一样，另一份小传单的封面有一扇打开的窗户说：“打开窗户放进新鲜空气、新鲜观念、新鲜的生活方式。”我知道了，它告诉我，跳窗可以结束一切。也许会有一时的疼痛，然后是永远永远永远的长眠。   </p><hr><p>第 179 页<br>天色很黑，刀割般的寒风越刮越猛，四周行人很少很少。巡警车载着凶神恶煞般的条子开来开去游弋，不时可见三两个年轻的警察在街角处跺脚取暖，在寒风中喷着热气，弟兄们哪。我想，如今条子对抓获的人极尽折磨之能事，大概大部分的超级暴力和烧杀抢掠已经销声匿迹了吧，其实，现在的形势成了调皮捣蛋的纳查奇和不失时机舞刀弄棍，乃至拔枪相向的条子之间的械斗。而这些天困扰我的问题在于，我已经什么也不在乎了。仿佛某种温柔之气侵入了体内，而我却不懂得为了什么。当时，我不知道自己到底想要什么。连喜欢躲进小室聆听的乐曲，也属于以前要耻笑的曲目，弟兄们。我现在更爱听小小的浪漫歌曲，即所谓的“德国抒情歌曲”，是钢琴伴唱的，很恬静，很有思慕情调，而不是从前那样全是大乐队，身体躺倒在床上，夹在小提琴、长号、铜鼓之间。我的体内正在发生蜕变，我不知道那是病变，还是他们那次在我身上注入的东西在捣鼓我的格利佛？说不定它在逼我走向真正的疯狂。   </p><hr><p>附录《那不是我的发条橙》<br>《时代》周刊说：“本书也许看似一本淫秽惊悚的小书，但伯吉斯用英语写了一部珍品——一部哲理小说。这一点也许会被忽视，因为小说主人公说的都是纳查奇语，以便给予他应有的特殊身份—半人半非人。这个‘垮掉的一代’的斯塔夫罗金的朝圣之路是一篇严肃而成功的道德随笔。伯吉斯直截了当地认为作为恶人的亚历克斯比作为一个善良的僵尸的亚历克斯更像是一个人。机械社会的发条决不能冒充道德选择的有机生命。如果恶不能被接受为一种可能性，那么善就是无意义的。”</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/lpic/s29066459.jpg" alt="《发条橙（纪念版）》"><br><a href="https://book.douban.com/subject/26882001/" target="_blank" rel="noopener">《发条橙（纪念版）》</a><br>作者: <a href="https://book.douban.com/author/4506326/" target="_blank" rel="noopener">Anthony Burgess</a><br>译者: 王之光<br>出版社: 译林出版社<br>ISBN: 9787544764759</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《Google模式》读书笔记</title>
      <link href="/how-google-works-clip/"/>
      <url>/how-google-works-clip/</url>
      
        <content type="html"><![CDATA[<p>第 27 页<br>科技對消費者產生重大影響，對企業的影響更大。以經濟學的術語來說，當產業的主要生產要素成本曲線下移時這個產業就將面臨大規模的變化。今天，有三項生產要素變得更便宜了：資訊（Information）、連接性（Connectivity）、電腦運算能力（Computing power），這影響每個涉及這三項生產要素的成本曲線，勢必造成破壞性的結果。許多原來就在市場的公司（也就是網際網路問世前成立的公司）以往建立及發展事業的基本假設是稀有性：稀有的資訊，稀有的通路資源和市場研究，或是稀有的選擇和貨架空間。但如今這些生產要素非常充裕，降低或消除產業與市場的進入障礙，使整個產業來到徹底改變的成熟時機。      </p><hr><p>第 41 页<br>你可能不認為自己是創業家，但其實你是。你可能有個構想，你相信這個構想會改變一切；你可能有一個雛型概念，甚至有一項產品的第一個版本。你聰明、有抱負，獨自或和你的小團隊委身在會議室、車庫、辦公室、餐廳、公寓或宿舍裡，就算你做著某些事，不管是讀書、工作，或和小孩及配偶相處的時候，你仍然在想著你的那個構想。      </p><a id="more"></a><hr><p>第 42 页<br>所以，就算你不是習慣穿著連帽運動衫的科技人，就算你沒有取得創投提供的七位數美元支票，也不代表你無法創造出下一個盛事。你需要洞悉產業正在快速轉變，你要有勇氣冒險，成為這轉變中的一分子，願意而且吸引到最優秀的智慧創做者，領導他們實現轉變。      </p><hr><p>第 49 页<br>請你做個小小的思考實驗：想想你曾經任職過的一家公司，接著，請你詳述它的使命，你說得出來嗎？如果說得出來，你相信嗎？你覺得它確實、誠實反映公司與員工的行動和文化嗎？還是它像是一群行銷和公關人員在一個晚上邊喝啤酒、邊查詞庫所想出來的文詞？這些字句類似這樣：「我們的使命是透過知識、創造力與我們員工的努力，和我們的客戶建立至高無上的夥伴關倸，為我們的客戶創造價值，並為我們的股東創造優異成果。」哇，面面俱到，不是嗎？提到了客戶，提到了員工，提到了股東。提出這份使命的是雷曼兄弟公司（Lehman brothers），至少在 2008 年破產之前是這麼說的。      </p><hr><p>第 56 页<br>當你伸手就可以觸碰到某個人的脣膀時，就不會有什麼東西會阻礙溝通和點子意見交流。傳統的辦公室安排有個別隔間和辦公室，目的是保持穩定安靜狀態。團隊的人際互動大多是計劃性的互動（聚集在會議室裡開會），或是偶然的互動（在走廊、茶水間或停車場相遇）。這其實是倒行逆施，穩定狀態應該是高度互動，喧譁、擁擠的辦公室，充滿興奮的活力。而員工覺得受過團體刺激後，可以選擇退避至安靜的地方。正因此，我們的辦公室有很多僻靜設施：餐廳和小廚房裡有隱蔽的角落、小會議室、戶外露臺與空間，甚至還有打盹艙。但是，當員工回到辦公座位時，他們周遭應該充斥著自己的隊友。      </p><hr><p>第 61 页<br>河馬（Hippo）是世界上最危險的一種動物，跑步速度遠超乎你的想象，牠們性格凶暴，能把侵犯領域或出現在行進途中的敵人踩死或咬成兩截。公司裡的河馬也很危險，它們是所謂「最高薪資的人的意見」（ Highest-Paid Person’s Opinion，HIPPO）。說到決策品質，基本上和薪資高低無關，經驗固然重要，但前提是要構成一個有說服力的勝出論據，經驗才會被採用。不幸的是，在多數公司，經驗本身被當成有說服力的勝出論據，經驗多的人說了算，我們稱這種組織為「年資統治體制」（tenurocracy），因為在這些組織權力來自年資，不是功績或創造的價值。這使我們想昔日網景公司（ Netscape）執行長吉姆·巴克斯戴爾（Jim Barksdale）說過的話：「如果有資料的話，我們就看資料；如果我們沒有資料，只有意見的話，那就照我的意見去做吧！」<br>當一個組織停止只聽「河馬」的意見時，就會開始形成功績體制，我們的同仁修娜·布朗（Shona Brown）簡單清楚地描述這種組織：「最重要的是意見或點子的品質，而不是誰提出的建議。」這聽起來很容易，其實不然。想建立功績體制，必須讓可以只靠命令來指揮統治的「河馬」和那些冒著被踩死的危險丶勇於支持品質和功績制的智慧創做者都有平等参與權。      </p><hr><p>第 64 页<br>「組織改造」是企業詞彙當中最受鄙視的一個名詞，大概只有「外包」和「80 張投影片簡報」可以比得上。一位高階主管認定問題根源是公司的組織架構，所以如果改變組織架構，一切就能迎刃而解。於是，公司突然從中央集權架構改變成地方分權架構，或是從功能部門架構改變成事業單位架構。結果，一些主管是「赢家」，其他主管變「輸家」，同時大部分員工心神不定，不知道自己是否還有飯碗，如果有的話，還有煩惱他們的新上司是誰，他們還能不能保住靠窗的好座位。過了一、兩年，某位主管（或者，很有可能仍然是那位主管）發現，公司仍然有問題，於是下令再來一場組織改造。這就是企業界可怕的「指定執行次數迴圈」（for loop）。      </p><hr><p>第 76 页<br>你可以透過賦予員工職責和自由來管理這個層面，無需下令他們工作到更晚，或是早點下班和家人相處，只要叫他們管好自己分內的事給予他們空間和自由，他們自己會安排時間，把工作做好。前 Google 高階主管、2012 年接掌雅虎執行長的瑪麗莎·梅伊爾（Marissa Mayer）是矽谷最知名的職業婦女，她提到，導致職業倦怠的不是工作過度，而是必須放棄對你而言重要的事所產生的憤怒。讓你的智慧創做者自我控管，他們通常會對工作與生活的平衡作出最佳決定。      </p><hr><p>第 77 页<br>人的時間與精力有限，工作超過負荷的確會導致職業倦怠，但是有關於職業倦怠的研究顯示，缺乏自我控管也是一個主因：其他原因還包括薪資不足、社區問題、欠缺公平性、價值觀衝突。職業倦怠這個主題的知名研究者、心理學家克莉絲汀娜·馬斯拉奇（Christina maslach）認為你，職業倦怠是人不適合他的工作的一種徵狀，她也認為，組織有責任創造更人性化的工作環境。参見 Christina Maslach and Michael P.Leiter, The Truth about Burnout: How Organizations Cause Personal Stress and What to Do About It, (Jossey-Bass, 1997).      </p><hr><p>第 77 页<br>我們雖然不提倡「工作與生活平衡」，但我們鼓勵員工好好休假。如果有人認為他對公司重要到令他不能休假一、兩週，認為這會導致公司運作停擺的話，那就代表公司有更大的問題需要解決。一家公司不可能、也不應該有任何一個不可缺少的人。偶爾會遇到有員工故意創造這種情況，也許是他們的自負心理作祟，或是誤以為「不可缺少」就能保障飯碗。遇到這種人，務必讓他們好好休個假，並且安排代班人。等他們休假回來，精神與鬥志恢復，也體認到自己並不是那麼「必不可缺」，而代班人也會變得更有信心。      </p><hr><p>第 80 页<br>一家傑出的新創公司、一個出色的計劃、一份好工作應該充滿樂趣，如果你賣力工作，卻完全無法從中獲得任何樂趣，那一定有問題。樂趣有部分是來自期望未來成功的心情，但有很大的部分來自和公司同仁共事，一起開玩笑。<br>多數公司嘗試製造玩樂，比方說，舉辦年度公司野餐（節慶派對、週五在公司外舉辦的活動）、有玩樂的音樂、有玩樂的獎品、有可以讓同事出糗的趣味竸賽、有顔面彩繪／小丑／算命、供應玩樂的食物（但不供應玩樂的酒品）。你參加這些活動，在這之中玩樂。不過，這類玩樂活動有個問題：它們很無趣。      </p><hr><p>第 91 页<br>施密特進入 Google 約 6 個月後，此時的他相當熟知公司「賺錢不必為惡」（Don’t be evil）的座右銘，這是工程師保羅·布海（Paul buchheit）和阿密·帕泰爾（Amit patel）在公司開創初期的一次會議提出的。不過，施密特完全低估這句簡單座右銘在 Google 公司文化中深植内化的程度。施密特出席公司的一場會議，與會者辯論應不應該對廣告制度做出一項改變，這項改變的優點有可能為公司帶來相當可觀的收入。其中一位工程領導人捶桌子說：「我們不能這麼做，這是惡行。」會議室突然鴉雀無聲，這個場面就像在美國舊西部世界的撲克牌牌局中，有個玩家指挫另一個玩家是老千，然後其他的人停止出牌，等候某個人說話。施密特心想，哇，這些傢伙對這種事很認真呢。接下來是冗長的討論，最終這項改變沒通過。      </p><hr><p>第 102 页<br>當市場調查詢問潛在顧客最在意的事中，排名第一的是速度時，公司便在其行銷中凸顯這一點。但是，儘管有線寬頻的速度的確很快，但用戶在開始使用這份服務後，他們真正喜愛的特性是「隨時上線」；他們不需要等候撥接，不想聽到數據機發出的嘶嘶聲，也不想等伺服器用來讓他們連結上網品質達到最佳點。羅森柏格與他的同事針對用戶說的需求來行銷，但市場研究不會告訴你該解決顧客無法想到、但可以解決的問題。為顧客提供他們想要的東西，重要性與價值比不上為顧客提供他們還不知道自己會想要的東西。      </p><hr><p>第 106 页<br>我們很喜歡用成人娛樂產業的例子來解釋，如何把原本用來解決狹隘問題的方法當作基礎，進一步發揚光大，這個例子跟早期技術採納者有關。當 Google 搜尋引擎事業規模開始飛速成長時·這個搜尋引擎平台上最熱門的一些搜尋是成人相關主題。在當時，色情過濾功能非常缺乏成效，因此我們讓一小群工程師根據美國聯邦最高法院法官波特·史都華（ Potter Stewart）對色情的定義：「看到它時，我就知道它是色情」，研究「Google 它時，我就知道它是色情」的問題。他們最終成功了，靠的是多項技術洞見的組合：他們變得很善於了解一張圖像的「内容」（應該說是「膚色」），而且只需看用戶和圖像互動的情形，就能判斷「背景」（當某人搜尋色情相關字詞，有個影像來自醫學教科書時，他們不太可能點選它，就算點選了，也不會在這個網站停留很久）。我們很快就發展出一個「安全搜尋」（ Safe Search）的過濾功能，遠比當時網路上的任何過濾器更能有效攔截不適當的影像。這就是對一個狹隘問題（過濾成人内容）發展出的解決方法（安全搜尋）。<br>但為何要就此打住呢？接下來幾年，我們把用來解決色情問題的技術應用於更廣泛的用途。我們使用安全搜尋發展出的數百萬種內容搜尋模式（也就是使用者對各種影像的反應模式），改善對搜尋影像（任何影像，不一定是色情影像）關聯性高低評估的能力。我們增加功能，讓使用者可以進一步搜尋和搜尋結果相似的影像，例如：「我喜歡那張優勝美地（Yosemite）的照片，請幫我搜尋和這相似的照片」。我們後來還開發岀另一種能力：不以輸入關鍵字（例如「Half dome，yosemite」）來搜尋，改用一張相片（你去優勝美地時拍攝的半圓頂〔Half dome〕相片）來搜尋。這些功能全都衍生自我們一開始為安全搜尋色情過濾功能發展的技術，所以當你在螢幕上看到幾乎和你拍攝的優勝美地相片模一樣的相片時，你應該感謝成人娛樂產業，是這個產業促使我們發展出的技術能夠進一步應用在你身上。      </p><hr><p>第 112 页<br>網際網路有一個極具吸引力、且被低估的層面：它大幅擴展建立平台的潛力，這並非僅指科技業的平台，而是指任何一個產業的平台。<br>……<br>平台的例子不勝枚舉，Square 為小型企業提供支付系锍服務、Nike FuelBand 提供運動資訊的手環、 Kickstarter 是創意專案的群眾集資平台、MyFitnessPal 是减肥者的平台、耐飛利（Netflix）是影片娛樂平台、Spotify 是線上音樂平台。這些公司以新方式結合現有技術元件，重新想像現有事業，它們為顧客和事業夥伴建立互動平台，並使用這些平台來創造高度差異化的產品與服務。這種模式幾乎可以應用在每個產業，包括旅遊、汽車、服飾、餐廳、食品、零售，隨著更多人使用，每個產業幾乎都可以創造出更好的產品。<br>20 世紀的經濟和 21 世紀的經濟不同，20 世紀由巨大封閉的網絡宰制，21 世紀則是由全球性的開放網路引領風騷。我們周遭充斥著平台機會，成功的領導人是那些能夠發掘這些機會的領導人。      </p><hr><p>第 139 页<br>多數人在為一個職缺徴才時，總是尋找過去在這種職務角色上有優異表現的人，這不是去尋找學習型動物。幾乎所有徵人啟事列出的首要絛件裡都是「有相關經驗」，比方說，有個職缺是機件設計師，開出的首要資格是要求是 5 到 10 年的機件設計經驗，並擁有大學相關學系學位。<br>其实，把專業看得比才智重要是錯的，尤其是在高科技業。每一個產業及行業的變化速度太快了，這造成你要招募的職務角色也持續在改變；昨天的機件到了明天就過時了，在如此不斷孌化的環境下，招募專才很可能會適得其反。專才往往帶著固有成見來解決問題，但這個問題就是衍生自他擅長的那個專門知識與技術，而且需要新專門技術的新型解決方法也會讓專才覺得是威脅。聰明的通才不會有成見，所以會放開心胸地去探究廣泛的解決方法，並傾向找出最好的一個。      </p><hr><p>第 140 页<br>尋找學習型動物有時是個挑戰。羅森柏格一貫使用的方法是請應徴者反省一個過去的缺失，2000 年代初期，他慣問應徴者：「你還記得 1996 年時的什麼網際網路大趨勢？你當時做對了什麽？做錯了什麽？」這是一個暗藏機關的問題，它讓應徵者去定義自己的期待，將這個期待與他們當時觀察到的事和探索出的啟示做連結，然後迫使他們去承認錯誤，不是那種「我最大的弱點在於我是個完美主義者」之類蹩腳的說詞。這是一個不可能捏造回答的問題。<br>你可以根據近期的任何大事件來修改這個提問，這個問題的目的不是要看這個人有沒有優異的先見之明，而是要看他如何推論思考，如何從錯誤中學習。很少人能把這個問題回答得很好，但那些回答得不錯的人，有相當高的可能性是學習型動物。當然，他們可能會告訴你：「我沒什麼特殊才能，我只是有熾烈熱忱的好奇心（ passionately curious）罷了！」這是愛因斯坦說的話，我們會立刻錄用他（儘管他用了「熱忱」這個字眼，他提出了相對論，有這張王牌就不必計較這一點了）。      </p><hr><p>第 147 页<br>當然啦，我們也有搞砸的時候。薩拉·卡曼加很欣賞我們的一位行銷同仁，想把這位年輕人轉入「產品襄理」計劃，不幸的是，這個計劃只收擁有電腦學位的人，這位年輕同仁沒有電腦學位。雖然，卡曼加力爭說這位年輕同仁是個自學的程式設計師，而且曾經和工程師共事過，但包括羅森柏格在內的幾名主管堅決不放大光圈，拒絕讓這位年輕同仁轉入。這位年輕的行銷部同仁凱文·希斯卓姆（Kevin Systrom）最終離開 Google，和其他人共同創辦成功的 Instagram，後來被臉書以 10 億美元收購。      </p><hr><p>第 174 页<br>給自己一項測試：如果你能解屋團隊中表現最差的 10％ 成員，招募一批新人，你的組織會不會因此改善？如果會的話，那麼你必須檢靚你當初錄用這些表現差的人員時的招募流程，謀求改進。再來一個測試：你的團隊裡有沒有這樣的成員，如果他們說要離職，你不會努力留住他們？如果有的話那麽你或許該讓他們離去。      </p><hr><p>第 176 页<br>在商業界，尤其是高科技業，光是在你目前所做的事情上很傑出是不夠的，你必須追上至少一波大浪，乘著它一路向岸邊衝。很多人剛踏出校門找工作時，往往把公司擺在第一位，接著考慮職務，之後才考慮產業。其實在規劃職業生涯時，這種考慮順序是錯的。應該考量的第一順位是選擇正確產業，因為在你的職業生涯很可能會換幾次公司，但換產業就困難得多了。你應該把產業視為衝浪地點（在北加州最棒的衝浪地點是 Mavericks），把公司視為你要追的浪，你首先應該選擇有最大、最棒波浪的衝浪地點。      </p><hr><p>第 179 页<br>以下是規劃職業生涯的一些簡單步驟：<br>思考 5 年後你希望從事的理想工作，你希望在哪裡工作？你想做什麼？希望賺多少錢？敘述這個職務：如果你在網路上看到這個工作機會，徵才內容會是什麼？現在，快轉到 4、5 年後，假設你在做這份工作，你這 5 年間的履歷表內容是什麼模樣？從現在起，你經過哪些途徑，到達那個時候的理想工作？<br>持續想著這份理想工作，根據它來評估你目前的長處與缺點，你需要做出哪些改進？這一步需要外人提供的意見，因此和你的經理或同儕談談，徵詢他們的意見。最後，你要如何獲得這份理想工作？你需要哪些訓練？需要什麼工作經驗？<br>順便一提的是，如果你的結論是目前的工作就是理想工作，那代表你想得不夠遠大，再重做一次，思考一份遠大對你具有挑戰性、但不是貪心的理想工作。<br>依循這些步驟應該會有用。如果你不依循這些步驟來規劃你的職業生涯，你很可能會證明美國職棒知名捕手暨教練尤吉·貝拉（ Yogi berra）說的話：「如果你不知道自己要往何處去，就得當心了，因為你很可能無法到達那裡。」      </p><hr><p>第 187 页<br>2009年12月，我們得知 Google 遭到駭客攻擊。Google 遭攻擊並不是什麼不尋常的事，事實上這種事幾乎天天都有。不過這次不同，攻擊的複雜程度前所未見，攻擊的目的也是。某個罪犯（或很可能的是一群罪犯）找到方法進入 Google 的伺服器。在此之前，絕大多數攻擊我們的壞傢伙是要破壞 Google 的服務，令我們停擺，或是令使用者更難連到我們的網站。但這一次，這些壤傢伙想竊取 Google 的機密資訊。<br>布林立即著手攔阻攻擊，追查罪犯與他們的入侵方法。他在幾小時內召集所能找到最精明的電腦安全性專家，組成一支團隊，他們在靠近 Google 總部的一棟單調建築物内聚集起來。接下來幾星期，這個團隊建立起一套系統，可以觀看攻擊行動過程，他們看到的情形令人不寒而慄。這些駭客不僅竊取智慧財產，還試圖進入 Gmail 帳戶，包括人權人士的帳戶。這些駭客來自全球經濟成長最快速的一個國家：中國。      </p><hr><p>第 210 页<br>【每場會議都需要主人】<br>会议應該有一位決策者或主人。<br>決策者應該親自做事。<br>縱使不是決策會議，例如資訊交流會議或解決方案腦力激盪會議，也應該有一位明確的會議主人。<br>會議不像政府機構，不必要的會議不需要開。<br>會議規模應該控制在容易運作的範圍內。<br>出席會議並不是身分重要性的象徵。<br>守時很重要。<br>出席會議時，請專注在會議上。      </p><hr><p>第 232 页<br>由佩吉和布林主持的這個每週全員會議必定有一段百無禁忌的問題與回答，但隨著公司規模成長，會議這部分變得愈來愈難管理。於是，我們發展一個名為「多莉」（Dory）的系統，（以電影《海底總動員》〔 Finding Nemo〕裡患有短暫失憶症的藍色帝王魚多莉來命名，但為何用這個名字，因為我們和多莉樣，忘了！）不能或不想親自詢問問題的員工可以把問題提交到多莉系統上，其他人可以投票表達這是不是一個好問題。一個問題獲得支持的票數愈高，排名就愈高，一些較艱難的問題往往獲得很多支持。在至員會議上，員工在多莉系統裡提出的問題被顯示在螢幕上，佩吉和布林不能挑選他們想回答哪些問題，他們必須依照得票數高低順序逐一回答，不分問題的難易程度。多莉系統讓人人可以直接向執行長及團隊提出最艱難的問題，其眾包（crowdsourcing）的性質會使蹩腳問題減至最少。至於問題回答得好不好，就以比較低科技的形式來判決：全員會議的與會者持有紅色和綠色牌子，如果他們覺得一個問題沒有獲得充分回答，他們可以舉起紅色牌子。      </p><hr><p>第 252 页<br>亨利·季辛吉（Heny Kissinger）在 1969 年擔任美國國家安全顧問時提到：「我們向來言明，我們沒有永遠的敵人，而且我們會根據其他國家的行動來評判它們，而非根據它們的意識型態來評判它們，包括共產主義國家，確切地說，就是像共產主義中國這樣的國家。」在他祕密造訪中國後不到兩年，中國和美國便重啟外交關係，這是自二次大戰結束後，兩國首度建交。      </p><hr><p>第 273 页<br>2004年，羅森柏格和 Google 同事傑夫·胡柏（Jef Huber）帶布林去造訪一家小型新創公司 Keyhole，胡柏是羅森柏格在 Excitet＠Home 雇用的第一位產品經理，後來加入 Google 的廣告團隊，成為首席工程師。Keyhole 的共同創辦人布萊恩·麥克蘭登（ Brian McClendon）是羅森柏格和胡柏在 Excite＠Home 的同事，Keyhole已經開發出一些很酷的地圖視覺與互動方式，布林立刻決定 Google應該買下這家公司。<br>幾星期後，布林把這項收購案提呈給董事會核准，當董事們詢問他，公司要如何靠這項技術賺錢時，他的回答很簡單：「我讓羅森柏格來回答這個問題，他是生意人。」羅森柏格一直輕輕鬆鬆地觀看布林的簡報，也從未思考過買下 Keyhole 之後如何使 Google 賺錢（已經加入 Google 兩年的羅森柏格，此時正在暢飲 Google Kool-Aid 飲料機的飲料）。被布林點名後，羅森柏格說出一些說完就忘記的回答胡亂應付，之後就忘了。事實是，我們根本不知道買下 Keyhole 對 Google 的獲利有何助益。<br>董事會決定信賴布林的判斷，讓他進行這樁收購案。大約 8 個月後，以 Keyhole 的技術為基礎的 Google 地球（ Google Earth）問市，立刻大受使用者的喜愛，也為公司創造數百萬美元的收入。這個應用程式沒有廣告收入，又是免費使用，哪來的收入呢？在推出這項產品後不久，我們的一位智慧創做者山達·皮恰心想，那些下載及安裝 Google 地球應用程式的人可能也會對 Google 工具列（Google Toolbar）感興趣。工具列是簡單實用的程式，會整合進瀏覽器，為使用者提供許多有趣的功能，其中一項功能是一個小小的 Google 搜尋方框，一直掛在瀏覽器的介面上。 Google 工具列的使用者可以直接在小方框上執行 Google 搜尋，不需要進入 Google.com 網站，這往往使他們執行更多的搜尋，點選更多廣告，進而創造更多廣告收入。皮恰的構想遭到一些反對，但在烏爾斯·霍澤的推促下，這個構想快速付諸執行。   </p><hr><p>第 291 页<br>保羅·布海認為可以發展出好更多的電子郵件系統，於是展開一項取名為「馴鹿」（ Caribou）的 20％ 時間計劃。後來，他認為這項新產品（現在稱為 Gmail，已有數億用戶）應該可以創造收入，於是建議根據電子郵件內容，在旁邊張貼廣告。我們起初不同意，要他只管專注在把 Gmail 打造得很出色就行了，至於營收，以後再來傷腦筋。<br>但是，Gmail 是布海的小孩，他不理會我們的意見。他駭入公司内部系統，和 AdWords 關鍵字廣告伺服器交談（Gmail + AdWords = 結合性創新）。某天早上，我們上班後發現，我們的電子郵件旁邊張貼了廣告。一開始大家很生氣，但不久，我們開始注意到，這些廣告其實還滿有用的。當時羅森柏格正好透過電子郵件和兄弟姊妹討論要為父母結婚 50 週年紀念日買禮物，他的 Gmail 信件旁邊出現高級居家用品零售商威廉索諾瑪（Williams-Sonoma）的廣告。羅森柏格的妹妹提到媽媽喜愛園藝，這個廣告建議可以買個放在庭院的長椅，羅森柏格便向他的兄弟姊妹提議這個構想，結果不僅父母獲得了一份好禮物，大家還稱讚羅森柏格很細心、考慮周到呢！（其實羅森柏格根本不是這樣的人！）<br>幾個月後， Gmail 問市，它的廣告並沒有創造很多收入，但布海發展出來的「廣告搭配電子郵件」技術後來被用來改善我們的 AdSense 出版内容廣告產品；如今，這項產品每年創造數十億美元營收。不用說，布海並未因為他的一意孤行而受到處罰。      </p><hr><p>第 326 页<br>英國在 1865 年通過「機動車法」（Locomotive Acts），規定汽車在行駛時，前面必須有一個步行者揮舞紅色旗子，向騎馬者示警有個新玩意兒（汽車）要開來了。此法還規定這些「路上的機動車」在城鎮中行駛的速限為時速 3.2 公里，在鄉間的速限為時速 6.4 公里。該法在 1896 年被廢止。   </p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/lpic/s27874405.jpg" alt="《Google模式》"><br><a href="https://book.douban.com/subject/26236445/" target="_blank" rel="noopener">《Google模式》</a><br>副标题: 挑戰瘋狂變化世界的經營思維與工作邏輯<br>原作名: How Google Works<br>作者: Eric Schmidt / Jonathan Rosenberg<br>译者: 李芳齡<br>出版社：天下雜誌出版社<br>ISBN: 9789862419724</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《读者》读书笔记</title>
      <link href="/readers-clip/"/>
      <url>/readers-clip/</url>
      
        <content type="html"><![CDATA[<p>可是，足球又总能在最黑暗的时刻振奋人心。纳粹德军占领乌克兰的时候，曾经逼迫基辅迪纳摩的球员和希特勒的卫队来一场友谊赛。赛前他们收到警告：“如果你们敢赢，就死定了。”于是一开始“在恐惧与饥饿的折磨下，他们只好准备输球。不过到了最后，他们无法抗拒尊严的呼召”。球赛结束，十一位球员穿着队衣在悬崖边上被处死。 直到今天，他们的纪念碑还是乌克兰人民的圣地。</p><hr><p>为了教大家爱护榕树这种华南最常见、最特别的树种，詹教授写了这本《细说榕树》。虽不是学术专著，但果然是细说，大长我等香港人的见识。不嫌你耻笑，也是看了这本书，我才知道菩提原来也是一种榕树，而榕树结的果实居然就是无花果！准确地说，无花果和我们常见的榕树同是榕属植物。榕的学名是 Ficus，正是无花果的拉丁文叫法。</p> <a id="more"></a><hr><p>在传统的想象里头，城市总是光明璀璨的，而且依据常识，都市化总是意味着更美好的生活方式。但这些未来城市却完全不是这回事，它们是一种贫富差距极大化的“贫民窟城市”。少数富人住在市中心隔离的社区，而包围它们的则是一望无际的廉价住宅和临时搭建的克难楼房。一方面，大批的农村移民将以城市无法消化的速度迅速涌进；另一方面，再也负担不起市中心昂贵生活成本的原居民则被大量迁出。 于是一种前人所不知的“中间城市”（in-between city）诞生了，那是种拥有城市人口密度但没有传统城市基建和结构的空间，住在那里的居民挤得像城市人但却保存了农村的生活方式。在传统的城市与农村之间，出现了第三种人类聚居的形态。迈克·戴维斯不是未来学家，他的推测全部建立在权威机构的统计数字和已经存在的实例之上。他最常用的例子之一就是中国，这点我们不该意外，你去任何一个县城看看，都能发现“中间城市”（或者用我们的话讲：城乡结合部）的影踪，甚至正要以光鲜面目迎接奥运和世博的北京与上海，它们的边陲难道不是未来的征兆吗？经济学常识告诉我们，农村人口朝都市进发是正常的，因为他们都想要更好的生活。在马尼拉的有毒垃圾山中搜寻可以变卖的废物，在喀土穆的街上闲逛确实要比留在农村好，因为种地是活不下去了，你再怎么种也种不过欧美的农场。不过当这些农民来到城市的门口，就会发现城市对他们并不友善，因为他们的数量和速度令城市恐惧，而城市的价格也不是他们的价格。所以他们只好困在中间，创造未来世界的主流——贫民窟城市，等待属于他们的传记。</p><hr><p>《论道歉》从心理学和精神病学的角度，分别研究了道歉的治疗效果，道歉及不道歉的理由，以及形态更复杂的道歉，比如说一个国家对另一个国家的道歉，又比如说一个世代为另一个世代犯下的错误道歉。牵涉整个国族的道歉是复杂的，因为谁有权去代表一个国家向他人致歉谢罪呢？政府的领导人一定就是最恰当的人选吗？牵涉前人过错的道歉也是复杂的，因为这一代人为什么要为他们没犯过的罪去寻求原谅呢？凭什么祖先的罪业可以加在后人身上？对于后面这个问题，拉扎尔的解释倒也简单：如果一个人会为了国家和祖先骄傲，会为了他不认识的国家足球队员亢奋，会为了与他无关的历史英雄自豪，他又有什么理由不去连带地分担羞耻与罪疚？道歉一旦涉及国与国，就还得考虑不同国家的语言文化，因为有怎么样的文化就有怎么样的道歉观。拉扎尔指出，日文大概是道歉语言最丰富的一种语言，它每种认错的方式都与致歉者和致歉对象相关，对象的身份不同说抱款的用语也不同。这表示日本式的道歉着眼于关系的安置多于情感的坦白，所以日式道歉总有一些修饰语使得致歉者处于卑下顺从的位置。或者，这是日本很难对中国说抱歉的原因，拉扎尔猜测。</p><hr><p>而且吹水要比说谎还糟。说谎的人虽然违心地作出虚假的陈述，但他起码还晓得真相是什么，心里头有真假是非的判断，因此才有说谎的可能。在这个意义上，一个骗子还算尊重真实的价值。吹水的人可不同了，他根本不在乎事实，不关心真假，纯纯粹粹就是为了应付场面而吹，甚至为吹而吹。这个吹水的时代很像苏格拉底在世时的雅典，每个人都以为自已很有知识，对什么事情都有想法，既自由且民主，结果全是游谈无根，自己都不知道自已在说什么。</p><hr><p>薛爱华还总结了一条规律，但凡国力强盛的时代，其绘画中表现出来的外国人就愈是正常客观，甚至文明优越，唐朝就是如此。相比之下，一向被认为很柔弱的宋朝呢，则喜欢强调蛮夷的粗俗低劣。</p><hr><p>即便一生多不如意，回顾起来，兰姆还是要说：“过去的不顺心之事，我不断地纷纷然重新经历一番。往日的挫折我不再受他们伤害，像是穿上了盔甲……在我一生中所发生过的各种各样的倒霉事，如今我一件也不想取消。”（《除夕随想》）</p><hr><p>例如查尔斯·兰姆（Charles Lamb），就像王念青先生对他说过的：“‘别着急，他说，‘闲时慢慢读，慢慢学，图的只是心中供养一点清气！’”（《英国首相的礼物》）年纪大了以后，“不必做研究不必求学问真好。买书玩赏装帧，读书为了消遣，写作不计毁誉，这样美丽的颓废，人老了才有缘消受”。明明有无数的价码，明明有那么多书市上买卖的遭遇，但金钱在此，已经不是诱惑和诱惑的障碍，而是记忆池塘上悬垂的无钩鱼丝，不为垂钓，只为标记。书是划算，还是昂贵，都不再重要了。</p><hr><p>有些东西可以忘记，例如雨伞；有些事丢不了，但最好忘记。亨利在失物招领处结识了一个从俄罗斯巴什喀尔地区来的数学教授，成为好友，西格弗里德伦茨透过这段友谊写出记忆与遗忘更宏大的一面。现在的德国已离纳粹时代甚远，大家都忘了种族主义和仇恨政治的肆虐，但那真是一段不该被遗忘的记忆，因为只要忘了它，它就会自己回来，变形以另一番面目重现。这是记忆的吊诡，只有记住悲剧，它才不会重演。</p><hr><p>说是文学，但宇文所安由回忆这一个视点出发，却穿越了中国文化的各种元素和面向，例如中国各大名山上的碑铭石刻。西方人不作兴搞这套，而是喜欢保留自然风光的原始风貌。但中国文人除了想把自己对山水的感观留在山水之中，与后人分享之外，还想透过刻在石上的文字表示自己也曾到此一游。这是中国人企盼不朽的方式，他们想被后人记住。一想到人生在世最终灰飞烟灭，难免叫人悲从中来。“前不见古人，后不见来者”是这么一种面对时间变幻席卷一切的力量时感到的寂寞，难怪就会“念天地之悠悠，独怆然而涕下”。所以这么多碑记记的也是昔人往事，因为念及古人就这么一代代消散在今人的记忆之中，就会感到有责任要把他们的名字事迹留给后世。前人的永在，全靠吾辈的追念。而我们这一整代的人，终究也会整代消失。有意思的，是写怀古文章、收集古代器物与勒石刻碑此等怀旧行为，却把自己也都留在后人的记忆中了。上泰山，看见这么多古代文士王公的痕迹，那可是一代代中国人抗拒朽坏和遗忘的悲凉记录。</p><hr><p>身份是一个很重要的标志。因为有固定的身份，岗位就是确认了，就能够具体通过这个身份而进行回馈，说得老套一点，就是为社会出一份力。然后就是回家的时候了。原来出门不是放弃责任，而是要更明白地寻找与确认自己的责任。</p><hr><p>至于杂文，论者喜欢强调王小波的“自由精神”，说鼓励大家独立思考，千万别盲从圣人教化一言堂，宁可当“一只特立独行的猪”，也不要做被人运动起来的无脑大众。对生长在大陆的年轻人来说，他的言论真是醍醐灌顶，有解政治遗毒的奇效。不过坦白讲，像我这种自小看胡适长大的港台同胞，就不觉得王小波有多惊人了。所以他说的很多话在我看来就像太阳总在东边升起一样，的确是真理，但也用不着跳出浴缸大喊一声“Eureka”！ 千万别误会，我对王小波没有半分不敬，恰恰相反，我觉得今天的读者还是应该继续读他的作品。“我们这个社会里的论战大多要从平等的讨论转为一方对另一方的批判，这是因讨论的方式决定的。根据我的观察，这些讨论里不是争谁对谁错，而是争谁好谁坏。一旦争出了结果，一方的好人身份既定，另一方是坏蛋就昭然若揭。好人方对坏蛋方当然还有些话要说，不但要批判，还要揭发。”（《论战与道德》）很不幸，这些道理如今仍然管用，尤其适合网上那批一谈日本问题就上升到揭发汉奸，一碰民主改革就要捍卫民族利益，上纲上线的速度比搭直升机还快的热血青年。</p><hr><p>其实吉尔兹自己也明白，完全理解异文化是不可能的。在《地方知识》（Local Knowledge）这部论文集里，吉尔兹坦白告诉我们人类学家没有神奇的能力，不可能把自己完全变成某个部族的巫师，再回过头来用很精确的语言去向自己的同族描述那个部族的世界观。我们很难变成另一种人，然后再找出不同的人群有哪些共同的地方。事实上，吉尔兹根本怀疑任何超文化原则与普遍社会规律的存在。我们只能在异文化之间来回跳跃，既远且近。但是，只要我们也学会用一种遥远的距离和新鲜的眼光看自己，我们就会明白自己不是唯一。</p><hr><p>而文化的作用，吉尔兹在其经典《文化的诠释》（The Interpretation of Caltures）里有个很直接的说法：“它把意义加诸世界，使得世界可以被理解。”那么文化又是什么呢？“它是一套承袭而来的要领构成的系统，这个系统以象征的形式表达出来。人类透过这套象征系统可以沟通、保持和发展关于生命的态度与知识。”人类学家要做的就是去把不同文化的象征系统解读出来，使大家可以认识不同的文化。</p><hr><p>凡是一个真正动摇了人类思考方式的思想家，总会叫人摇头或者发笑。其实董启章没说错，有些动物脏就脏在它的位置不对，不只是物理的空间位置，而且是抽象范畴中的位置。玛丽·道格拉斯成名作《洁净与危险》（Purity and Danger：An Analysis of the Concepts of Pollution and Taboo）中最有名的例子就是一种动物：猪。她分析《圣经》把猪列为不洁之物的原因，说那是因为猪虽然和牛羊一样长了蹄，但又不像一般有蹄动物那样反刍。换句话说，在当时近东地区居民的世界观里，有蹄动物都该是会反刍的，而猪却违反了这个常规，既不能完整地纳入有蹄动物的类别，也不能和其他不反刍同时又无蹄的动物并列。所以猪是不洁的异类，乃禁食之物。 玛丽·道格拉斯又发展出她对禁忌的看法，指出禁忌总是不洁的、恶心的，因为它们破坏了世界分类的常规，是种混沌模糊的异物。所以研究一个文化的禁忌，看它怎样定义肮脏与污染，就是在反向地分析它分类万物和认识世界的方法。曾经弄得香港闹哄哄的种种禁忌争论亦可作如是观。例如乱伦，什么叫作乱伦？为什么有的社会禁止表兄妹相爱，有的却不？人兽交又为何是种违反自然的禁忌？难道不是因为我们很“自然”地把人和动物分成截然不同的东西吗？所以人狗交合绝对不行，但拿马和驴配出骡子却是可以的。</p><hr><p>正如“女工关怀”的成员，香港科技大学的潘毅教授在导言里所说，这二十多年来从“工人”到“打工妹”的转变是惊人的。工人阶级在过去是社会主义国家的主人，地位崇高，打工妹的“打工”则意味着身份变成了为“资本主义老板”工作的工人。这里的“妹”字更是复杂，因为这是个性别身份。于是一个打工妹既被困在一个随时可以被解雇、经常受到压榨的打工处境，同时又是个试图改变自己女性地位的主体，为了抗拒逼婚与传统农村的家务劳动而外出。 《失语者的呼声》使我明白打工妹固然失语，但是仍有呼声。她们在城乡的差距之间，在经济的变化之中，在我们媒体提供的世界里产生了欲望。这种欲望会叫她们碰到残酷的现实，但也是一种抗争的动力：从前是抗争农村生活里的性别分工，将来就是抗争劳动关系里的压迫与不公。</p><hr><p>2006 年的诺贝尔文学奖也是在政治争议声中诞生的。因为土耳其的帕穆克（Orhan Pamuk）前一年 2 月才在瑞士对记者说，“在 20 世纪对亚美尼亚人和库尔德人的种族屠杀事件上，奥斯曼土耳其帝国有罪。三万人和一百万人惨遭杀害”，于是被他的老乡告上法庭，罪名是土耳其刑法第三〇一条的“亵渎土耳其国格及其政府”。按照这条法例的规定，如果被告是在国外发表有关言论，则罪加一等，最高可判入狱三年。关于后面这点，我们中国人都明白，这叫作“去外面唱衰自己人”，十分严重。</p><hr><p>比下议院更妙的就是“唐宁街十号”了，很多人都说这是全世界最出名的地址，但问题是它为何是个“地址”呢？想想看，白宫、中南海、凡尔赛宫、克里姆林宫……全世界有哪一个大国的领导人官邸是有地址的呢？就算有，肯定也都被这个宫那个府的响亮名号遮住了。只有英国首相办公居住的地方不叫首相府，却以地址著称，活似个民宅。 为了解开这个疑惑，我把英国历史学家塞尔登（Anhony Seldon）的《唐宁街十号》(10 Downing Street )由头到尾读了一遍。虽然找不到明确的答案，但起码有点眉目了。 原来这座房子是18世纪的乔治二世送给“首席财政大臣”罗伯特·沃波尔的礼物，但罗伯特·沃波尔开出了条件，说他不能以私人名义接受唐宁街上的这幢房产，除非将它保留给日后所有当上首席财政大臣的人。所谓“首席财政大臣”其实就是后来的首相，自此之后，唐宁街十号就成了内阁首辅的官邸。直到今天，它大门上最显眼的东西除了那个十号门牌之外，就是一小块刻着“首席财政大臣”字样的铜板了。</p><hr><p>一个老外开书局，我们当然会联想起在上海卖日文书的内山书店。西尔维娅·比奇替乔伊斯出了《尤利西斯》，内山完造也帮鲁迅出版了不少东西，乔伊斯把莎士比亚书店当办公室，鲁迅也用内山书店来会客。一部英文小说要在巴黎出版，是因为当时的英语世界太封闭，鲁迅的中文作品要在上海这个半殖民地面世，而且得靠一个日本友人协助，则是那年头中国政治情势的悲剧。保守的英语世界把自己的天才赶到了巴黎，比较新潮的日本却用它的出版品引来一群求知若渴的中国知识分子。如果有人把这两家几乎同代的书店放在一起，为它们写一个既平行又相异的故事，那该有多好看呀。</p><hr><p>藏书是生活的另一面相，书话是读书和觅书的历程，二者同样漫长，但藏书终必散尽，留下的是一则又一则书话。</p><hr><p>今天人人都谈文化创意产业，觉得这真是个点石成金的好买卖，只要有一点不知打哪里来的创意，就能变出天文数字般的财富。于是大家都忘了，所谓文化产业，本质其实只不过是非常土气、非常卑微的手工业罢了。许多大型时装品牌都会推出一些设计一般、大量生产的镜框，加上个商标，就突然变身为名牌高档货了。不过讲究眼镜的人都晓得，在眼镜的世界里，真正站在顶峰的其实是些传统得不能再传统的手工小作坊。例如日本的泰八郎，不开分号，不加入连锁集团，不假手于外包工厂，就他一个老头每天在那里磨胶版，一年只做不过千副眼镜，卖完就算。香港是有很多顾客排队下订金，但香港绝不会有人想做泰八郎。</p><hr><p>陆灏这本集子也是他的读书札札记，记的都是他读到的有趣故事。例如其中一篇提到一类喜欢欢毁书的读书人（专有名词叫biblioclast），佼佼者是达尔文，喜欢把一本厚书撕成两半，放进外套上的两个口袋，“认为这样方便携带”。大诗人华兹华斯要是进了朋友的书房，“就好像把狗熊放进了郁金香花园，会用一把满是牛油的刀，裁开一本伯克的著作，以致书中每一页都留下油渍”。同是诗家，雪莱的行动就诗意多了，喜欢折纸船，每见池塘，必从书中撕下几页折成小船下水，看它们浮游徜徉。</p><hr><p>每一个人的藏书都是他暂时淤塞的浅滩汐湖，终有流出冲散的一天，终有回到大河海潮的一刻，本来就非我所有。那些注定没有流传价值的，就活该蒸发，回归大气。所以无意义的书，不妨尽成废纸，且还有再用的价值，堪比器官捐赠。</p><hr><p>木心《同情中断录》的序言，就只是短短一句触目惊心的话：“本集十篇，皆为悼文，我曾见的生命，都只是行过，无所谓完成。”其实书亦何尝不是如此，我曾拥有、曾读过的书，在我的生命中都只是行过而已。行过，走了，无所谓完成，亦无所谓终结。</p><hr><p>经典绝非有限的水池，而是大海，每游出一尺，你就发现前面还有一尺，无穷无尽，足可在不知不觉间溺死那些不懂疲倦的好奇读者。怕累，或许也是不读经典的理由，但比起怕累，我们一般更怕死。所以还是读书好，起码读着读着便不知老之将至了。</p><hr><p>关于经典的最经典定义是——那些没有人看但人人都在谈的书。我觉得这个明显是嘲讽的说法其实隐约说出了真相，经典确实是用来让人说事的，而说它也确实比读它更重要。道理很简单，就看看我们身边的人吧，有谁不知道什么叫“三顾茅庐”？有谁不明白“桃园三结义”？但在 21 世纪的第八年，还有多少人真正读过《三国演义》这部通俗又畅销的名著呢？我很怀疑。尽管如此，我们却还是乐此不疲地引用那些典出《三国演义》的故事和段子，甚至把它们浓缩成四字成语，用它们形容看见的事，以它们表达心里的想法，仿佛人人都读过三国，都通晓里头的内容似的。</p><hr><p>好在我是那种书迷，就是自己没有的东西固然想要，若是人家得了也不妒忌，反而替别人高兴，觉得自己喜欢的事物有同好欣赏，吾道果然不孤。</p><hr><p>今天我们坐在电脑荧幕之前，手握“老鼠”，上下推移，并以指尖点压，虽是前所未见的阅读动作，但那屏幕画面的移动概念却兜了个圈回到古代，文字成为一篇连续体，而非可以断开的页面。一篇文章看到一半若想回头翻查，就得往前卷动，英文叫作“scrolling”，正是罗马人阅读卷轴的动作。</p><hr><p>书之于人，就和食物音乐一样，必要但是日常，不足为奇也不足称道。</p><hr><p>我们的习惯是什么？那就是把书看得格外崇高而神圣，认为读书是一种很离世、很出尘的行为。因此为了让它回到人间，让它有点烟火味，就得不时出动大家都认得的名人推介好书，甚至集合一大批小孩集体朗诵（最好能有破世界纪录的人数），好叫电视台看看我们都正在读书呢。劝人读书，介绍好书，我们一概统称为“推动”阅读风气，仿佛不推， 它就动不起来了。</p><hr><p>研究印刷史和书籍史的学者们有个共识，认为古登堡印刷术的发明，是人类两种阅读取向的分水岭。在印刷术普及之前，读者追求的是“精读”（intensive reading），犹如古人注经，务求一字一句都要看出个道理，往往一本书能耗上一辈子的生命。原因简单，那时流通的书数量极少，一个罗马时代的学者要是能在一生之中读过三百本书，就是惊人的硕学鸿儒了。等到印刷术出现，书籍的复制方便了，短短百年之间，无论种类还是数量都有几何级数的增长。这时的学者如果只看过三百本书还敢对人夸称自己博学，肯定遭人耻笑。所以印刷术的年代是个“泛读”（extensive reading ）为王的时代，读书首要是求多求广，速度自然也得跟得上。</p><hr><p>成长，就是一个不断发现自己被欺骗的残酷醒觉历程。想当年，我也有过纯情的日子，曾经十分羡慕法国人民的文化素质高，不只电影晓得安排主角去法兰西学院听列维·施特劳斯讲课，就连福柯最深奥难懂的《词与物》也成了地铁里人手一册的畅销书。直到上了大学，有学长传授“书皮学”(book cover studies)，我才恍然大悟，法国人有可能是世界上最懂得在知识上伪装、在文化上炫耀的一帮家伙。</p><hr><p>经过这许多年，我现在算不算是一个正常的读者呢？这么讲吧，我开始能够体会浮士德的悲剧，也开始明白知识、禁果与傲慢的关联了，你愈是以为自己谦卑低下，就愈容易犯上骄傲的罪，愈容易陷入文字障所导致的我慢。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/lpic/s28703990.jpg" alt="《读者》"><br><a href="https://book.douban.com/subject/26773392/" target="_blank" rel="noopener">《读者》</a><br>作者：梁文道<br>出版社：文化艺术出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《哥伦比亚的倒影》读书笔记</title>
      <link href="/reflection-of-Colombia-clip/"/>
      <url>/reflection-of-Colombia-clip/</url>
      
        <content type="html"><![CDATA[<p>昔鲁迅将“海派”与“京派”作了对比：精当处颇多阐发，然则这样的南北之分刚柔之别，未免小看小言了海派。海派是大的，是上海的都市性格，先地灵而人杰，后人杰而地灵；上海是暴起的，早熟的，英气勃勃的，其俊爽豪迈可与世界各大都会格争雄长；但上海所缺的是一无文化渊源，二无上流社会，故在诱胁之下，嗒然面颜尽失，再回头，历史契机寢寢而过。</p><hr><p>面子第一要紧，上海人讲究穿着为来为去为了“面子”，因此服装的含义或可三而述之：一、虚荣；二、爱好；三、自尊——凡虚荣每含欺骗性，是达到目的前的手段，故属权术的范畴。凡爱好，虽说发乎天性，而外向效应也是取悦人引诱人，内向效应则形成优越感，自恋自宠，乐此不疲。凡自尊，为了确保身份，成全个人的存在证觉，伦理观念流于生活细节，细节累计为大节——虚荣心态蔚为社会风尚，这个无处不在的大魔障，个人没法冲破，服装的欺骗性便愈转愈烈。而爱好的心态呢，或先认衣衫后认人，或既认衣衫又认人，近乎中庸，其实模棱两可，衣可人可。自己也只要做个“可人”。那第三类所谓伦理观念细节化的，是精于“衣道”者，细认衣衫细认人。能从“衣衫”上辨别判断“人”，必要时，达到不认衣衫只认人的明哲度——从前的上海人，在“衣”与“人”之关系的推论上，也许总不外乎这样的吧，因为后来上海人就不虚荣了，继之不爱好了，终于不自尊了，再后来又想虚荣又想爱好又想自尊，已不知如何个虚荣爱好自尊法。所以，从前的上海人在“衣”与“人”之广义关系的考辨推论上，总不外乎，就是这样的吧。</p> <a id="more"></a><hr><p>从前的上海人中做吃食生意者，利用顾客心理，各有拿手好戏。每年鸡蛋旺季，冷藏设备有限，急需把鸡蛋推销掉，你去喝豆浆吧，刚刚坐下，伙计过来问： “甜格咸格？” 你说了，他说： “好，咸浆，鸡蛋一只还是两只？” 你说一只，他喊道： “喂——又来咸浆一碗，加只蛋。” 你原是只想喝咸豆浆的，如果他问“要勿要加鸡蛋”，你会答“勿要”，而他问“鸡蛋一只还是两只你便去考虑两只太多，一只就够了——上海人这点偷换概念的小伎俩，施之于外省来的旅客，可谓稳扎稳打，除非是本地的“人精”，就不甘于被摆布： “喔，老先生，侬早，请坐，甜浆咸浆？” “咸格。” “好，咸浆，鸡蛋一只两只？” “今朝勿要哉。” “哪能拉？” “昨日被侬噱进了。” “啊哟哟，侬老人家真是，鸡蛋吃勒侬肚皮里格，又勿是请我吃，侬钞票麦卡麦卡，豆腐浆里勿摆蛋赛过八月半唔没月亮，阿是？好，侬阿要辣油？” “我是相信吃辣格！” “好，嗳——咸浆一碗重辣，鸡蛋拣新鲜大点格，马上就来！” “概念再次偷换——上海人擅长在饮食男女等细节上展施小伎俩，多半总是收效的，因之自我感觉个个光滑良好，如鱼得水的水其实都是鱼，然而却就此优哉游哉逝者如斯夫。即使轮到整个大都会被偷换了大概念，上海人还是以为靠微型的概念偷换，便足与巨型的概念偷换相周旋相抗衡，似乎愈是绝处愈能逢生，而且夹缝里发了财。租界期如此，孤岛期如此，日据沦陷期如此，胜利光复期如此，如此这般期如此，直到永远。</p><hr><p>上海人是不怕玩物丧志的，猪大肠叫“圈子”，鸡肫肝称“时件”，青鱼肉脏曰“秃肺”，狗脔讳“香肉”：蛙腿号“樱桃”，鱼尾则“豁水”，那中段者“肚裆”；火腿与鲜猪爪共炖，文火历昼夜，红白相映，赐谧“金银蹄”，形容黄鱼炸得蓬松，乃名“松鼠黄鱼”，嫌“鳖”不韵，改字“圆鱼”，或“甲鱼”、“水鸡”，其沿背壳之软体，昵呼“裙边”，美食家之大嗜也，再要溯涉“松江四鳃鲈鱼”，矜贵若翻螂嫖食谱，那就更加如梦似真了。</p><hr><p>京菜——源出山东，以鲜嫩香脆为特色，倚仗宫廷款目，煞有富贵介事，引人想入非非，而调理纯正，盘式雍容，菜中之缙绅也。 粤菜——有“海派广东菜”之称，淡雅清爽，于若生若熟中见技巧，品名花俏，用料淫奇，神妙处处大有仙趣，菜中之丽姝也。 川菜——标榜“七味”：酸、甜、麻、辣、苦、香、咸。“八滋”：麻辣、鱼香、酸辣、怪味、红油、干煸等；实则一辣以蔽之，自有其王气霸气，菜中之纵横家也； 扬菜——镇江世系，刀工精，主料明，和顺适口回味醰悠。可家常，可盛宴，菜中之出将入相者也。再者，维扬细点，允为隽物。 本帮菜——本帮菜就是上海人伶俐性格的食品化，小东门十六铺德兴馆：红烧秃肺、生炒圈子、酱魚樱桃、虾子乌参，尤其是一道以生煸草头垫底的蒜蓉红焖大肠，遐迩闻名。广西路老正兴：白糟腌青鱼、春笋火腿川槽，得味自然，他家的糟是自己酿制的。小花园大陆饭店的清炒去皮鳝背，松腴芳茹，而炸双排不拘挂糖醋、洒椒盐，一色金黄勿沾油。牛庄路天香楼：象牙菩鱼，刺少肉致，配葱蒜姜酒下锅生炒，白里透黄，宛如象牙，那菩鱼是杭州七里塘所产，确系神品——上海菜刁钻精乖，识时务者为俊杰也。</p><hr><p>夜戏散场，压轴性的喧嚣闹忙过后，上海整个疲乏不堪，到处油污脏水废物垃圾。长长的多桥的苏州河秽黑得无有倒影，蒸发着酷烈的辛臭。野猫在街口哀鸣。窗子一扇扇熄了。马路上的夜风说冷不冷说热不热，含着都市统体的汗骚膻腥，淡而分明。真的能感觉到屋顶路面都在喘息。暗暗讨饶，只剩街灯下碎烂的报纸飘起、旋落。 等到江海关的大钟一敲，晨光一照，报童一喊，垃圾车一过，商店的千门万户一开，上海又上了海，精神一小时一小时抖擞起来。</p><hr><p>大约廿世纪二十年代初到四十年代末，上海显现了畸形的繁华，过来之人津津乐道，道及自身的风流韵事，别家的鬼蜮伎俩——好一个不义而富且贵的大都会，营营扰扰颠倒昼夜。豪奢泼辣刁钻精乖的海派进化论者，以为软红十丈适者生存，上海这笔厚黑糊涂账神鬼难清。讵料星移物换很快就收拾殆尽，魂销骨蚀龙藏虎卧的上海过去了，哪些本是活该的，哪些本不是活该的；谁说得中肯，中什么肯，说中了肯又有谁听？因为，过去了呀。</p><hr><p>倘若谁来说，这些屋子，全没人住，也不能反证他是在哄我，因为是下午，晚上窗子有灯光，便觉得里面有人，如果孤居的老妇死了，灯亮着，死之前非熄灯不可吗，她早已无力熄灯，这样，每夜窗子明着，明三年五年，老妇不可怜，那灯可怜，幸亏物无知，否则世界更逼促紊乱，幸亏生活在无知之物的中间，有隐蔽之处，回旋之地，憩息之所，落落大方地躲躲闪闪，一代代蹙眉窃笑到今天。</p><hr><p>任何事物，当它失去第一重意义时，便有第二重意义显出来，时常觉得是第二重意义更容易由我靠近，与我适合，犹如墓碑上倚着辆童车，热面包压着三页遗嘱，以致晴美的下午也就此散步在第二重意义中而俨然迷路了，我别无逸乐，每当稍有逸乐，哀愁争先而起，哀愁是什么呢，要是知诺哀愁是什么，就不哀愁了——生活是什么呢，生活是这样的，有些事情还没有做，一定要做的……另有些事做了，没有做好。</p><hr><p>如果我端坐着的岸称之为此岸，那么望见的岸称之为彼岸（反之亦然），这里是纳蕤思们芳踪不到之处，凡是神秘的象征的那些主义和主义者都已在彼岸的轮廓丛中，此岸空无所有，唯我有体温兼呼吸，今天会发生什么事，白昼比黑夜还静（一定要发生什么事了）空气煦润凉爽，空气也凝定不动，渐渐我没有体温没有呼吸，没有心和肺，没手也没足（如果感到有牙齿，必是痛，如果觉得有耳朵，那是虚鸣）我健康正常，所以什么都没有，目不转睛，直视已着对岸参差重叠的轮廓前后凹凸地耸峙在蓝天下……要发生的事发生了——对岸什么都没有，整片蓝天直落地平线，匀净无痕，近地平线绀蓝化为淡紫，地是灰绿，岸是青绿，河水里，前前后后参参差差凹凹凸凸重重叠叠的倒影清晰如故，凝定如故，像一幅倒挂的广毯——人类历代文化的倒影……前人的文化与生命同在，与生命相渗透的文化已随生命的消失而消失，我们仅是得到了它们的倒影，如果我转过身来，分开双腿，然后弯腰低头眺望河水，水中的映象便俨然是正相了——这又何能持久，我总得直起身来，满脸赧颜羞色地接受这宿命的倒影，我也并非全然悲观，如果不满怀希望，那么满怀什么呢……起风了，河面波灏粼粼，倒影潋滟而碎，这样的溶溶漾漾也许更显得澶漫悦目——如果风再大，就什么都看不清了。</p><hr><p>人的伤感情调无不可厌，物的伤感情调却普遍可爱。</p><hr><p>我的大甥在“哈佛”攻文学，问他的指导教授：美国文明究竟是什么文明？教授说：“山洞文明。”真正的智者都躲在高楼大厦的“山洞”里，外面是人欲横流的物质洪水——大甥认为这个见解绝妙，我亦以为然。 当我刚迁入此六十一街三十W.APT时，也颇有山顶洞人之感。看门大员力拒野兽，我便可无为而治。储藏食品的橱柜特多，冰箱特大，我的备粮的本能使我一次出猎，大批带回，塞满橱柜冰箱，一个月是无论如何吃不完的，这岂非更像原始人的冬令蛰伏——是文明生活的返祖现象。想想觉得很有趣，再想想又觉得我自己不是智者，而且单身索居，这山洞委实寂静得可怕，几个星期不下楼不出门，偶然飘来一封信，也燃不起一堆火。山洞文明不好受。</p><hr><p>我就是受苦吃亏在老是要想到什么是应该的，什么是不应该的。</p><hr><p>“隐私”，“自然生活”，昆德拉乐谈的一而二、二而一的话题，“任何揭人隐私的行为都该受到鞭挞”。谁来鞭挞呢？“隐私”原本不成其为“权利”，当它受到邻人般的警探和警探般的邻人昼夜作践时，“隐私”才反证为神圣。因此，一旦到了争隐私的时候，必是万难拥有隐私了。而专以摧残隐私为能事、乐事者，却看准被虐者的弱点，久而久之的作践，使人丧失私生活的界范，再久而久之就泯灭了私生活的意识。</p><hr><p>昆德拉毕竟经历过来，他看清幼稚无知是青年的宿命特征，黑白分明的道德观加上罗曼蒂克的情绪爆炸力，正好被极权的恐怖统治者充分利用，一代青年老去，另一代青年上来：……极权主义没有年龄，就这样，总归是没有年龄的东西支配有年龄的东西。</p><hr><p>人们在俯首听令时，甘于殉从最简明易行的令，宗教早就试验了这类庶民的心理取向。贯彻一种酷烈的意志，以采用几个字、两三句烙印鲜明的话最能生效，最富诱惑力。初受政治教条的控制时，哗嚣折腾中，来不及联想到人的极权乃是神的极权的变相和加剧，等到有所察觉，人的极权的机械器械系统性的完备程度，早已超出神的极权的模式之上了。</p><hr><p>有个捷克人，申请移民签证，官员问： “你打算到哪里去？” “哪儿都行。” 官员给了他一个地球仪： “自己挑吧！” 他看了看，慢慢转了转，对官员道 “你还有没有别的地球仪？” ——Milan Kundera<br>2017年03月15日 12时53分<br>渡江的轮船上站满了人，我挤到船头，倚栏迎风——是我的谬见，常以为人是一个容器，盛着快乐，盛着悲哀。但人不是容器，人是导管，快乐流过，悲哀流过，导管只是导管。各种快乐悲哀流过流过，一直到死，导管才空了。疯子，就是导管的淤塞和破裂。 …… 容易悲哀的人容易快乐，也就容易存活。管壁增厚的人，快乐也慢，悲哀也慢。淤塞的导管会破裂。真正构成世界的是像蓝衣黑伞人那样的许许多多畅通无阻的导管。如果我也能在啜泣长叹之后把伞挥得如此轻松曼妙，那就好了。否则我总是自绝于这个由他们构成的世界之外—他们是渺小，我是连渺小也称不上</p><hr><p>话说人际关系，唯一可爱的是“映照”，映照印证，以致日月光华，旦复旦兮，彪炳了一部华夏文化史。滔滔泛泛间，“魏晋风度”宁是最令人三唱九叹的了；所谓雄汉盛唐，不免臭脏之讥；六朝旧事，但寒烟衰草凝绿而已；韩愈李白，何足与竹林中人论气节。宋元以还，艺文人士大抵骨头都软了，软之又软，虽具须眉，个个柔若无骨，是故一部华夏文化史，唯魏晋高士列传至今掷地犹作金石声，投江不与水东流，固然多的是巧累于智俊伤其道的千古憾事，而世上每件值得频频回首的壮举，又有哪一件不是憾事。</p><hr><p>美貌是一种表情。 别的表情等待反应，例如悲哀等待怜悯，威严等待慑服，滑稽等待嬉笑。唯美貌无为，无目的，使人没有特定的反应义务的挂念，就不由自主地被吸引，其实是被感动。 其实美貌这个表情的意思，就是爱。 这个意思既蕴藉又坦率地随时呈现出来。 拥有美貌的人并没有这个意思，而美貌是这个意思。</p><hr><p>人害怕寂寞，害怕到无耻的程度。换言之，人的某些无耻的行径是由于害怕寂寞而作出来的。就文句而言，还是“人害怕寂寞，害怕到无耻的程度”这样比较清通。</p><hr><p>莫干山的竹林，高接浮云，密得不能进去踱步。使我诧异的是竹林里极为干净，终年无人打扫，却像日日有人洁除；为什么，什么意思呢，神圣之感在我心中升起……继而淡然惋惜了——那山上的居民，山下来的商客，为的是吃笋，买卖笋干，箬叶可制鞋底，斫伐以筑屋搭棚，劈削而做种种篾器，当竹子值钱时，功能即奴性。生活，是安于人的奴性和物的奴性的交织。更有画竹，咏竹，用竹为担，为篙，为斗械，为刑具——都已必不可少，都已可笑，都已寂寞。</p><hr><p>另外（难免有一些另外），中国人既温暾又酷烈，有不可思议的耐性，能与任何祸福作无尽之周旋。在心上，不在话下，十年如此，百年不过是十个十年，忽然已是千年了。苦闷逼使“人”有所象征，因而与自然作无止境的亲嫟，乃至熟昵而狡黠作狎了。至少可先例两则谐趣：金鱼、菊花。自然中只有鲋、鲫，不知花了多少代人的宝贵而不值钱的光阴，培育出婀娜多姿的水中仙侣，化畸形病态为固定遗传，金鱼的品种叹为观止而源源不止。野菊是很单调的，也被嫁接、控制、盆栽而笼络，作纷繁的形色幻变。菊花展览会是菊的时装表演，尤其是想入非非的题名，巧妙得可耻——金鱼和菊花，是人的意志取代了自然的意志，是人对自然行使了催眠术。中庸而趋极的中国人的耐性和猾癖一至于此。亟待更新的事物却千年不易，不劳费心的行当干了一件又一桩，苦闷的象征从未制胜苦闷之由来，叫人看不下去地看下，看下去。“自然”在金鱼、菊花这类小节上任人摆布，在阡陌交错的大节上，如果用“白发三千丈”的作诗方法来对待庄稼，就注定以颗粒无收告终，否则就不成其为“自然”了。</p><hr><p>“自然”对于“人”在理论上、观念上若有误解曲解，都毫不在乎。野果成全了果园，大河肥沃了大地，牛羊入栏，五粮丰登，然后群莺乱飞，而且幽阶一夜苔生——历史短促的国族，即使是由衷的欢哀，总嫌浮佻庸肤，毕竟没有经识过多少盛世凶年，多少钧天齐乐的庆典、薄海同悲的殇礼，尤其不是朝朝暮暮在无数细节上甘苦与共休戚相关，即使那里天有时地有利人也和合，而山川草木总嫌寡情乏灵，那里的人是人，自然是自然，彼此尚未涵融尚未钟毓……海外有春风芳草，深宵的犬吠，秋的丹枫，随之绵衍到煎鱼的油香，邻家婴儿的夜啼，广式苏式月饼。大家都自言自语：不是这样，不是这样的。心里的感喟：那些都是错了似的。因为不能说“错了的春风，错了的芳草”，所以只能说不尽然、不完全……异邦的春风旁若无人地吹，芳草漫不经心地绿，猎犬未知何故地吠，枫叶大事挥霍地红，煎鱼的油一片汪洋，邻家的婴啼似同隔世，月饼的馅儿是百科全书派……就是不符，不符心坎里的古华夏今中国的观念、概念、私心杂念……乡愁，去国之离忧，是这样悄然中来、氤氲不散。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/lpic/s4531886.jpg" alt="《哥伦比亚的倒影》"><br><a href="https://book.douban.com/subject/5355829/" target="_blank" rel="noopener">《哥伦比亚的倒影》</a><br>作者：木心<br>出版社：广西师范大学出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RegEx折腾之路（一）</title>
      <link href="/regex-tricks-1/"/>
      <url>/regex-tricks-1/</url>
      
        <content type="html"><![CDATA[<p>关于 RegEx，一直记得一句话：</p><blockquote><p>好的 RegEx 是短而精的。</p></blockquote><p>近来在研究 RegEx 的折腾之路上走来走去。决定把自己所遇到的一些小例子记下来。<br>一方面方便自己回顾、反思，另一方面给大家参考、指正。<br>想起前段时间工作上遇到的一个 situation。</p> <a id="more"></a><p>源文本如下：<br><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">(通用,单选,非必填)BRAND<span class="string">||常规品牌</span></span><br><span class="line">(通用,单选,非必填)DESIGNER<span class="string">||设计师品牌</span></span><br><span class="line">(通用,多选,非必填)MATERIAL<span class="string">||面料（1）</span></span><br><span class="line">(通用,多选,非必填)MATERIAL<span class="string">||面料（2）</span></span><br><span class="line">(特定,多选,非必填)NECKLINE<span class="string">||领口</span></span><br><span class="line">(特定,多选,非必填)SLEEVE LENGTH<span class="string">||袖长</span></span><br><span class="line">(特定,多选,非必填)SLEEVE TYPE<span class="string">||袖型</span></span><br><span class="line">(特定,多选,非必填)WAISTLINE<span class="string">||腰线</span></span><br><span class="line">(特定,多选,非必填)DRESS LENGTH<span class="string">||裙长（1）</span></span><br><span class="line">(特定,多选,非必填)DRESS LENGTH<span class="string">||裙长（2）</span></span><br><span class="line">(特定,多选,非必填)FIT<span class="string">||体型</span></span><br><span class="line">(特定,多选,非必填)OCCASION<span class="string">||场合（1）</span></span><br><span class="line">(特定,多选,非必填)OCCASION<span class="string">||场合（2）</span></span><br><span class="line">(特定,多选,非必填)STYLE<span class="string">||款式（1）</span></span><br><span class="line">(特定,多选,非必填)STYLE<span class="string">||款式（2）</span></span><br><span class="line">(特定,多选,非必填)ACCENT<span class="string">||特色（1）</span></span><br><span class="line">(特定,多选,非必填)ACCENT<span class="string">||特色（2）</span></span><br><span class="line">(特定,多选,非必填)ACCENT<span class="string">||特色（3）</span></span><br></pre></td></tr></table></figure></p><p>需要匹配出每一行中对应的中、英文标题：<br>如英文标题「SLEEVE LENGTH」，及对应的中文标题「袖长」<br>如英文标题「DRESS LENGTH」，及对应的中文标题「裙长」</p><p>乍一看很简单，但是实际做起来却没有那么容易。写出的 RegEx 总会受到行末的序号所影响。最后使用两个 RegEx 分情况进行匹配：</p><ul><li>使用下式匹配无序号的情况：<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">(?:<span class="symbol">\)</span>)(.+)(?:<span class="symbol">\|</span><span class="symbol">\|</span>)(.+(?:[^<span class="symbol">\u</span>FF09<span class="symbol">\s</span>]$))</span><br></pre></td></tr></table></figure></li></ul><p>例如能够匹配出 <code>DESIGNER 设计师品牌</code>, <code>FIT 体型</code></p><ul><li>使用下式匹配有序号的情况：<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="comment">(?:\)</span>)<span class="comment">(.+)</span><span class="comment">(?:\|\|)</span><span class="comment">(.+)</span><span class="comment">(?:\s*\uFF08)</span></span><br></pre></td></tr></table></figure></li></ul><p>例如能够匹配出 <code>MATERIAL 面料</code>, <code>STYLE 款式</code></p><p>然后使用或关系进行合并：<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">(?:<span class="symbol">\)</span>)(.+)(?:<span class="symbol">\|</span><span class="symbol">\|</span>)(?:(.+(?:[^<span class="symbol">\u</span>FF09<span class="symbol">\s</span>]$))|(.+)(?:<span class="symbol">\s</span>*<span class="symbol">\u</span>FF08))</span><br></pre></td></tr></table></figure></p><p>匹配结果如下图：<br><img src="https://ooo.0o0.ooo/2017/04/27/590213c8359e1.png" alt=""></p><p>这段正则的释意如下：<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">(?:<span class="string">\))</span>                           <span class="comment">#分组但不捕获「非必填」后面的右括号</span></span><br><span class="line">(.+)                             <span class="comment">#分组1匹配任意内容（即英文）</span></span><br><span class="line">(?:<span class="string">\|\|)</span>                         <span class="comment">#分组但不捕获双竖线</span></span><br><span class="line">(?:                              <span class="comment">#分组但不捕获</span></span><br><span class="line">    (.+                          <span class="comment">#分组2匹配任意内容（即无序号中文）</span></span><br><span class="line">    (?:[^<span class="string">\uFF09\s]$)</span>             <span class="comment">#分组但不捕获空白符和右括号外的字符</span></span><br><span class="line">    )                            <span class="comment">#分组2结束</span></span><br><span class="line">|                                <span class="comment">#分组或关系</span></span><br><span class="line">    (.+)                         <span class="comment">#分组3匹配任意内容（即有序号中文）</span></span><br><span class="line">    (?:<span class="string">\s*\uFF08)</span>                <span class="comment">#分组但不捕获空白符和左括号</span></span><br><span class="line">)                                <span class="comment">#分组结束</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2017/04/27/590213c83591a.png" alt=""></p><p>一直没有想到什么好的解决办法能够在一个简短的正则表达式中完美实现这一个需求。如果读者有什么好想法（好吧其实并没什么读者）请评论分享你的 idea。</p><hr><p>2017.6.22 更新</p><p>感谢 Inoreader 读者 <a href="http://www.inoreader.com/u/icery" target="_blank" rel="noopener">Andy</a> 的评论和建议，其提供的 RegEx 如下：<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">(?:<span class="symbol">\)</span>)([^<span class="symbol">\)</span>]+)<span class="symbol">\|</span><span class="symbol">\|</span>([^<span class="symbol">\s</span><span class="symbol">\u</span>FF09<span class="symbol">\n</span>]+)</span><br></pre></td></tr></table></figure></p><p>释意如下：<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">(?:<span class="string">\))</span>              <span class="comment">#分组但不捕获「非必填」后面的右括号</span></span><br><span class="line">([^<span class="string">\)]+)</span>            <span class="comment">#分组捕获除右括号之外的内容</span></span><br><span class="line"><span class="string">\|\|</span>                <span class="comment">#双竖线</span></span><br><span class="line">([^<span class="string">\s\uFF09\n]+)</span>    <span class="comment">#分组捕获除空白符、右括号和换行符外的字符</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2017/06/22/594b68f251ea7.png" alt=""></p><p>更近一步精简的版本如下：<br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">([^<span class="symbol">\)</span>]+)<span class="symbol">\|</span><span class="symbol">\|</span>([^<span class="symbol">\s</span><span class="symbol">\u</span>FF09<span class="symbol">\n</span>]+)</span><br></pre></td></tr></table></figure></p><p>释意如下：<br><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">([^<span class="string">\)]+)</span>            <span class="comment">#分组捕获除右括号之外的内容</span></span><br><span class="line"><span class="string">\|\|</span>                <span class="comment">#双竖线</span></span><br><span class="line">([^<span class="string">\s\uFF09\n]+)</span>    <span class="comment">#分组捕获除空白符、右括号和换行符外的字符</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2017/06/22/594b68f22a636.png" alt=""></p><hr><p><strong>总结</strong><br><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">(?:<span class="symbol">\)</span>)(.+)(?:<span class="symbol">\|</span><span class="symbol">\|</span>)(?:(.+(?:[^<span class="symbol">\u</span>FF09<span class="symbol">\s</span>]$))|(.+)(?:<span class="symbol">\s</span>*<span class="symbol">\u</span>FF08))</span><br><span class="line">(?:<span class="symbol">\)</span>)([^<span class="symbol">\)</span>]+)<span class="symbol">\|</span><span class="symbol">\|</span>([^<span class="symbol">\s</span><span class="symbol">\u</span>FF09<span class="symbol">\n</span>]+)</span><br><span class="line">([^<span class="symbol">\)</span>]+)<span class="symbol">\|</span><span class="symbol">\|</span>([^<span class="symbol">\s</span><span class="symbol">\u</span>FF09<span class="symbol">\n</span>]+)</span><br></pre></td></tr></table></figure></p><p>对比上文的三个 RegEx，可以总结出编写 RegEx 的些许技巧：</p><ol><li>匹配时有正向和反向两种思路，不一定要写出完整匹配目标文本的特定 RegEx，而可以选择使用排除法进行优化。（如「[1-8]」匹配数字 1-8,，亦可写为「[^90]」匹配除 9 和 0 外的字符）</li><li>「分组不捕获」无需滥用，如果只提取分组内的内容，则无关未分组内容也无需使用「分组不捕获」，以精简 RegEx。（如本文中的双竖线其实是无需使用分组不捕获的）</li><li><strong>好的 RegEx 是短而精的。</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> RegEx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 精通正则表达式 </tag>
            
            <tag> RegEx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《精通正则表达式》学习笔记（一）</title>
      <link href="/mastering-regex-summary-1/"/>
      <url>/mastering-regex-summary-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Ch-1-正则表达式入门"><a href="#Ch-1-正则表达式入门" class="headerlink" title="Ch.1 正则表达式入门"></a>Ch.1 正则表达式入门</h1><h2 id="正则表达式介绍"><a href="#正则表达式介绍" class="headerlink" title="正则表达式介绍"></a>正则表达式介绍</h2><ul><li>正则表达式（Regular Expression）是经过专门编写的文本字符串，用来匹配字符串（尤其是文件内字符串）集合中符合该模式的所有字符串。RegEx 能够添加、删除、分离、叠加、插入和修整各种类型的文本和数据。</li><li>完整的正则表达式由两种字符构成：<ol><li>特殊字符（如 *），称为 <strong>元字符</strong>（metacharacters）</li><li>其他字符为称为 <strong>文字</strong>（literal），或是普通文本字符（normal text characters）</li></ol></li><li><p>写正则表达式时，我们需要在对欲检索文本的了解程度与检索精确性之间求得平衡。针对某个检索文本，正则表达式基本不可能匹配不期望的结果，使用它就是合理的。</p><a id="more"></a></li></ul><h2 id="RegEx-语法基础"><a href="#RegEx-语法基础" class="headerlink" title="RegEx 语法基础"></a>RegEx 语法基础</h2><p><img src="https://ooo.0o0.ooo/2017/04/17/58f4bbe62a242.png" alt="元字符总结"></p><ul><li>只有在字符组内部，连字符 <code>-</code> 才用来表示范围。</li><li>只有在字符组内部（且在字符组首位），脱字符 <code>^</code> 才作为一个元字符。</li><li>只有在在字符组外部，脱字符 <code>^</code> 用来表示一个行锚点（line anchor）</li><li>只有在在字符组外部，点号 <code>.</code> 才作为一个元字符。</li><li><code>[^x]</code> 的含义不是「只有当这个位置不是 x 时才能匹配」，而是「匹配一个不等于 x 的字符」。前者含义可以匹配空行，后者不可。</li></ul><h1 id="Ch-2-入门示例拓展"><a href="#Ch-2-入门示例拓展" class="headerlink" title="Ch.2 入门示例拓展"></a>Ch.2 入门示例拓展</h1><h2 id="Prel-语法基础"><a href="#Prel-语法基础" class="headerlink" title="Prel 语法基础"></a>Prel 语法基础</h2><ul><li>Perl 表达式及运行参数</li></ul><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>=~</code></td><td>连接 RegEx 和待搜索的目标字符串</td></tr><tr><td><code>=</code></td><td>运算符，变量赋值</td></tr><tr><td><code>==</code></td><td>运算符，测试两个数值是否相等</td></tr><tr><td><code>-p</code></td><td>表示对目标文件的每一行进行查找和替换</td></tr><tr><td><code>-i</code></td><td>表示整个程序接在命令后面</td></tr><tr><td><code>-e</code></td><td>表示将替换结果写回文件</td></tr><tr><td><code>-w</code></td><td>表示严格检查语法并显示警告</td></tr></tbody></table><pre><code>举个栗子，下面的 Perl 程序用于将所有 sysread 替换为 read。<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">% <span class="keyword">perl</span> -<span class="keyword">p</span> -i -<span class="keyword">e</span> -<span class="keyword">w</span> <span class="string">'s/sysread/read/g'</span> <span class="keyword">file</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="Prel-中-RegEx-的使用"><a href="#Prel-中-RegEx-的使用" class="headerlink" title="Prel 中 RegEx 的使用"></a>Prel 中 RegEx 的使用</h2><ul><li><p>Perl 语句说明</p><ol><li><code>$var =~ m/regex/</code> 将判断一个正则表达式是否能匹配某个字符串。<br><code>m</code> 表示匹配（match），斜线用来标注正则表达式的边界（其本身不属于正则表达式）。整个测试语句作为一个单元，返回 true 或 false 值。类似的，</li><li><code>$var =~ s/regex/replacement/</code> 将使用一个正则表达式来匹配并替换某个字符串。<br><code>s</code> 表示替换（substitution，也叫查找和替换（search and replace））。</li><li><p><code>$var =~ qr/regex/</code> 将一个正则表达式生成为一个“regex 对象（regex object）”，作为变量保存，供后续使用。</p><p>举个栗子：</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$reply =~ <span class="regexp">m/^[0-9]+$/</span></span><br><span class="line">$reply =~ <span class="regexp">s/Jeff/Jeffrey/</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>Perl 的模式修饰符<br>模式修饰符，跟在表示结尾的斜线之后的参数。</p></li></ul><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>/i</code></td><td>表示此测试不区分大小写（ignore）</td></tr><tr><td><code>/g</code></td><td>表示全局匹配（global match/replacement）</td></tr><tr><td><code>/m</code></td><td>表示允许使用增强的行锚点（emhanced line anchor），可将 <code>^</code> 和 <code>$</code> 从字符串模式切换到逻辑行模式，即以逻辑换行进行锚位匹配。</td></tr><tr><td><code>/x</code></td><td>表示宽松排列的表达式（free-form expressions），可用于多行正则表达式增强可读性</td></tr></tbody></table><pre><code>举个栗子：<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="variable">$reply</span> =~ m<span class="regexp">/^[0-9]+$/i</span></span><br><span class="line"><span class="variable">$reply</span> =~ m<span class="regexp">/^[0-9]+$/g</span></span><br><span class="line"><span class="variable">$reply</span> =~ m<span class="regexp">/^[0-9]+$/</span>x</span><br></pre></td></tr></table></figure></code></pre><h2 id="RegEx-语法基础-1"><a href="#RegEx-语法基础-1" class="headerlink" title="RegEx 语法基础"></a>RegEx 语法基础</h2><h3 id="正则匹配符"><a href="#正则匹配符" class="headerlink" title="正则匹配符"></a>正则匹配符</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td><code>\t</code></td><td>制表符</td></tr><tr><td><code>\n</code></td><td>换行符</td></tr><tr><td><code>\r</code></td><td>回车符</td></tr><tr><td><code>\s</code></td><td>任何 <code>空白</code> 字符（如空格符、制表符、进纸符等）</td></tr><tr><td><code>\S</code></td><td>除 <code>\s</code> 之外的任何字符</td></tr><tr><td><code>\w</code></td><td><code>[a-zA-Z0-9]</code>（在 <code>\w+</code> 中很有用，可以用来匹配一个单词）</td></tr><tr><td><code>\W</code></td><td>除 <code>\w</code> 之外的任何字符</td></tr><tr><td><code>\d</code></td><td><code>[0-9]</code>，即数字</td></tr><tr><td><code>\D</code></td><td>除 <code>\d</code> 之外的任何字符</td></tr><tr><td><code>^</code></td><td>行起始锚位符</td></tr><tr><td><code>$</code></td><td>行结束锚位符</td></tr></tbody></table><p>ps.<code>^$</code> 可用来匹配空行，因为空行的行起始和行结束是相连的。</p><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p>使用 <code>(…)</code> 用来分组并捕获，使用 <code>(?:…)</code> 来分组但不捕获。<br><strong>捕获顺序按照括号出现的先后顺序依次进行</strong>，而非内外顺序。<br><img src="https://ws1.sinaimg.cn/large/68f607d1gy1feehtcbgxjj20kx0a1ta6.jpg" alt="捕获型括号"><br><img src="https://ws1.sinaimg.cn/large/68f607d1gy1feehtp4kp3j20m508hgn5.jpg" alt="嵌套型括号"></p><ul><li>思考</li></ul><ol><li><code>$var =~ s/\bJeff\b/Jeff/i</code><br>上述 Perl 表达式中 <code>i</code> 仅对所有匹配的字符串生效，对 replacement 的文本没有影响。即匹配所有 jeff、Jeff、jEFF……替换为 Jeff。</li><li><code>$price =~ s/(\.\d\d[1-9]?)\d*/$1/</code><br>上述 Perl 表达式将数字文本格式化为保留两位小数，且如果第三位非零则保留第三位。即 12.375000000564 =&gt; 12.375，12.375 =&gt; 12.375，37.5000 =&gt; 37.50。</li></ol><h3 id="环视"><a href="#环视" class="headerlink" title="环视"></a>环视</h3><p>环视结构不匹配任何字符，只匹配文本中的<strong>特定位置</strong>，类似单词分界符 <code>\b</code>，锚点 <code>^</code> 和 <code>$</code>。<br>环视结构的主体为要求的文本，而非匹配的文本，即使用环视时，环视结构内的文本将不会被匹配，而是作为标记文本位置的特殊语法进行使用。</p><table><thead><tr><th>字符</th><th>名称</th><th>别名</th><th>作用</th><th>条件</th></tr></thead><tbody><tr><td><code>(?:…)</code></td><td>非捕获型分组</td><td></td><td>分组但不捕获</td><td></td></tr><tr><td><code>(?=…)</code></td><td>肯定顺序环视</td><td>正前瞻</td><td>环视文本后的文本是否为要求文本</td><td>子表达式能够匹配右侧文本</td></tr><tr><td><code>(?!…)</code></td><td>否定顺序环视</td><td>反前瞻</td><td>环视文本后的文本是否非要求文本</td><td>子表达式不能匹配右侧文本</td></tr><tr><td><code>(?&lt;=…)</code></td><td>肯定逆序环视</td><td>正后顾</td><td>环视文本前的文本是否为要求文本</td><td>子表达式能够匹配左侧文本</td></tr><tr><td><code>(?&lt;!…)</code></td><td>否定逆序环视</td><td>反后顾</td><td>环视文本前的文本是否非要求文本</td><td>子表达式不能匹配左侧文本</td></tr></tbody></table><p>环视在检查子表达式能否匹配的过程中，其本身不会 <code>占用</code> 任何文本。<br>e.g.匹配文本为 <strong><code>Jeffrey</code></strong>，使用如下 RegEx 时匹配结果不同：<br><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Jeffrey </span>             <span class="comment">#匹配 Jeffrey</span></span><br><span class="line">(?=<span class="keyword">Jeffrey)Jeff </span>     <span class="comment">#定位 Jeffrey 中 Jeff 和 rey 的中间位置，匹配 Jeffrey 中的 Jeff</span></span><br><span class="line"><span class="keyword">Jeff(?=rey) </span>         <span class="comment">#与上式等价</span></span><br><span class="line">\<span class="keyword">bJeff(?=s\b) </span>       <span class="comment">#定位 Jeffs 中 Jeff 和 s 的中间位置，匹配 Jeffs 中的 Jeff</span></span><br><span class="line">(?&lt;=\<span class="keyword">bJeff)(?=s\b) </span>  <span class="comment">#定位 Jeffs 中 Jeff 和 s 的中间位置，且并未匹配任何内容</span></span><br></pre></td></tr></table></figure></p><p><img src="https://ooo.0o0.ooo/2016/11/22/5833c2a23571a.png" alt="(?=Jeffrey)Jeff的匹配"><br><code>(?=Jeffrey)Jeff</code> 的匹配</p><p><img src="https://ooo.0o0.ooo/2016/11/22/5833c2a234c2a.png" alt="\bJeff(?=s\b)的匹配"><br><code>\bJeff(?=s\b)</code> 的匹配</p><p><img src="https://ooo.0o0.ooo/2016/11/22/5833c2a23bf20.png" alt="(?&lt;=\bJeff)(Jeff的匹配"><br><code>(?&lt;=\bJeff)(?=s\b)</code> 的匹配</p><ul><li>思考<br>如何使用 Perl 表达式将数字文本格式化为右起三位数逗号分隔的数字。即 375000000564 =&gt; 375,000,000,564？</li></ul><ol><li><p><code>$var =~ s/(?&lt;=\d)(?=(\d\d\d)+$)/,/g;</code><br><code>(?&lt;=\d)</code> 表示左侧必须有数字，方式出现 ,375,000,000,564<br><code>(?=(\d\d\d)+$)</code> 表示从最右方进行肯定逆序环视（正后顾），每看到三个数字进行一次环视标记。</p></li><li><p><code>$var =~ s/(\d)(?=(\d\d\d)+$)/$1,/g;</code><br><code>(\d)</code> 使用捕获型括号实现逗号前的内容分组，然后保持 $1 内容不变，在其后添加逗号</p></li><li><p><code>$var =~ s/(\d)((\d\d\d)+\b)/$1,$2/g;</code><br>上式不使用环视，但无法实现期望。最终得到类似 375000000564 =&gt; 375,000000564。<br><code>((\d\d\d)+\b)</code> 匹配的数字属于最终匹配文本，不能作为“未匹配的部分”，供 <code>/g</code> 的下一次匹配迭代使用。<br>如欲使用该式进行实现，可配合循环结构：</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> ($var =~ <span class="regexp">s/(\d)((\d\d\d)+\b)/$1,$2/g</span>) &#123;</span><br><span class="line"><span class="comment">#空结构体，使用条件操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>\b([a-z]+)((?:\s|&lt;[^&gt;]+&gt;)+)(\1\b)</code><br>上适用于匹配一段文本中连续出现的重复单词，具体示意如下图：<br><img src="https://ws1.sinaimg.cn/large/68f607d1gy1felfe6zi3rj20gr077dhk.jpg" alt="示意图"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> RegEx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 精通正则表达式 </tag>
            
            <tag> RegEx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[转]学到不会忘</title>
      <link href="/learn-to-unforgettable/"/>
      <url>/learn-to-unforgettable/</url>
      
        <content type="html"><![CDATA[<p>近几日重新拿起《精通正则表达式》，重读前言的时候觉得感同身受，在作者博客看到可以转载，遂转至此以自勉。</p><p>本文由 Yurii 原创，来源：<a href="http://www.luanxiang.org/blog/" target="_blank" rel="noopener">乱象，印迹</a><br>原文链接 <a href="http://www.luanxiang.org/blog/archives/1249.html" target="_blank" rel="noopener">学到不会忘</a></p><p>原文如下</p><hr><p>博文视点的张春雨编辑告诉我，八次印刷的《精通正则表达式》已经全部售罄了， O’Reilly 与电子工业出版社续签了版权合同，准备重新上市，让我写一点东西。</p><p>该写什么好呢？</p><p>2007 年 《精通》上市时，我还在中关村，天气好的时候可以望见颐和园的佛香阁；而现在，窗外景色已经换成了珠江边的小蛮腰；对正则表达式的使用，也从随手拈来变得生疏——许多问题需要翻查《精通》，翻查自己写的《正则指引》。究其原因，与正则表达式直接相关的开发做得少了，古话说“勤则立，嬉则荒”，就是这个道理。</p><p>荒是荒了，毕竟还没荒废，虽然有很多细节需要查阅，但是我很清楚，某个问题能不能用正则表达式解决，该怎样解决。或者说，虽然手上生疏了，心里其实没有忘记，而这一切，归源都是之前死啃过《精通》的缘故。</p> <a id="more"></a><p>在阅读《精通》之前，我已经查阅了网上的不少资料，对正则表达式有了基本了解，能像模像样地解决一些实际问题，可算“够用”了。这时候遇见《精通》这样“现实价值不那么大”的书，能静下心去阅读，其实带着点毕业不久的傻气，只是单纯想把它弄懂搞透。所以，遇到匹配原理这类看来没多少实用价值的知识，还会愿意花时间去揣摩、研习。回头想想，也正是因为当时有这种傻气，可算是意外的收获：工作中经常需要学习一些工具和原理，虽然当时也“学会”了，但不久就忘个精光；相比之下，正则表达式却是学到了“不会忘”的程度。更典型的例子是游泳，几乎人人都可以做到“一朝学会，终身不忘”。同样是“学会”，为什么差距这么大呢？</p><p>这个问题我想了很久，最后的答案是，“学会”的定义是不同的。</p><p>通常我们说“学会”了某项技术、某门语言，意思是“凑合能用”，或者说“可以对照文档（ Google ）解决问题”的程度——你用 Python 解决了一个问题，就说明你“学会”了Python ，哪管是步步 Google ，还是照抄现成的代码。而我们说“学会”了游泳，意思是可以在水里行动而不沉下去，更重要的是在游泳时不需要时刻背诵各种口诀：吸气—伸手—划水—蹬腿—抬头—呼气……，如果你在泳池里还要时时谨记这些口诀，是绝对谈不上“学会”的。</p><p>两者虽然都叫“学会”，其实相差迥异：第一种“学会”是“照猫画虎”，第二种“学会”是“融会贯通”，虽然都可以解决问题，但从第一种“学会”到达第二种“学会”，其实需要经历漫长的过程。而且，两种“学会”都能解决问题，所以在达到第二种“学会”的漫长过程中，你很可能感觉不到自己的进步，反而会困惑继续学习的意义乃至放弃——既然能对着文档操作，既然有现成的资料，为什么要去理解背后的原理呢。</p><p>对我来说，第二种“学会”的好处是显而易见的，最重要的一点就是不会忘记——学习的时间增长一倍，遗忘的难度将会增加十倍、二十倍甚至一百倍。这些年来，我见到了太多这样的例子：有人每次用到正则表达式都会抓狂，都要四处极力搜索、反复盲目尝试，花很长时间才能凑出、蒙对解决方案；另一方面，他们又不愿意花时间潜心学习《精通》这样的经典。因为反复遗忘，需要反复学习，最终浪费了大量的时间。</p><p>许多人不愿意专门花时间来学习正则表达式，是认为它属于奇技淫巧，并非工作必须。但这理由是不成立的：我们大部分人不是作家，但为了在需要的时候写得出文章，还是必须专门花时间来练习写作。而且，专门花时间来学习“非必要”的技能，以后往往能有意想不到的收获。我真切体会到并且懂得这个道理，恰好也是与《精通》的翻译有缘。</p><p>在翻译《精通》时，为了省却重新编排索引的麻烦，需要做到中英文版页页对应，于是我专门学习了侯捷老师写的《Word排版艺术》，并且亲手尝试了每个例子，记熟了有关的概念和术语，从此学会了格式和样式的角度定义文档，再不用为格式之类的问题烦恼。这些年来虽然用得并不 多，却没有忘记。去年写作《正则指引》时，我事先完整定义了各种格式、样式、引用等等，交稿时节省了自己和出版社大量的时间。</p><p>另一个例子仍然与正则表达式有关。去年，为了写作《正则指引》中Unicode的章节，我专门花了时间研读Unicode规范，虽然最终《指引》中没有列出学到的全部知识，但我对Unicode的理解已经不再限于“在程序中设定Unicode编码即可”。前几天，有位同事遇到Unicode字符Ä （U+00C4）无法打印的问题，于是我建议他使用A和¨ （U+0041和U+0308）的两个Unicode字符来表示（按照Unicode规范，两个字符可以“组合”成一个字符），果然解决了问题。这段经历再次证明，真的学会了，就真的不会忘。</p><p>亚里士多德曾说：所谓幸 福，就是尽情地施展我们掌握的技能，等待期望的结果。然而很多时候，我们以为自己可以解决，但是之前学过的技能已经遗忘，于是施展起来步履沉重、举步维艰，最后只能精疲力竭地等待结果，自然与幸福绝缘。相反，如果我们能把重要的技能都真正学会，学到不会忘的程度，自然可以接近幸福。如果你想收获自如驾驭 正则表达式的幸福，不妨从这本书开始吧。</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
            <tag> 精通正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nano使用教程</title>
      <link href="/how-to-use-nano/"/>
      <url>/how-to-use-nano/</url>
      
        <content type="html"><![CDATA[<h1 id="Nano-简介"><a href="#Nano-简介" class="headerlink" title="Nano 简介"></a>Nano 简介</h1><p>Nano 是 Linux 上一个简单的文本编辑器，比起 Vim 来说它轻量很多，易于上手。遥想笔者第一次接触 Vim 的时候简直可怕，因为零基础，连退出都不会，直接死在 Vim 里面哈哈哈哈。Nano 就不至于这么困难了，随便看一两个命令和快捷键就能学会，远远没有 Vim 的学习曲线那样陡。虽然手册这种东西，没什么太大价值，但是自己整理一下印象深刻一些，也留备以后自己查阅。<br>没错我就是用来给博客凑数的！（逃</p> <a id="more"></a><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="命令及选项"><a href="#命令及选项" class="headerlink" title="命令及选项"></a>命令及选项</h2><ul><li>命令：<code>nano [选项] [[+行,列] 文件名]</code></li></ul><table><thead><tr><th>选项</th><th>GNU 长选项</th><th>意义</th></tr></thead><tbody><tr><td>-h, -?</td><td>--help</td><td>显示此信息</td></tr><tr><td>+行,列</td><td></td><td>从所指列数与行数开始</td></tr><tr><td>-A</td><td>--smarthome</td><td>启用智能 HOME 键</td></tr><tr><td>-B</td><td>--backup</td><td>储存既有文件的备份</td></tr><tr><td>-C &lt;目录&gt;</td><td>--backupdir=&lt;目录&gt;</td><td>用以储存独一备份文件的目录</td></tr><tr><td>-D</td><td>--boldtext</td><td>用粗体替代颜色反转</td></tr><tr><td>-E</td><td>--tabstospaces</td><td>将已输入的制表符转换为空白</td></tr><tr><td>-F</td><td>--multibuffer</td><td>启用多重文件缓冲区功能</td></tr><tr><td>-H</td><td>--historylog</td><td>记录与读取搜索/替换的历史字符串</td></tr><tr><td>-I</td><td>--ignorercfiles</td><td>不要参考nanorc 文件</td></tr><tr><td>-K</td><td>--rebindkeypad</td><td>修正数字键区按键混淆问题</td></tr><tr><td>-L</td><td>--nonewlines</td><td>不要将换行加到文件末端</td></tr><tr><td>-N</td><td>--noconvert</td><td>不要从 DOS/Mac 格式转换</td></tr><tr><td>-O</td><td>--morespace</td><td>编辑时多使用一行</td></tr><tr><td>-Q &lt;字符串&gt;</td><td>--quotestr=&lt;字符串&gt;</td><td>引用代表字符串</td></tr><tr><td>-R</td><td>--restricted</td><td>限制模式</td></tr><tr><td>-S</td><td>--smooth</td><td>按行滚动而不是半屏</td></tr><tr><td>-T &lt;#列数&gt;</td><td>--tabsize=&lt;#列数&gt;</td><td>设定制表符宽度为 #列数</td></tr><tr><td>-U</td><td>--quickblank</td><td>状态行快速闪动</td></tr><tr><td>-V</td><td>--version</td><td>显示版本资讯并离开</td></tr><tr><td>-W</td><td>--wordbounds</td><td>更正确地侦测单字边界</td></tr><tr><td>-Y &lt;字符串&gt;</td><td>--syntax=&lt;字符串&gt;</td><td>用于加亮的语法定义</td></tr><tr><td>-c</td><td>--const</td><td>持续显示游标位置</td></tr><tr><td>-d</td><td>--rebinddelete</td><td>修正退格键/删除键混淆问题</td></tr><tr><td>-i</td><td>--autoindent</td><td>自动缩进新行</td></tr><tr><td>-k</td><td>--cut</td><td>从游标剪切至行尾</td></tr><tr><td>-l</td><td>--nofollow</td><td>不要依照符号连结，而是覆盖</td></tr><tr><td>-m</td><td>--mouse</td><td>启用鼠标功能</td></tr><tr><td>-o &lt;目录&gt;</td><td>--operatingdir=&lt;目录&gt;</td><td>设定操作目录</td></tr><tr><td>-p</td><td>--preserve</td><td>保留XON (^Q) 和XOFF (^S) 按键</td></tr><tr><td>-q</td><td>--quiet</td><td>沉默忽略启动问题, 比如rc 文件错误</td></tr><tr><td>-r &lt;#列数&gt;</td><td>--fill=&lt;#列数&gt;</td><td>设定折行宽度为 #列数</td></tr><tr><td>-s &lt;程序&gt;</td><td>--speller=&lt;程序&gt;</td><td>启用替代的拼写检查程序</td></tr><tr><td>-t</td><td>--tempfile</td><td>离开时自动储存，不要提示</td></tr><tr><td>-u</td><td>--undo</td><td>允许通用撤销[试验性特性]</td></tr><tr><td>-v</td><td>--view</td><td>查看(只读)模式</td></tr><tr><td>-w</td><td>--nowrap</td><td>不要自动换行</td></tr><tr><td>-x</td><td>--nohelp</td><td>不要显示辅助区</td></tr><tr><td>-z</td><td>--suspend</td><td>启用暂停功能</td></tr><tr><td>-$</td><td>--softwrap</td><td>启用软换行</td></tr><tr><td>-a, -b, -e, -f, -g, -j</td><td></td><td>(忽略，为与Pico 相容)</td></tr></tbody></table><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><img src="https://ws1.sinaimg.cn/large/68f607d1gy1fed7k2lc7yj20mb0daaa9.jpg" alt="Nano编辑窗口"></p><p>在 Nano 编辑窗口中：</p><ol><li><code>Ctrl</code> 键被表示为一个脱字符 <code>^</code>，故 <code>Ctrl+W</code> 被写成了 <code>^W</code>。</li><li><code>Alt</code> 键被表示为一个 <code>M</code>（从”Meta”而来），故 <code>Alt+W</code> 被写成了 <code>M-W</code>。</li><li>使用用方向键移动光标。</li></ol><table><thead><tr><th>含义</th><th>快捷键</th></tr></thead><tbody><tr><td>标记</td><td><code>Ctrl+6</code> / <code>Alt+A</code></td></tr><tr><td>复制整行</td><td><code>Alt+6</code></td></tr><tr><td>剪贴整行</td><td><code>Ctrl+K</code></td></tr><tr><td>粘贴</td><td><code>Ctrl+U</code></td></tr><tr><td>查找</td><td><code>Ctrl+W</code> (WhereIs)</td></tr><tr><td>继续查找</td><td><code>Alt+W</code></td></tr><tr><td>上一页</td><td><code>Ctrl+Y</code></td></tr><tr><td>下一页</td><td><code>Ctrl+V</code></td></tr><tr><td>保存</td><td><code>Ctrl+O</code></td></tr><tr><td>退出</td><td><code>Ctrl+X</code></td></tr></tbody></table><h1 id="Nano-之外"><a href="#Nano-之外" class="headerlink" title="Nano 之外"></a>Nano 之外</h1><ul><li><p>众所周知 <code>man</code> 命令是 manual 的意思，可用来查阅的任何命令的手册，如果我们想要将某命令的内容导出到文本文件中，我们可以使用重定向实现：<br><code>$ man command &gt; command.txt</code><br>如需导出 <code>ls</code> 命令的手册到 <code>/root/lsman.txt</code> 文件中，命令如下：<br><code>$ man ls &gt; /root/lsman.txt</code></p></li><li><p>该文件在 Windows 用编辑器打开会有乱码，我们需要在输出文件前用 <code>col</code> 对控制字符进行过滤：<br><code>$ man nano | col -b &gt; /root/nano.txt</code><br>使用此参数保存的man手册在各种操作系统或文本查看程序下都可以正常查看</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> Nano </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《龙头凤尾》读书笔记</title>
      <link href="/once-upon-a-time-in-HK-clip/"/>
      <url>/once-upon-a-time-in-HK-clip/</url>
      
        <content type="html"><![CDATA[<p>人死了，当然一切都完了。尘归尘，土归土，下世投胎要投好。这是我外婆挂在嘴边的话。但她也说过“人死如灯灭”，年轻的我喜欢对她挑衅，问：“如果人死如灯灭，什么都冇了，还投什么胎呀？” 我外婆一边抽烟，一边淡然地自圆其说：“有谁知道呢？可能如灯灭，也可能会投胎，活着的人不知道，死了的人不会回来告诉你。所以啰，最聪明的做法是什么都说一些，什么都信一些，最后不管谁对谁错，两边都有你的份，包无蚀底。” 我一直记得这段话，并深受影响。长大后，我确曾尝试什么都做做，什么都试试，什么都信一些也不信一些，否则不感踏实，没有安全感。可是再长大后，亦即当有了若干年纪，到了中年，始明白，不，不是的，做人必须好好选择，你选了做什么和信什么，就该全心全意去做、全心全意去信，生命太短暂了，把数十年放在做某种人和信某些事之上还嫌不够，若再分心，结果必难成事。 然而又再比长大更长大了些以后，亦即开始老去，终究觉得我外婆说得有道理。但跟谁对谁错无关。而是，谁对谁错又有什么关系呢？你说了，你信了，你体验过了，那才是你的，都是你的，里面都有你的份，等于替生命灌注了不同的可能性，聊胜于无地补救了生命的单一和枯燥。可惜我没法跟我外婆说明这看法，除非人死确实不如灯灭，我还有机会在某个空间、用某种形式跟她重逢。</p> <a id="more"></a><hr><p>晚上十点多，两人起床穿衣，摸黑走路到谭臣道附近一幢唐楼，为避耳目，他走在路的右边，张迪臣在左边，长长的电车轨道在中间替他们切出了楚河汉界，陆南才觉得两人距离很远很远，乃更有文身的意志，渴望拥有一个永不失去的信物。</p><hr><p>天下洪门本一脉，孙兴社虽是新堂口，职务分工亦跟其他堂相同，简单明了，有所谓六级八职，坐馆龙头之下是“二路元帅”，再之下是“双花红棍”，左有“白纸扇”，右有“草鞋”，打架的谈判的跑路的，各有所专。在这之下是“四九仔”，还有负责管账的“先生”和仍未正式登堂的“蓝灯笼”，都是自己人。 洪门亦称“三合会”，香港早在一八四五年一月已通过特别法例，任何人只要“自称三合会会员”，即会被抓到法庭起诉。“三合”也者，有道是广东省内东、西、北方合源之意，但另有指福建省云霄县高溪庙始是三合正宗，漳江、南江和渚水于此汇流，万云龙禅在明末崇祯年间聚义抗清，高溪庙是根据地，庙前有对联：“地镇高岗，一派溪山千古秀；门朝大海，三河合水万年流。” 至于洪门之说，同样有分歧，有道是汉人失去中土，“汉”字变“洪”字，以此立名，暗含恢复大汉山河的雄心壮志。也有说朱元璋年号为洪武，起义者一心向明，尊崇旧朝。更有谓陈近南有大将苏洪光，威名震慑清兵，所至之处，天际常现红霞，洪乃“红”的转音，感念祥瑞天佑：</p><hr><p>陆北才没法确定自己有发问的资格。这一刻，他从胜利者忽然变回失败者，跟以往一样，站在被离弃被背叛的那方，晚上风大，怒风在咆哮。陆北才听见自己心里的风声。也忆起那天夜里，站在张迪臣家门外所曾听见的蝉鸣。</p><hr><p>陆北才信命，但命运过于复杂玄秘，不可能有人能够准确预测，俗语谓“是福不是祸，是祸躲不过”，唯一能做的几乎是听天由命，许多时候明明是命中注定，你不知道，误以为是巧合，另一些时候却明明是巧合，你不知道，误以为是命运，那就不如遇见什么便是什么，自己判断对应，管它是命不是命。</p><hr><p>陆北才仍然刻意避开水手馆，免得遇见亨利哥。他有时候到大佛口候客，最近又常到太原街，那边也有许多日本商店，居芝屋料理，明治理发厅，中本洋服店，丸田金店，一郎茶馆，看名字即知道是由日本人经营，就算不看店名，远远望见装潢已可猜到是日本老板，门面都比华店雅致，明亮，进出的客人也都打扮干净简洁，走路时脚步从容，尤其女人，脚步是小而轻，低头，目光朝地，小心翼翼，不想冒犯任何人。可是在这样的时局里，怎可能不冒犯？存在便是冒犯，每个人是单独的每个人，却又都背负着世界的混乱，以及混乱里的怨怼，人被时代辗碎，再搓揉成团块，像厨房桌上的面粉，无论是否看得见，上面都有手纹的污印。</p><hr><p>来来去去，出出入入，何去何从不管怎么选择都总有理由，只不过有时候是自己不知道，或知道了却不肯承认。而承认了呢，又不见得能被别人接受。甚至有许多选择是否真的由得自己，恐怕也难说，生命仿佛有自己的轨迹，生命的自己比自己的自己更大，更不可掌握。</p><hr><p>有些事有些人，同在世上却互不懂得。他们那类人，我们这类人，是互不靠近的船舶，却在同一个江湖。</p><hr><p>陆北才也不再于课后和姐妹们看街景、谈心事了，她没有叫他留下，他亦没有特别去找理由留下，仿佛把心事累积起来，留着，蓄着，顶着，直到某天，时间对了，场合对了，始让洪水漫堤。秘密有时候是道脆弱的墙，明明踹一脚即可踢倒，却偏偏谁都不肯先有动作，墙便永远矗立。</p><hr><p>“没关系了，其实秘密没你想象的咁重要。知道了就知道了，只不过，守住秘密，本身就很刺激。”</p><hr><p>到先施后，她们进店，陆北才在路边守候，无聊地留意衣冠楚楚的客人进进出出，黄铜色的旋转门逆时针地被推得团团转，这方向入了一个男人，那方向出来一个女人，蓝衣进，红衣出，似舞台上的魔术帽子，丝巾进，白鸽出。一阵沮丧忽然涌上陆北才心头。世上如果真有一道这样的魔术门，日夜朝晚，随时随地，说变身就变身，该有多好。一辈子只能做一种人，或只被容许做一种人，不管是好人坏人，或男人女人，恐怕都是可怕的损失，任你日子过得如何丰富多姿，总有一些被错过的快乐，永远捉摸不到，只能依靠想象，而愈是想象，遗憾愈见强烈。陆北才没法确定是否应该应该伸手触碰，宁可匆匆碰一下，不喜了，才把手撤回。</p><hr><p>喝着茶， 抽着烟，喘着气，陆北才沉默着。木店里摆满桌椅柜，以及高高矮矮的关公雕像，有些着了色，有些是原样，木色深浅有异，但姿势一模一样，右手握持青龙偃月刀，左手微扬捋须怒目圆睁，额前刻着月亮，伫立四周包围着陆北才，明明早已在那里，却似这时候始从四面八方蹦跳出来，有话对他说。店内非常宁静，却仿佛飘浮着无数叱喝，洪亮的声音，像在责备，像在斥骂，像在嘲笑，像在教训，像粤剧舞台台上有人在唱大戏，他听不清楚，只知道有许多双男人的眼睛在盯着他。头渐渐痛，一颗心跳得厉害。半晌，声音戛然而止，店里回复外死寂，关公们仍在看他 。</p><hr><p>恍惚良久，终于睡去，天色转亮之际，陆北才睁眼发现身旁的阿娟仍未醒来，便独自起床走到房外抽烟，抽了几口，随手捡起地上的木头和刨刀，蹲下来，一刀刀地削、割、切。手里的刀动得愈快，世界愈是沉静。锋利的刨刀在木头表面上下磨动，每磨一下，木头即薄一分，一片片木屑被刮起，仿佛时间被刮起，记忆被刮起，一下比一下刨得起劲，把昨夜刮走，把十三岁那年刮走，把往昔的一切刮走，虽然他清楚明白，再如何刨刮，散落地上的碎片依然是木，形体变了，木仍然是木。</p><hr><p>生命就是这样哕，踏出第—步以前，永远唔知道第二步在哪里，踏完第二步，又有了意外的第三步，每—步其实都在迷路，最紧要系自己觉得开唔开心。</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/lpic/s29126758.jpg" alt="《龙头凤尾》"><br><a href="https://book.douban.com/subject/26870405/" target="_blank" rel="noopener">《龙头凤尾》</a><br>作者：马家辉<br>出版社：四川文艺出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《你一生的故事》读书笔记</title>
      <link href="/your-life-clip/"/>
      <url>/your-life-clip/</url>
      
        <content type="html"><![CDATA[<p>思维就是在心里，用内在语言说话。</p><hr><p>人类凭借直观手段发现的物理特性都是某一对象在某一给定时刻所表现出来的属性，诸如运动、速度等概念都是这样。按先后顺序、以因果关系阐述这些事件最方便：一个事件引发另一个事件，一个原因导致一个结果，由此引发连锁反应，事物于是由过去的状态发展到未来的状态。</p> <a id="more"></a><hr><p>再来考虑光的折射，光以一个角度触及水，然后改变其路径。可以从因果关系的角度解释：因为空气与水的折射率不同，所以光改变了路径。<br>这是人类看待世界的方法。如果换一个角度看这个问题：光之所以改变路径，是为了最大限度减少它抵达目的地所耗费的时间。这便是七肢桶看待世界的方法，两种全然不同的解释。<br>可以将物理意义上的宇宙视为一种语言，其语法极度含混。每一个现象都是一种表述，可以从两种截然不同的角度加以阐释，一种是因果角度，一种是目的角度。两种解释角度都是成立的。无论上下文如何，都不会因此失效。<br>当人类和七肢桶的远祖闪现出第一星自我意识的火花时，他们眼前是同一个物理世界，但他们对世界的感知理解却走上了不同的道路，最后导致了全然不同的世界观。人类发展出前后连贯的意识模式，而七肢桶却发展出同步并举式的意识模式。我们依照先后顺序来感知事件，将各个事件之间的关系理解为因与果。它们则同时感知所有事件，并按所有事件均有目的的方式来理解它们，有最小目的，也有最大目的。</p><hr><p>你安静下来时好像会发出一种光。如果有人要替这时的你画一幅像，我会坚决要求他画上这轮光晕。可要是不高兴起来，你简直成了个小喇叭，全部身体构造好像都是有意用来发出噪声。你这种时候的画像就是一个警报喇叭，熊熊烈火中的警报喇叭。</p><hr><p>自由并不是一种虚幻的假象，在先后顺序模式的意识中，它的的确确是真实的存在。在同步并举式的意识中，自由这种观念却没有多大意义，但同时也不存在“被迫”。两种意识不一样，仅此而已。这就好像在哈哈镜前，看不见照镜子的人，只能看到镜中形象。镜中出现的也许是个绝代佳人，也许是个鼻子上长着大瘤子的小丑，下巴长到胸口。两种形象都是合理的阐释，没有对错可言。但是，镜子中一次只有一个形象，你无法同时看到两个。<br>与此相类，预知未来又与自由意志产生了矛盾。正因为能够自由选择，所以我不可能预知未来。反过来说，如果我已经知道了未来，我便不可能反抗这个既定的命运，也不可能把我知道的未来告诉其他人——这也是一种形式的反抗。预知未来的人不会奢谈未来，读过岁月之书的人不会承认自己读过它。</p><hr><p>外交官讲的是人类的道德信仰，极力宣扬人类的利他主义，希望以此为今后的谈判作好铺垫。这场对话的结果七肢桶们知道得一清二楚，但还是积极参与，非常热心。<br>如果我试图对某个不曾预知这一切的人谈起这些事，他一定会问，要是七肢桶事先早已知道它们会说什么，会听到什么，为什么还要白费唇舌浪费语言？这是一个合乎情理的问题。但问题是，语言不仅仅是一种交流工具，也是一种行动。按照语言—行为理论，诸如“你被逮捕了”、“我将这艘船命名为……”、“我保证”这些语词，其本身就是行为，仅当发出这些语词之后行为才算完成——话一出口，行为即成。对于这些行为而言，预先知道会说出什么话并没有什么关系。婚礼上人人都知道会有一句“我现在宣布你们结为夫妻”，这无关紧要。重要的是主婚人说出这一句话。没有这句话，单有其他仪式是不行的。对于述行语词而言，说话就是行动。<br>对于七肢桶来说，所有说出口的话都是行为性的。它们所说的话不是用来交流思想，而是用来完成行为。无论什么对话，七肢桶全都事先知道双方会说些什么，这是事实。但为了让它们所知的对话变为真正的事实，对话仍然必须进行。</p><hr><p>从一开始我就知道结局，我选定了自己要走的路，也就是未来的必经之路。我循路而前，满怀喜悦，也许是满怀痛苦。我的未来，它究竟是最小化，还是最大化？</p><hr><p>以上摘自：<br><img src="https://img5.doubanio.com/lpic/s29091196.jpg" alt="《你一生的故事》"><br><a href="https://book.douban.com/subject/26868098/" target="_blank" rel="noopener">《你一生的故事》</a><br>作者：[美] 特德 · 姜（Ted Chiang）<br>译者: 李克勤 / 王荣生 / 姚向辉<br>出版社：译林出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo Next 扩展标签说明书</title>
      <link href="/tag-plugins-of-theme-next/"/>
      <url>/tag-plugins-of-theme-next/</url>
      
        <content type="html"><![CDATA[<p>之前调试 Next 的时候看到官方文档中关于 Next 主题内置标签的介绍。在此进行摘录，以备之后方便查找。</p><h1 id="块引用标签"><a href="#块引用标签" class="headerlink" title="块引用标签"></a>块引用标签</h1><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> 作者, 出处 https://yhyy135.github.io/ 出处链接 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">这是一个优雅的块引用</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>这是一个优雅的块引用</p><footer><strong>作者, 出处</strong><cite><a href="https://yhyy135.github.io/" target="_blank" rel="noopener">出处链接</a></cite></footer></blockquote><a id="more"></a><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><h3 id="原版块引用"><a href="#原版块引用" class="headerlink" title="原版块引用"></a>原版块引用</h3><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">这是原版块引用，没有什么新意</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>这是原版块引用，没有什么新意</p></blockquote><h3 id="书籍引用"><a href="#书籍引用" class="headerlink" title="书籍引用"></a>书籍引用</h3><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> 刘慈欣, 三体 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">失去人性，失去很多，失去兽性，失去一切。</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>失去人性，失去很多，失去兽性，失去一切。</p><footer><strong>刘慈欣</strong><cite>三体</cite></footer></blockquote><h3 id="Twitter-引用"><a href="#Twitter-引用" class="headerlink" title="Twitter 引用"></a>Twitter 引用</h3><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> @yhyy135 https://twitter.com/yhyy135/status/799960207728132096 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">現在的吃，首先是用眼睛來吃，並且很有可能根本是種和視覺相關的感官活動。</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>現在的吃，首先是用眼睛來吃，並且很有可能根本是種和視覺相關的感官活動。</p><footer><strong>@yhyy135</strong><cite><a href="https://twitter.com/yhyy135/status/799960207728132096" target="_blank" rel="noopener">twitter.com/yhyy135/status/799960207728132096</a></cite></footer></blockquote><h3 id="网文引用"><a href="#网文引用" class="headerlink" title="网文引用"></a>网文引用</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http://sethgodin.typepad.<span class="keyword">com</span>/seths_blog/<span class="number">2009</span>/<span class="number">07</span>/welcome-<span class="keyword">to</span>-island-marketing.html Welcome <span class="keyword">to</span> Island Marketing %&#125;</span><br><span class="line">Every interaction <span class="keyword">is</span> both precious <span class="built_in">and</span> <span class="keyword">an</span> opportunity <span class="keyword">to</span> delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote><h1 id="代码块标签"><a href="#代码块标签" class="headerlink" title="代码块标签"></a>代码块标签</h1><h2 id="原版代码块"><a href="#原版代码块" class="headerlink" title="原版代码块"></a>原版代码块</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">alert('Hello World!');</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">alert</span>(<span class="string">'Hello World!'</span>);</span><br></pre></td></tr></table></figure><h2 id="特定语言代码块"><a href="#特定语言代码块" class="headerlink" title="特定语言代码块"></a>特定语言代码块</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> JavaScript %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">var a = 'Hello World!';</span></span><br><span class="line"><span class="xml">console.log(a);</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><figure class="highlight less"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">alert</span>(<span class="string">'Hello World!'</span>);</span><br></pre></td></tr></table></figure><h2 id="添加描述的代码块"><a href="#添加描述的代码块" class="headerlink" title="添加描述的代码块"></a>添加描述的代码块</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> 这里就是描述代码的废话 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">array.map(callback[, thisArg])</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>这里就是描述代码的废话</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">array</span>.<span class="built_in">map</span>(callback[, thisArg])</span><br></pre></td></tr></table></figure><h2 id="添加描述和链接的代码块"><a href="#添加描述和链接的代码块" class="headerlink" title="添加描述和链接的代码块"></a>添加描述和链接的代码块</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> HelloWorld PHP https://yhyy135.github.io/ 请戳这里 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?php</span></span></span></span><br><span class="line"><span class="xml">echo "Hello World!";</span></span><br><span class="line"><span class="xml">echo "PHP is the best programming language!";</span></span><br><span class="line"><span class="xml"> ?&gt;</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><figcaption><span>HelloWorld PHP</span><a href="https://yhyy135.github.io/" target="_blank" rel="noopener">请戳这里</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Hello World!"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"PHP is the best programming language!"</span>;</span></span><br><span class="line"><span class="php"> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h1><h2 id="jsFiddle-代码块"><a href="#jsFiddle-代码块" class="headerlink" title="jsFiddle 代码块"></a>jsFiddle 代码块</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Gist-代码块"><a href="#Gist-代码块" class="headerlink" title="Gist 代码块"></a>Gist 代码块</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% gist [gist_id] [filename] %&#125;</span><br></pre></td></tr></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% iframe [url] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] [/path/to/image] [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% include_code [title] [<span class="keyword">lan</span><span class="variable">g:language</span>] path/<span class="keyword">to</span>/<span class="keyword">file</span> %&#125;</span><br></pre></td></tr></table></figure><h2 id="YouTube-视频"><a href="#YouTube-视频" class="headerlink" title="YouTube 视频"></a>YouTube 视频</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% youtube [video_id] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Vimeo-视频"><a href="#Vimeo-视频" class="headerlink" title="Vimeo 视频"></a>Vimeo 视频</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% vimeo [video_id] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Include-Posts"><a href="#Include-Posts" class="headerlink" title="Include Posts"></a>Include Posts</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_path</span> slug %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_link</span> slug [title] %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="Include-Assets"><a href="#Include-Assets" class="headerlink" title="Include Assets"></a>Include Assets</h2><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_path</span> slug %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_img</span> slug [title] %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_link</span> slug [title] %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="源文本"><a href="#源文本" class="headerlink" title="源文本"></a>源文本</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> raw </span>%&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>部署Hexo到VPS</title>
      <link href="/how-to-deploy-hexo-to-vps/"/>
      <url>/how-to-deploy-hexo-to-vps/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最早接触 Hexo 的时候，是通过 Github Pages 进行搭建的，后来遂琢磨着如何才能将博客部署到属于自己 VPS 上去。早前曾尝试过一次，磕磕绊绊，最终卡在了 VPS 部署 Git Hook 的步骤上。<br>经过一段时间的积累，对 Linux 和相关命令行操作有了粗浅的认识，最近再次尝试 VPS 部署 Hexo 博客，操作起来流畅了很多，也很快搭建成功。打算把这个过程记录下来。<br>下文是基于 Ubuntu 进行搭建的，CentOS 搭建过程基本一致，只需将安装程序的 <code>apt-get</code> 命令换成 <code>yum</code> 命令即可。文中 <code>$</code> 后均为执行的命令，<code>#</code> 后均为注释，<code>&lt;IP地址&gt;</code> 均为 VPS 的 IP 地址</p><a id="more"></a><h1 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h1><ol><li>安装 Git</li><li>安装 Node.js</li><li><p>运行 <code>Git Bash</code> 或 <code>CMD</code>：</p> <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global user.email <span class="string">"&lt;邮箱&gt;"</span></span><br><span class="line">$ git<span class="built_in"> config </span>--global user.name <span class="string">"&lt;用户名&gt;"</span></span><br><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"&lt;邮箱&gt;"</span>  #默认全部设置最终生成 ssh 密钥 id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>在 <code>%userprofile%/.ssh/</code> 文件夹下（也就是生成公钥的文件夹）创建 <code>config</code> 文件，输入如下内容：</p> <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Blog</span></span><br><span class="line">Host &lt;IP地址&gt;</span><br><span class="line">HostName &lt;IP地址&gt;</span><br><span class="line">User git</span><br><span class="line">Port &lt;SSH端口&gt;              #默认为 22</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></li></ol><p>p.s. Hexo 本地部署相关教程可参考 <a href="/hello-hexo/">Hello Hexo</a>，Git 相关教程可参考 <a href="/how-to-use-git/">Git 简明教程</a></p><h1 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ apt-<span class="builtin-name">get</span> update           #更新 apt-<span class="builtin-name">get</span> 源</span><br><span class="line">$ apt-<span class="builtin-name">get</span><span class="built_in"> upgrade </span>-y       #升级已有软件</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install libpcre3 libpcre3-dev openssl libssl-dev g++ build-essential git -y    #安装各种程序和依赖</span><br><span class="line">$ adduser git              #密码自己设置，其他可选空</span><br><span class="line">$ chmod 740 /etc/sudoers   #变更用户权限设置文件权限</span><br><span class="line">$ vi /etc/sudoers          #编辑用户权限设置文件</span><br></pre></td></tr></table></figure><p>在 <code>/etc/sudoers</code> 文件的用户权限部分添加 <code>git</code> 用户权限：<br><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line"><span class="attribute">root</span>    <span class="literal">ALL</span>=(<span class="literal">ALL</span>)     <span class="literal">ALL</span>             #原有部分</span><br><span class="line"><span class="attribute">git</span>     <span class="literal">ALL</span>=(<span class="literal">ALL</span>)     <span class="literal">ALL</span>             #添加部分</span><br></pre></td></tr></table></figure></p><p>保存并退出编辑，并还原用户权限设置文件权限：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ chmod <span class="number">440</span> <span class="regexp">/etc/</span>sudoers</span><br></pre></td></tr></table></figure></p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">$ useradd www -s <span class="string">/sbin/nologin</span> -M            <span class="comment">#添加用户 www 并禁止 SSH 登录</span></span><br><span class="line">$ mkdir -p <span class="string">/data/software/</span>                   <span class="comment">#建立一个放各种软件的目录</span></span><br><span class="line">$ <span class="keyword">cd</span> <span class="string">/data/software/</span>                         <span class="comment">#进入目录</span></span><br><span class="line">$ wget http:<span class="string">//nginx.org/download/nginx-1.10.1.tar.gz</span>    <span class="comment">#下载 Nginx 软件包</span></span><br><span class="line">$ tar zxvf nginx-1.10.1.tar.gz                          <span class="comment">#解压</span></span><br><span class="line">$ <span class="keyword">cd</span> nginx-1.10.1                                       <span class="comment">#进入目录</span></span><br><span class="line">$ <span class="string">./configure</span> <span class="params">--user=www</span> <span class="params">--group=www</span> <span class="params">--prefix=/usr/local/nginx</span> <span class="params">--with-http_stub_status_module</span> <span class="params">--with-http_ssl_module</span>   <span class="comment">#配置编译</span></span><br><span class="line">$ make                                                  <span class="comment">#编译</span></span><br><span class="line">$ make install                                          <span class="comment">#安装</span></span><br></pre></td></tr></table></figure><p>检查 Nginx 是否安装成功：<br><figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">$ ll /usr/local/nginx/</span><br><span class="line">total 24</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Dec <span class="number"> 5 </span>14:48 conf/       <span class="comment">#显示结果</span></span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Dec <span class="number"> 5 </span>14:48 html/       <span class="comment">#显示结果</span></span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Dec <span class="number"> 5 </span>14:48 logs/       <span class="comment">#显示结果</span></span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root<span class="number"> 4096 </span>Dec <span class="number"> 5 </span>14:48 sbin/       <span class="comment">#显示结果</span></span><br></pre></td></tr></table></figure></p><p>Nginx 安装到此完成</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>仅仅安装是远远不够的，还需要测试一下是否配置正常并启动 Nginx：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -t         #启动前检查配置文件语法</span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok    #显示结果</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful  #显示结果</span><br><span class="line"></span><br><span class="line">$ /usr/local/nginx/sbin/nginx            #启动 Nginx</span><br><span class="line"></span><br><span class="line">$ lsof -i :80                            #查看 nginx 服务对应的端口是否成功启动</span><br><span class="line">COMMAND   PID<span class="built_in"> USER </span>  FD  <span class="built_in"> TYPE </span>DEVICE SIZE/OFF NODE NAME</span><br><span class="line">nginx   34317 root    6u  IPv4  39180      0t0  TCP *:http (LISTEN)     #显示结果</span><br><span class="line">nginx   34318  www    6u  IPv4  39180      0t0  TCP *:http (LISTEN)     #显示结果</span><br><span class="line"></span><br><span class="line">$ netstat -lntup | grep 80                #查看 80 端口的设置</span><br><span class="line">tcp     0     0 0.0.0.0:80     0.0.0.0:*     LISTEN     34317/nginx     #显示结果</span><br></pre></td></tr></table></figure></p><p>使用 Web 方式访问本机的外网 IP 时显示如下图：</p><p><img src="https://ooo.0o0.ooo/2016/11/15/582ad4c8c3e6d.png" alt="Nginx 初始界面"></p><p>如上图正常显示，则表示 Nginx 已成功安装并能正常使用</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h4><p>Nginx 的主配置文件为 <code>/usr/local/nginx/conf/nginx.conf</code>，其配置<strong>详细含义</strong>如下：<br><figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">worker_processes  1;                              <span class="comment">#worker进程的数量</span></span><br><span class="line"><span class="keyword">events</span> &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;                     <span class="comment">#每个worker进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">http</span> &#123;</span><br><span class="line">    <span class="literal">include</span>       mime.types;                     <span class="comment">#nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认的媒体类型</span></span><br><span class="line">    sendfile        on;                           <span class="comment">#开启高效传输模式</span></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;                        <span class="comment">#连接超时</span></span><br><span class="line"></span><br><span class="line">    server &#123;                                      <span class="comment">#第一个server区块，</span></span><br><span class="line">                                                   表示一个独立的虚拟主机站点</span><br><span class="line">        listen       <span class="number">80</span>;                          <span class="comment">#提供服务的端口，默认80</span></span><br><span class="line">        server_name  localhost;                   <span class="comment">#提供服务的域名主机名</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            <span class="literal">root</span>   html;                          <span class="comment">#站点的根目录</span></span><br><span class="line">            index  index.html index.htm;          <span class="comment">#默认的首页文件，多个用空格分开</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">error_page</span>   500 502 503 504  /50x.html;  <span class="comment">#出现对应的http状态码时，使用50x.html回应客户</span></span><br><span class="line">        location = /50x.<span class="keyword">html</span> &#123;                    <span class="comment">#location区块，访问50x.html</span></span><br><span class="line">            <span class="literal">root</span>   html;                          <span class="comment">#指定对应的站点目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="规范配置文件"><a href="#规范配置文件" class="headerlink" title="规范配置文件"></a>规范配置文件</h4><p>一般来说，为了便于各虚拟主机的管理，我们将所有虚拟主机的自配置文件会统一放入 <code>vhost</code> 目录中，并在 Nginx 的主配置文件中添加配置 <code>include vhost/*.conf;</code> 来使 <code>vhost</code> 目录中的虚拟主机的自配置文件加载进来。公共的配置项写在主配置文件中，各虚拟主机的自配置文件则用于差异化，比如规定虚拟主机配置的网站域名或功能取名等等。</p><p>先编辑主配置文件 <code>/usr/local/nginx/conf/nginx.conf</code> ：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">""</span> &gt; /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf      <span class="comment">#清空配置文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf             <span class="comment">#编辑主配置文件</span></span></span><br></pre></td></tr></table></figure></p><p>内容如下：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> vhost/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如下提供一个 host 为 VPS &lt;IP地址&gt; 的虚拟主机的配置文件 <code>/usr/local/nginx/conf/vhost/&lt;IP&gt;.conf</code> 的规范化模板，仅供参考：<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">$ mkdir vhost                                     <span class="meta">#新建 vhost 目录</span></span><br><span class="line">$ vi <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>conf<span class="meta-keyword">/vhost/</span><span class="params">&lt;IP地址&gt;</span>.conf    <span class="meta">#编辑子配置文件</span></span><br></pre></td></tr></table></figure></p><p>内容如下：<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        <span class="section">listen</span>       <span class="number">80</span>;</span><br><span class="line">        server_name  &lt;IP地址&gt;;</span><br><span class="line">        root /data/web/&lt;IP地址&gt;/;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        access_log  logs/access.log main;</span><br><span class="line">        error_page   <span class="number">404</span>  /<span class="number">404.</span>html;</span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">$ <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>sbin/nginx -t         <span class="meta">#检查配置文件语法，报错说明配置文件语法有误</span></span><br><span class="line"><span class="symbol">nginx:</span> the configuration file <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>conf/nginx.conf syntax is ok    <span class="meta">#显示结果</span></span><br><span class="line"><span class="symbol">nginx:</span> configuration file <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>conf/nginx.conf test is successful  <span class="meta">#显示结果</span></span><br><span class="line"></span><br><span class="line">$ <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>sbin/nginx -s reload      <span class="meta">#重启 Nginx，使配置文件生效</span></span><br><span class="line">$ mkdir <span class="meta-keyword">/data/</span>web &amp;&amp; cd <span class="meta-keyword">/data/</span>web            <span class="meta">#新建 web 目录用于 Web 访问</span></span><br><span class="line">$ mkdir <span class="params">&lt;IP地址&gt;</span> &amp;&amp; cd <span class="params">&lt;IP地址&gt;</span>               <span class="meta">#新建虚拟主机对应的 Web 目录</span></span><br><span class="line">$ chown git:git -R <span class="params">&lt;IP地址&gt;</span>                  <span class="meta">#授权给 git 该目录权限</span></span><br></pre></td></tr></table></figure><h2 id="设置-Hexo-对应的-Git-仓库"><a href="#设置-Hexo-对应的-Git-仓库" class="headerlink" title="设置 Hexo 对应的 Git 仓库"></a>设置 Hexo 对应的 Git 仓库</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> su git                           <span class="comment">#切换到 git 用户</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~                             <span class="comment">#进入用户根目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir .ssh &amp;&amp; <span class="built_in">cd</span> .ssh            <span class="comment">#新建并进入 .ssh 目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch authorized_keys            <span class="comment">#新建 authorized_keys 文件用于识别 ssh 访问者身份</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi authorized_keys               <span class="comment">#复制粘贴 Windows 的 %userprofile%/.ssh/id_rsa.pub 文件内容</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~                             <span class="comment">#进入用户根目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir hexo.git &amp;&amp; <span class="built_in">cd</span> hexo.git    <span class="comment">#新建并进入 hexo.git 目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init --bare                  <span class="comment">#初始化仓库</span></span></span><br></pre></td></tr></table></figure><p>在 <strong>Windows</strong> 的 <code>Git Bash</code> 或 <code>CMD</code> 中输入 <code>ssh git@&lt;IP地址&gt;</code>, 显示如下则表示设置成功：<br><figure class="highlight vhdl"><table><tr><td class="code"><pre><span class="line">Are you sure you want <span class="keyword">to</span> continue connecting (yes/no)? yes</span><br><span class="line"><span class="literal">Warning</span>: Permanently added '<span class="number">45.76</span>.<span class="number">211.104</span>' (ECDSA) <span class="keyword">to</span> the list <span class="keyword">of</span> known hosts.</span><br><span class="line">Welcome <span class="keyword">to</span> Ubuntu <span class="number">14.04</span>.<span class="number">5</span> LTS (GNU/Linux <span class="number">3.13</span>.<span class="number">0</span>-<span class="number">100</span>-<span class="keyword">generic</span> x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br><span class="line"><span class="keyword">New</span> <span class="keyword">release</span> '<span class="number">16.04</span>.<span class="number">1</span> LTS' available.</span><br><span class="line">Run <span class="symbol">'do</span>-<span class="keyword">release</span>-upgrade' <span class="keyword">to</span> upgrade <span class="keyword">to</span> it.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The programs included <span class="keyword">with</span> the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms <span class="keyword">for</span> each program are described <span class="keyword">in</span> the</span><br><span class="line">individual files <span class="keyword">in</span> /usr/share/doc<span class="comment">/*/copyright.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span></span><br><span class="line"><span class="comment">applicable law.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">git@vultr:~$                       #这里表示 SSH 成功登录 VPS</span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> su git                          <span class="comment">#切换到 git 用户</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /home/git/hexo.git/hooks     <span class="comment">#进入仓库的钩子目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi post-receive                 <span class="comment">#编辑钩子设置转发，实现仓库内容同步到 Web 目录</span></span></span><br></pre></td></tr></table></figure><p>编辑内容如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">GIT_REPO=/home/git/hexo.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/hexo</span><br><span class="line">PUBLIC_WWW=/data/web/&lt;IP地址&gt;</span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br></pre></td></tr></table></figure></p><p>授权 <code>post-receive</code> 文件可执行权限：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>chmod +x post-receive</span><br></pre></td></tr></table></figure></p><h1 id="Hexo-发布到-VPS"><a href="#Hexo-发布到-VPS" class="headerlink" title="Hexo 发布到 VPS"></a>Hexo 发布到 VPS</h1><p>修改 hexo 配置文件：<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> git@<span class="params">&lt;IP地址&gt;</span>:hexo.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure></p><p>发布时进入 Windows 中 hexo 目录，<code>CMD</code> 或 <code>Git Bash</code> 运行发布命令即可：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo d</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> 命令行 </tag>
            
            <tag> Windows </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《纳粹德国的腐败与反腐》读书笔记</title>
      <link href="/corruption-and-anti-corruption-in-nazi-germany-clip/"/>
      <url>/corruption-and-anti-corruption-in-nazi-germany-clip/</url>
      
        <content type="html"><![CDATA[<h3 id="极权体制下的纳粹腐败和反腐"><a href="#极权体制下的纳粹腐败和反腐" class="headerlink" title="极权体制下的纳粹腐败和反腐"></a>极权体制下的纳粹腐败和反腐</h3><p>英国历史学家理查德·格伦伯格在《十二年帝国：纳粹德国的社会史，1933—1945》一书中写道：“腐败实际上是第三帝国的组织原则。但是大多数德国公民们却不仅忽视了这个事实，而且还确实把新政权的人物当作是在严格地奉行道德廉洁。”纳粹是以严厉抨击和反对魏玛共和国腐败来获得道德号召力的，它“把民主即腐败的信念植入了德国人的集体意识之中”，但是，与纳粹自己的腐败相比，“魏玛时期的那些丑闻不过是政体的小小污点而已”。[1]</p><p>[1]Richard Grunberger, The 12-Year Reich：A Social History of Nazi Germany 1933-1945.NewYork：Holt, Rinehart and Winston，1971，p.90.</p><a id="more"></a><hr><h3 id="1933年后对“老战士”的“补偿”；对党员的庇护和赞助"><a href="#1933年后对“老战士”的“补偿”；对党员的庇护和赞助" class="headerlink" title="1933年后对“老战士”的“补偿”；对党员的庇护和赞助"></a>1933年后对“老战士”的“补偿”；对党员的庇护和赞助</h3><p>第三帝国，“补偿”、提携同党与有组织的任人唯亲绝非纳粹统治初期的过渡现象，也绝不是仅限于所谓的“老帝国”境内。在1938年德奥合并之后，这些现象在奥地利同样愈演愈烈。按照“奥地利回归德意志帝国事务特别专员”约瑟夫·比克尔的说法，“奥斯特马克”[18]的党员有着特别强烈的“补偿情结”。这一方面表现在暴力横行的无政府主义行动、劫掠、“疯狂”征用和侵占——这些现象在1938年初是很典型的。</p><p>[18]即奥地利。从1918年3月德奥合并至1939年，其仍然保留“奥地利”的名称，随后改称“奥斯特马克”至1942年，最后改称“阿尔卑斯与多瑙帝国行省”。德文中“奥地利”有“东方帝国”的意思，“奥斯特马克”的字面意思是“东方边疆区”。</p><hr><p>很多企业被纳粹党人占据和劫掠，犹太人和反对派的巨额财产遭到“疯狂”侵占。1938年初夏，经济与劳工部建立了“财产流通办公室”，纳粹党也组建了各式各样的职业介绍和补偿机关，把毫无法纪的个人的中饱私囊引导为有组织的庇护提携，这与“老帝国”的种种现象如出一辙：“国社党的有功之臣”得到安置，纳粹党员得到条件有利的贷款，犹太人的企业被分配给党员，再加上“雅利安化贷款”，以及所有政府许可企业（如烟草商店、彩票销售点、电影院等）系统性的对党员的优待。另外，“老战士”们还能得到金钱奖励，帝国财政部为此提供了2000万帝国马克。总的来讲，奥地利的“补偿”显露出的真面目是“微妙的报复行动”；对党员的庇护和财产再分配比在“老帝国更加彻底和严格”，尽管奥地利纳粹党人对此的解释，即对所谓“在共和国期间为了党的事业而遭受的损失”进行补偿，和在“老帝国”几乎是一模一样的。</p><hr><p>党的活跃分子们并不因自己得到庇护和赞助而感到羞耻，反而大声疾呼为自己索取“补偿”。甚至于有纳粹党干部因为没有兑现向下属做出的安排工作和提拔的诺言，而被告上纳粹党的党内法庭。1939年8月，汉堡救济部门的一名职员在纳粹党最高法庭如此控告国务秘书格奥尔格·阿伦斯：“因此，我要求，1936年8月向年资较老的党员做出的改善待遇的诺言，也应当向我本人兑现；并且，自1936年秋季以来，我因为没有得到提升而损失的薪酬，也应当补偿给我。”虽然群众对“老战士”得到的优待显然十分不满，但“老战士”们往往对自己的物质特权贪得无厌。国家警察部门报告称，有些“老战士”提出，对岗位和职务的分配应当仅与入党时间挂钩。这些人普遍相信，“老战士对任何部门的工作都是称职的，尤其是，公务机关的领导岗位并不需要专业知识”。这种完全无视个人才干的欲壑难填的心态，即便是在第三帝国的环境下也无法得到满足。虽然纳粹党极力促进党员的利益，但并非所有党员都对自己得到的待遇感到满意。这并不是因为党没有努力去照顾他们，而是因为他们的期望值和要求实在是太高了。而这样的期望值和要求也恰恰是纳粹党自身在其追随者中唤醒和促进的。</p><hr><p>社会学家特奥多尔·盖格尔早在1932年就指出，在纳粹党人的“理想主义”宣传的光辉外表背后，藏匿着一种没有理想的理想主义，并没有把物质上的贪婪掩饰好。纳粹党人的基本态度是“绝非理想主义的”，而是“极端的经济和物质主义的”：“他们没有克服经济的、物质主义的心态，而是遮蔽着自己的物质主义。”</p><hr><h3 id="集中营系统与腐败"><a href="#集中营系统与腐败" class="headerlink" title="集中营系统与腐败"></a>集中营系统与腐败</h3><p>社会民主党流亡理事会的报告指出，纳粹组织内某些犯有前科的人在一个单位犯下贪腐罪行，然后为了躲避侦查就逃之夭夭，随后又混入另一个单位，再次贪赃枉法。当时民间有句流传很广的话，描述的就是这种怪现状：“没有两次贪污或诈骗前科的人，当不了财务总管。”直到1937年之后，贪腐案件的数量才慢慢减少。</p><hr><p>接受德意志劳工阵线贿赂的还有党卫军少将克里斯蒂安·韦伯，他担任慕尼黑县议会主席、纳粹党议员和“国家社会主义运动之都”的“经济委员”。韦伯被人称为“慕尼黑的福斯塔夫23”，算是最腐化的纳粹党人之一。他的“克里斯蒂安·韦伯盛宴”穷奢极侈，光是慕尼黑市政府就为此支付了1000万帝国马克。韦伯让德意志劳工阵线临时主管卡尔掏钱，给他的宅邸建造了一个“狩猎纪念品陈列室”和一个“男主人书房”，还给慕尼黑—里姆的跑马比赛捐献了一座银奖杯。尽管韦伯收入颇丰——作为县议会主席，他能从慕尼黑市政府拿到7.2万帝国马克；经济委员的薪水是7万帝国马克；从希特勒那里拿到5万帝国马克的赠礼；从慕尼黑市政府还能领取25300帝国马克的“荣誉奖金”——但他居然让卡尔来支付自己宅邸“修理电铃导线”的区区1.5帝国马克！韦伯的所作所为很有代表性，富丽堂皇的外表和中饱私囊的贪欲竟与极度的吝啬如影随形。他对德意志劳工阵线临时主管作了这样的解释：“今天的国家，是我参与建设起来的。那么国家就相当于我自己的公司，因此大可以坦然地接受礼物。”</p><hr><p>德意志劳工阵线的出纳员哪怕是贪污了一点点钱也会被移交法庭，而政府高官们却在希特勒和莱伊的许可下疯狂敛财，而这财富的最终来源还是纳粹各组织内缴纳会员费的广大会员。因此，纳粹组织内部的腐败在道德上有着双重标准，这再一次清楚地证明，希特勒身边环境中的关系网是多么腐化堕落和纠缠不清。</p><hr><p>纳粹精英阶层的生活方式还包括如痴似狂的艺术品收藏活动。按照美国历史学家乔纳森·彼得罗普洛斯的说法，这不是因为他们真的热爱艺术，而是由于“个人和集体的自恋”，因为陈设在显眼位置的“古代大师”名画能够彰显其所有者的富裕和权势。这方面就能看出希特勒在纳粹统治集团至高无上的地位：几乎所有纳粹领导人都唯命是从地效仿他那种重古薄今的艺术趣味；在每年“大德意志艺术展”的“采购闲逛”上，元首总是享有优先购买权；对掠夺来的艺术品的支配也明确地属于元首的专有特权。希特勒光是“古代大师”名画就拥有五千多幅。筹备中的位于林茨的“元首博物馆”一旦落成，能够展出的艺术品数量将是巴黎卢浮宫的四倍。</p><hr><p>一方面是腐败的侵吞手段，一方面是大多数艺术藏品暧昧不清的地位。它们既装点着纳粹领导人的官邸，也装饰着他们的私宅。用来购买艺术品的资金往往既有国家财政，也有私人资金，或捐款，以及可疑的私人特别基金。用国家财政的钱买来的画作常常被轻易送人，于是就变成了私人所有。这种礼物要显示出主人的权势和高雅的生活方式，但最主要的还是加强纳粹统治集团内部的关系。因此，希特勒不仅从下属那里收受艺术品礼物，也向他人赠送艺术品，以收买人心。<br>这种附庸风雅行为的一个奇怪方面是，甚至连马丁·鲍曼和罗伯特·莱伊这样的雇用兵一般的大老粗也购买了大量艺术品，因为他们要对希特勒亦步亦趋、上行下效，而且深知艺术品收藏在纳粹权力体制中作为身份象征的重要意义。希特勒似乎想要讽刺下属附庸风雅的行为，于是在罗伯特·莱伊生日时赠送给他一幅汉斯·格吕茨纳的画作，这幅画与德意志劳工阵线全国领袖的本性及其公众形象倒是颇为相符。这幅画的标题是《狂饮的僧侣》[25]。</p><p>[25]罗伯特·莱伊是有名的酗酒狂徒。</p><hr><p>第三帝国的腐败的典型元素在劳改营、战俘营和集中营系统也很普遍，尤其是集中营，几乎是整个腐败体制的缩影。集中营发生严重腐败的最重要的结构原因早在纳粹统治初年就已经出现了，一个个集中营被作为不受外界监管的隔绝空间建立起来：集中营既不受普通行政机关管辖，也不听从传统政府当局的领导，因此集中营的财务完全不受国家财政监管体制的影响，况且集中营完全不受司法部门的控制，与公众之间也是隔绝的。</p><hr><p>早期集中营的看守人员往往是无业的纳粹党活跃分子和街头打手，他们的特点是既残暴野蛮，又贪婪腐化。集中营事务总监特奥多尔·艾克在给党卫军全国领袖海因里希·希姆莱的一封信中写道，达豪集中营的第一批看守人员是“120人的腐败警卫队”，最突出的特点就是“贪污腐化”。犯人进入集中营时带来的贵重物品以及其家属寄来的钱和包裹都会被看守私吞掉。党卫军看守利用犯人来“搜罗”物资，来满足他们的私人需求，还利用集中营的现有设施，比如木工作坊，来为自己打造家具陈设。关于里希腾堡集中营的一份报告指出，“绝大部分看守都肆无忌惮地中饱私囊，不这么做的人是极少数，而且越来越少”。</p><hr><p>汉斯·洛里茨于1936至1939年担任达豪集中营指挥官，1940至1942年担任萨克森豪森集中营指挥官。他无论是在集中营内，还是在外界，都过着骄奢淫逸的生活。比如，萨克森豪森集中营的防空洞里设有一座“日耳曼式的啤酒酒窖”、两条保龄球道和一套打靶设施，以便让指挥官大人在躲避空袭期间消遣。党卫军内部把这些设施称为“游乐场”。洛里茨命令囚犯在沃尔夫冈湖畔圣格尔根给自己建造了一座豪华别墅。当年的一位犯人就此报告称：“洛里茨享受着自己的地位带来的所有好处。他让人从萨克森豪森集中营向圣格尔根送去了四辆卡车的炼砖和木材。有犯人为他创作油画；犯人给他编织了大约60幅地毯；还给他制作皮制灯罩、洗衣篮、桌子、编织沙发、带白银装饰手柄的镇纸、精美的牙签；另外还有三扇窗户的铸铁栅栏，光是这个就让四名犯人干了两个半月。”</p><hr><p>在1942年的一次大规模人事变动中，大约三分之一的集中营指挥官被替换，前文所述的三名指挥官洛里茨、皮奥尔科夫斯基和科赫也丢了乌纱帽。腐败虽然是很多指挥官被撤职的原因之一，但不是决定性的原因。更重要的是，集中营的功能发生了变化，转换为利用犯人为战争经济服务。经历过“斗争年代”的老指挥官们不再适应这一新职能，因为他们的领导作风就是残暴、腐化和酗酒。另外，腐败不是将这些人撤职的理由，而是因为，这些指挥官的豪华别墅和黑市买卖过于张扬，有将集中营的秘密暴露给公众的危险。</p><hr><p>在党卫军全国领袖看来，腐败行为危及了党卫军的道德准则，阻碍了他在党卫军内部将大屠杀和“正直”和谐起来的努力。按照他的逻辑，如果一名大屠杀凶手在杀人时完全是无私地执行自己的义务，而不谋求私利，那么他也可以说自己是个正直的人。但与此同时，希姆莱从来不会让他自己的这种道德观牵着鼻子走，而是同样考虑实效和权力政治方面的因素，因此他对反腐调查的态度显然是摇摆不定的。但雪崩般大爆发的众多腐败案件也清楚地证明，希姆莱扭曲的意识形态的“正直”观念完全脱离了党卫军的实际。</p><hr><p>卡琳·奥尔特在对党卫军集中营的研究中指出，“正直”的观念建构对一部分集中营指挥官来说，是他们的自我认识的一个核心部分。正是由于将自己与科赫这样的腐化指挥官划清界线，他们才能忠于希姆莱的理想，更加坚决果断和冷酷无情地按照党卫军的世界观基本原则行事。这是毫无疑问的，尽管这种“正直”形象的背后隐藏着一种事后的自我粉饰。在1945年后的调查和审讯过程中，党卫军人员的这种自我涂脂抹粉是一种辩护策略，起到了很大作用。但即便用希姆莱观念中的“正直”的指挥官来取代科赫这样的腐败高官，也仍然无法根除集中营中的腐败，因为腐败的体制原因仍然存在。因此，丝毫不奇怪的是，党卫军法官摩根在1944年6月，也就是腐败的指挥官皮奥尔科夫斯基被撤职两年后，在达豪集中营调查时发现了“数量巨大的来自意大利的劫掠物资（布料、肥皂、食品和享乐用品）”，这些物资“被大规模地偷窃和倒卖”。尤其是集中营管理人员贪污食品的行为导致犯人出现了灾难性的营养不良，这在很大程度上导致了使用奴隶劳工的企业利润极差。<br>在战争的后半期，东欧的死亡营中的腐败猖獗到了让此前“老帝国”的所有集中营都黯然失色的地步。比如，在奥斯维辛，犹太犯人刚刚抵达就遭到腐败的警卫和党卫军军官的无情洗劫，珠宝、手表、黄金、货币和外汇都被大规模地侵吞。或者，例如在索比布尔集中营，犹太人甚至在死后还要被警卫们加以“利用”，谋取私利。这些警卫私自建立了一个秘密的金匠铺，将犹太人的金牙熔化并打成金条，塞入集中营管理人员的腰包。希姆莱的那种扭曲变态的“正直”观没有改变集中营腐败的体制原因，这些原因不仅在集中营中，在其他的劳改营、战俘营等地方也很有影响。</p><hr><h3 id="大屠杀与腐败"><a href="#大屠杀与腐败" class="headerlink" title="大屠杀与腐败"></a>大屠杀与腐败</h3><p>这个国家破坏了自己的一块基石：它腐蚀了自己的公职人员。犹太人遭到的劫掠，终有一天会以雅典悲剧的标准得到复仇。掠夺犹太人的国家让自己的公职人员也犯下了罪孽，享受劫掠来的财富，这样的国家必将灭亡，因为它的公职人员已经道德沦丧，毫无礼义廉耻。……我的一个熟人卷入了一起关于外汇的刑事案件。让人意外的是，他很快被释放了。“你花了多少钱去打通关节？”这句老百姓的口头禅标志着曾经很干净的德国现在已经脏成了什么样。“从5马克到5万马克不等。从狱警到最高机关，全都收了钱。”</p><p>汉斯·赖希曼的描述表明，在纳粹政权隐秘地剥夺犹太人权力、消灭其经济基础、强迫其移民、最终是驱逐31和谋杀的所有过程中，始终都伴随着纳粹统治下典型的五花八门的腐败行为。其实官方发布了连篇累牍的规定和命令，要求“依法”处理犹太人问题，严禁个人和机构借此机会中饱私囊。这就使得迫害犹太人过程中的腐败更值得注意。</p><hr><p>“国家社会主义人民福利行动”柏林分部的工作人员用一种特别奸诈的手段来填充自己的腰包：他们在明知某些人是犹太人的情况下，仍然将他们吸纳进来，然后把他们传唤过来，指控他们“潜入国家社会主义人民福利行动”，以勒索钱财。</p><hr><p>对总财务官来说，最重要的是，党组织通过“雅利安化”发财是可以的，但必须向他报告和申请批准。只有那些在施瓦茨不知情的情况下做出的中饱私囊行为才会让他恼火，因为这种行为削弱了他对党内财政的中央管辖权。在“雅利安化”过程中，在纳粹党的各种组织机构和地区机关大量建立起来的特别基金和小金库具有财政上的独立性，因此同样也削弱了施瓦茨的中央财政分配权力。总财务官向副元首的幕僚长指出了这样一种危险：“各省部书记利用这种形势，建立了自己的小金库和基金，在未经我许可的情况下自行支配。”看来，施瓦茨正式地禁止党组织从“雅利安化”得利，绝不是为了在“雅利安化”框架内保护国家的利益，而完全是为了巩固他本人在党内的权力地位。</p><hr><p>另外，在“雅利安化”的环境中，还有很多犯罪分子利用犹太人的绝境大发横财。犯罪分子向犹太商店索取“保护费”；野鸡律师装作搭救遇险的犹太人，拿了律师费预付金后就消失得无影无踪；还有人伪称自己和纳粹党高级领导人有关系，向犹太人许下天花乱坠的诺言，骗得钱财，这些诺言完全是空中楼阁。在“雅利安化”末期，德国境内急于出境的犹太人数量剧增，很多外国领事馆，尤其是南美洲和中美洲国家的领事馆，在发放签证时收取高价。要搞到一本前往阿根廷的入境签证，每人要缴纳5000帝国马克的贿金；去海地的签证就只需要1000帝国马克。这种贿赂救了很多犹太人的性命，被犹太移民称为“行善的腐败”，被认为不完全是坏事，尽管这些贿金首先被官员们私吞，并且对移民来说也是一种经济上的掠夺。</p><hr><p>腐败在“雅利安化”框架内发挥的作用有两个方面。首先，腐败，尤其是“官方”的、以赞助和提携为表现形式的腐败，将获益者直接地与纳粹统治系统捆绑在了一起，即便这些赞助往往并不是为了保证获益者未来的忠诚，而是被理解为对党员在过去做出的物质上的“牺牲”的“补偿”。所谓的在“斗争年代”做出的“牺牲”与1933年后的“补偿”之间的联系构成了“救赎式反犹主义”的一个重要的社会心理元素。绍尔·弗里德伦德尔认为，“救赎式反犹主义”是一种具有特别的德国特色和纳粹特色的反犹主义。<br>其次，利用犹太人财产中饱私囊的行为使得反犹政策更加极端化，因为对犹太人的掠夺造就了一群数量不断增长的既得利益者，他们绝不愿意将吃下的东西再吐出来，因此绝不愿意看到犹太人业主回来索回自己的财产。这些既得利益者跨越了道德上的卢比孔河，只能在反犹道路上继续走下去，并且更加极端化，因为他们假如要往回走，就必须承认自己的罪孽，并将侵吞来的财产返还原主人。</p><hr><p>1943年在慕尼黑活动的“雅利安化办公室”也从富裕犹太人那里敲诈数额巨大的“捐款”，并保证不会将他们驱逐到东欧。事实上，几乎所有人在捐款之后当即就被驱逐了。就像盖世太保的“登门拜访”一样，腐败也让驱逐和灭绝的措施更为极端化，犯罪者利用这些措施，消灭知情者。</p><hr><p>在大城市，被出售的犹太人财产都是“没名没姓”的，买家更不会有道德顾虑。<br>纳粹统治者老谋深算地用这种手段来腐蚀群众的道德，他们认为，德国人民越是彻底地断绝了自己道德上的退路，就越能强烈地认同和支持纳粹统治，也就会更加“狂热”地为“最终胜利”而战。宣传部长戈培尔就此在日记中写道：“尤其是在犹太人问题上，我们已经走得这么远，绝没有任何退路了。这样也好。已经破釜沉舟的政治运动和民族，战斗起来要比还有退路的人坚决得多。”<br>但纳粹党的这个算计在战争末期却被证明是落了空的。一位汉堡的犹太商人由于“享受特权的跨种族婚姻”而在纳粹统治中活了下来，他在1945年初在自己的私人文件中写道，一部分德国群众对盟军即将取得的胜利非常恐惧。他写道：“很多占据了犹太人房屋和财物的人，今天非常害怕，担心犹太人会卷土重来，索回自己的财产，然后控告他们的抢劫和盗窃罪行。”<br>考虑到纳粹灭绝政策实施过程中发生的劫掠、“疯狂的”中饱私囊、未经授权的没收以及不受监管的对犹太人财产的分配和浪费到了多么惊人的规模，就可以得出结论：腐败绝非孤立的边缘现象，而是体制固有的普遍现象，或者说是纳粹统治系统的一个根本性行为。</p><hr><p>一些历史学家和社会学家将纳粹对犹太人的大屠杀看作精确运转的官僚机器的齿轮组。比如，汉斯—京特·阿德勒的巨著《被管理的人》就持这样的观点。劳尔·希尔贝格认为纳粹官僚具有“不可腐蚀的计划和管理上的细致缜密”。一个非常夸张的例子是，社会学家齐格蒙·鲍曼将纳粹国家的体制阐释为马克斯·韦伯设想的那种官僚体制。而历史真相与上述的这些观点是不相符的。鲍曼对纳粹统治手段，比如帝国保安总局所属机构或占领区行政机关的世界观责任的认识是错误的。纳粹体制的结构和行为与韦伯描述的官僚体制概念的范畴完全无法调和。<br>当然，如果没有现代国家的官僚机构，对欧洲犹太人的规模如此之大的屠杀是不可能办得到的。但我们绝不可以简单化地将大屠杀视为一场不带个人感情的、官僚的、精确执行的国家罪行。专断残暴、个人和组织的公开谋取私利、个人的极端手段和措施，以及有时达到无政府主义程度的对犹太人的掠夺和谋杀——这些同样是大屠杀的特点。谋求物质利益不是大屠杀的动因，而只是它的一个伴随现象。但对于很多参与者来说，物质利益却是一个不可低估的动机。除了意识形态的狂热和道德败坏的官僚常规外，“低级”的动机（比如贪婪），也对大屠杀起到了推动作用。在这样一个统治系统——重要的国家机构的运作不再受到正常原则的约束和监管，受害者被剥夺人性，受害者的财产则被以意识形态手段诬蔑为赃物——内，腐败找到了理想的温床。</p><hr><p>纳粹党人试图把杀害犹太人的行为按照意识形态分成两类：要么是谋杀，要么是，按照希姆莱的话说，“在过去和将来都永远不会被书写下来的光辉一页”。但蔓延的腐败让这种区分很成问题。如果某人是在上级的保护和授意下，或者凭借公职权力杀死犹太人，那么就算在此过程中捞点油水，也不用担心受到刑法追究。如果凶手在此过程中表现出了“低级动机”（这是谋杀罪名成立的一个重要因素）——如贪婪、虐待狂、奸诈——虽然官方对此不能接受，但却默许地予以容忍，因为“低级动机”在功能上对大屠杀有用。只有那些追求私利，并且在体制框架之外杀死犹太人的凶手，才会被视为谋杀犯，遭到严惩。</p><hr><h3 id="“……放走老虎”：内特林案和马尔迈斯特案"><a href="#“……放走老虎”：内特林案和马尔迈斯特案" class="headerlink" title="“……放走老虎”：内特林案和马尔迈斯特案"></a>“……放走老虎”：内特林案和马尔迈斯特案</h3><p>“世界上没有任何一个其他政权，能够像国家社会主义政权这样，对所有形式的腐败展开如此彻底和坚决的斗争。”党卫军法官康拉德·摩根于1943年如此浓墨重彩地赞扬了第三帝国的反腐措施。在纳粹政权典型的自吹自擂中，为了将纳粹主义装扮成政治廉洁的化身，他们丝毫不会吝惜夸张的形容词，尽管宣传和真实情况——纳粹政权在体制上缺乏反腐能力——之间有着巨大的鸿沟。</p><hr><p>1933年5月，纳粹政府对欺诈和贪腐的量刑标准予以提高，“情节严重的”可以判处最高十年监禁。“情节严重”是指“人民的利益受到损害”。这是典型的纳粹法学概念，弹性极大，可以随心所欲地加以解释。</p><hr><p>第三帝国蔓延的腐败问题的体制基础早在1933年初的“夺权”阶段就已形成。柏林的国家特别专员利珀特的专制手段——利用“保护性监禁”敲诈钱财——就是一个生动的例子。政治分权制度被废除，所有能够实施权力监管、阻止腐败蔓延的分权制衡机制都被排除掉了。议会被解散，或者被改造成唯一功能就是为领导人鼓掌喝彩的拍马机器。于是议会对行政权力起到平衡作用的监管功能也消失了，对财政的监管权、对违法行为的公开讨论、批判性的质询都不复存在，也不可能由议会任命监管和调查委员会。</p><hr><p>第三帝国的统治者在短短几个月内就摆脱了对自己的行为做解释的所有责任，并通过对新闻界的“一体化”，让公众的批评都噤声了。在1933年之前，新闻界还能让很大一部分公众知晓当时的腐败现象，调动他们的情绪，甚至使得他们做出过激反应（右翼在反对魏玛“体制”的斗争中对此加以了利用）。1933年之后，新闻界的领导者就确保读者只能读到对政府的丰功伟绩歌功颂德的宣传。只有在统治者认为有利的时候，才会允许对贪赃枉法行为做报道。有的时候，这种报道非常晦涩模糊，读者必须要有读懂字里行间言外之意的本事才行。新闻界在报道针对贪腐纳粹党官员的诉讼时，会对被告的政治身份做出非常艺术性的改写。于是，纳粹党的政工干部在报道中就变成了“在某位任职的领导干部”。</p><hr><p>对于腐败分子来说，除非他们卷入了体制内部的权力斗争，或是在自己的靠山和保护人眼中失去了所有的利用价值，或是侵吞了党及其组织的财产，否则就不必害怕自己的腐败行为受到检举控诉。在贪污党产方面，仅从1934至1941年，纳粹党总财务官施瓦茨就在普通法庭提起了10887项诉讼。当然，如此之高的数字也仍然只是冰山一角，因为只有那些由纳粹党总财务官提出的刑事诉讼才会被提交到普通法庭，而国家检察官被明确禁止独立开展调查，也无权没收纳粹党的账簿和财务凭证。因此，法庭在判决时只能完全依赖纳粹党总财务官及其审计员提供的信息。另外，纳粹党总财务官还有权要求将案件进行秘密审理，可以指定证人和专业鉴定人员，或者将审理进程限制到个别犯罪事实上。纳粹党总财务官的审计员作为证人、专业鉴定人员和观察员参加庭审，对法庭进行监视，确保法庭遵守上述原则。于是，司法部门的调查和审理的空间被限制得很死，只有纳粹党总财务官认为有利的那些党内腐败案件才会受到审理。总财务官会从政治、私人关系或其他因素上考虑，对某些贪腐分子不予处罚，于是这些案情就会被遮掩起来。</p><hr><p>在有些案件中，腐败的纳粹党人损害的不是纳粹党及其组织机构的利益，警察和司法部门的调查和活动空间就大很多，因为他们不需要屈从于纳粹党总财务官的严格规定。但在这些案件中，他们却常常遇到纳粹高官的顽强抵抗。这些高官认为庇护自己的下属是天经地义的事情，而且他们在“斗争年代”就养成了对警察和司法部门的强烈憎恶。</p><hr><p>在第三帝国，反腐不仅仅是主管的司法机关的责任。尤其是，政工干部对司法部门施加的影响会将刑事调查和审理转移到政治领域中。甚至是否提起诉讼，就已经是个政治问题，因此要在政治领域内解决。<br>于是，很多腐败的纳粹党人虽然犯罪事实铁证如山，但还是能够逍遥法外，因为他们能够找到政治靠山。这些靠山会把调查程序撤销，或者为他们争取宽大处理</p><hr><p>除了对司法部门施加影响之外，有些纳粹党人还有一种办法可以阻挠纳粹党官员受到处罚：他们将案件，尤其是腐败案，移交给纳粹党自己的法庭，在党内部处理案件，把普通法庭排除出去。纳粹党内法庭的前身是1933年以前的调查与调解委员会（Uschla），从党支部领导人以上，由具体负责的高级领导人管辖。这些高级领导人有权将主管法官撤职。根据1934年2月纳粹党中央发布的指令，党内法庭的最高职责是维护党及其成员的声誉，并对意见分歧进行调解。正因为此，党内法庭算不得真正的独立司法机关，而是党内机关，它存在的理由就是为了从政治上利用它。因此，党内法庭的判决是由纳粹党的朋党之交、门阀和小集团结构来决定的，于是被告能够受到什么样的处理，首先取决于他在党的等级结构中的地位，他是否从属于某个特定的统治小集团，以及政治上和私人关系上的机会主义。</p><hr><p>党内法庭要随时为纳粹党干部服务，但绝不能成为一支能够对党的干部指手画脚，甚至对其有约束力的独立力量。1942年，最高党内法官布赫胆大包天地反对希特勒的一项决定，将省部书记约瑟夫·瓦格纳开除党籍，遭到了希特勒狗血喷头的痛斥，党内法庭的政治势力一下子锐减为零。1942年11月21日，希特勒在命令中指示，党内法庭不应当“根据正式法律的观点，而是应当遵照党的运动的政治需求”进行裁决。<br>“元首”对持久的反腐斗争并无兴趣。他自己就利用提携和赠礼的体制来巩固自己的权力地位，以及赏赐忠实的追随者。谁要是做出对他本人不忠不孝的事情，或者触犯了纳粹意识形态的基本原则，希特勒是极其严厉、绝不宽贷的；但对于部下的中饱私囊和腐败行为，他一般是会罩着的。第三帝国期间被撤职的所有省部书记和政权高级领导人中没有一个是因为腐败倒台的。“如果我们这里有人因为腐败被判刑，我们不可以说：看哪，这都是什么世道！这都只是个案而已！”希特勒有一次在餐桌上谈话时把腐败问题就这么不屑一顾地打发掉了。<br>只有在一个方面，希特勒会比较敏感，那就是“党或国家公职人员与私营经济的联系”这个话题。1942年他有一次滔滔不绝地就此话题谈了一整夜。他批评了有些帝国议会议员在私企董事会任职的事情，并要求党的领导干部“不要牵扯到私营经济利益中去”，甚至尽可能不要收受私企的好处。有139名帝国议会（议会本来也没有什么影响力）议员遵照指示，放弃了在私企董事会的职务，但大多数干部都把希特勒的这番命令当作耳旁风。希特勒这么做倒并不是因为反对腐败，而是因为他首先要确保自己个人的地位。他要党的领导干部直接地、彻底地忠诚于他一个人，而不是同时还要兼顾私企的利益。</p><hr><p>只有在少数案件中，帝国保安总局才动用了党卫军和警察的司法部门来调查审理，因为党卫军和警察内部官官相护，保护自己人不受查处，而且上级也很少会揭发部下的过失。在这个由暴力、中饱私囊和非常规的行事方式焊接而成的密谋小集体内，谁要是告发同事或上级的腐败行为，不仅没有人相信他，他还会被认为是爱发怨言的牢骚鬼，被疏远、被处分调离。一名刑警专员检举同事的腐败和黑市交易行为，却被以“滥用职权、胁迫他人”的罪名关押了六周之久，在此期间他的同事们把全部对自己不利的证据消灭得一干二净。最后这名刑警专员被贬到了一座“劳改营”任职。</p><hr><p>1942年3月21日，希特勒发布“关于领导干部的生活方式”的命令，要求他们“做出表率”，“一丝不苟地、理所当然地严格削减开支”。谁若是胆敢抗命不遵，“不管是谁，不管他的地位有多高，一定严惩不贷，绝不姑息”。1942年4月26日，希特勒在帝国议会的一次讲话中指出，必须要将“疏忽失职行为从国家机关无情地驱逐出去，不管是谁，也不管他有多大的权力”。根据党卫军保安处的调查，民众对希特勒的这次讲话十分欢迎，认为它是“反对任何形式的腐败和渎职行为的不留情面的斗争动员”。但另一方面，群众同时还希望能够“撤除一些领导人的职务”，“无情地大力查处更多的腐败案件”。<br>下文将证明，由于纳粹领导人的官官相护，这种反腐声明根本就是雷声大雨点小。没有一个高级领导人因为腐败而落马。但是政府已经把自己逼到了风口浪尖上，如果不做些什么，就无法向群众交待了。从1942年初开始，群众产生了一种期望，要求政府严惩一批贪腐分子，以儆效尤。为了满足群众的要求，政府不得不丢车保帅，采取一些象征性的反腐措施。</p><hr><p>纳粹党及其组织遮掩腐败行为的做法在过去一直很成功，在“亚诺夫斯基案”中却失败了，这是因为警察和司法部门已经从柏林获得了明确的政治支持。各机关的代表人已经达成一致，要利用此案做个象征性的文章，牺牲掉一个省部干部，反正他也不属于纳粹党的领导层圈子。<br>这个决定是于1942年6月27日在柏林的一次会议上做出的。参会的除了“国家社会主义人民福利行动最高指挥官”希尔根菲尔特之外，还有帝国保安总局、纳粹党总财务官、纳粹党中央办公室的代表。根据调查，希尔根菲尔特自己在此案中也陷得很深。他起初试图把案子遮掩住，但后来因为急于洗清自己、与罪犯脱离干系，于是装模作样地要求对涉案的“国家社会主义人民福利行动”官员“严惩不贷”。帝国保安总局的代表，党卫军少校尤斯图斯·拜尔指出，有鉴于当前的国内政治形势，“群众的情绪及元首最近一次讲话都要求对此类案件大力查处”。他的这个态度得到了党卫军全国领袖海因里希·希姆莱的全力支持。在这些压力下，纳粹党总财务官的代表也调转到强硬路线上，主张“对罪犯予以无情的严惩”。<br>于是，基尔特别法庭于1942年8月28日，根据《民族败类处罚规定》第4条，将“国家社会主义人民福利行动”省部领导人亚诺夫斯基、县级领导人赫尔曼·施特格曼、省总部领导人库尔特·埃克霍夫判处死刑，将另外15名“国家社会主义人民福利行动”官员判处两个月至八年不等的监禁。但这个判决能否真正得到执行还是个问题，因为在幕后又发生了激烈的争论。这再一次表明，司法部门不具有独立性，依赖于政治领导层，并受其利用。</p><hr><p>尽管这个判决并没有公之于众，但根据基尔总检察长向帝国司法部的报告，它“在群众所有圈子里都成了激烈争论的话题”。很多老百姓对判决能否得到执行表示怀疑，并猜测，判决“只是纸面上的”，只不过是场“闹剧”而已，所有被判刑的人“至迟到战争结束”就自由了。有传闻说，亚诺夫斯基的妻子每个月能从“国家社会主义人民福利行动”拿到600帝国马克的抚养金，这让群众更加“情绪激动”了。总检察长称，群众中出现了“集体的精神极度不安”，这对党和司法部门的声誉造成了损害。</p><hr><p>严酷的量刑尺度和动用《民族败类处罚规定》来打击腐败的党干部的做法在1942年之后虽然向群众显示了政府“无情打击”腐败的决心，但绝非真正成功的反腐行动。从下文的内特林和马尔迈斯特的腐败案可以看出，将个别贪官污吏处死的做法只是证明了群众中流传的那句顺口溜：“打死苍蝇，放走老虎。”尽管一些贪腐分子受到严惩，尽管希特勒命令领导干部要生活节俭，纳粹政权在战争的后半期仍然没有办法迫使党的领导人遵纪守法，对同样的犯罪行为仍然像以前那样，使用双重标准。</p><hr><p>在1942年6月，帝国皮革管制委员会在一次企业审查中识破了马尔迈斯特的花招，发现有很多人在没有配给证的情况下从他那里购买了定制皮鞋，有时是用实物交易的。马尔迈斯特的主顾的名单简直就是第三帝国的名人录，其中赫然有：希特勒、戈林、帝国新闻总长奥托·迪特里希博士、党卫军上将维尔纳·洛伦茨、省部书记恩斯特·威廉·博勒、国务秘书奥托·迈斯纳博士、国务秘书保罗·克尔纳、国务秘书赫伯特·巴克、党卫军上将威廉·比特里希、希特勒的副官党卫军中将尤利乌斯·绍布、希姆莱的副官党卫军准将鲁道夫·冯·阿尔文斯莱本、帝国部长拉默斯的女儿和女婿，以及帝国组织部长莱伊的儿子。<br>帝国皮革管制委员会火速决定，对上述人士不再进行任何调查，而是将调查局限于那些不属于国家领导人的顾客们。帝国司法部也立即加入了对此案的遮掩。部级领导约埃尔博士作出指示，“对于部级主任以上”，地方警察当局不得对其进行讯问。最后几乎所有针对顾客的调查都被叫停，只有马尔迈斯特自己因为战争经济犯罪被判了三年徒刑。特别法庭对马尔迈斯特格外开恩，因为此案没有造成公众影响。在审讯过程中，他的大部分主顾的名字都被隐去，案件卷宗上盖着这样的章：“根据帝国刑法第83条，此案属于国家机密。”<br>此案再次证明，纳粹政权的领导人享有一种特殊地位，哪怕是腐败的事实已经被证实，也不用害怕受到处罚。1942年之后和之前相比的唯一变化是，高级领导人为了安抚群众日渐高涨的不满情绪，愿意牺牲掉中下层的官员，以便转移群众对自己的过失的注意力。纳粹统治系统的结构对于所有的反腐努力来说都是刀枪不入，因为原本有可能起到调查作用的机关几乎总是自己束住自己的手脚，就像马尔迈斯特案中的帝国皮革管制委员会和帝国司法部那样，它们对遮掩腐败案的做法早已烂熟于心，主动放弃了任何形式的批评检查。</p><hr><p>在第三帝国垂死挣扎的剧痛中，纳粹政权的领导层再次掀起了疯狂的反腐活动，成立了新的机关，如“陆军中央法庭”；海因里希·希姆莱在1944年12月发布了一道关于打击内政部门（即传统的职业官僚领域）腐败的荒诞命令；帝国审计总署署长在1945年初大声呼吁要加强反腐。所有这些“措施国家”的上蹿下跳式的活动不仅来得太晚，而且仍然没有触及纳粹政权内所有滋生腐败的体制。1933年以来的事件证明，如果没有权力监管和分权制衡，没有针砭时弊的公众和新闻自由，如果所有的政府机关都不遵守常规的原则，如果没有独立的监管机构，所有的反腐行动都注定要失败。</p><hr><h3 id="腐败与“民意”"><a href="#腐败与“民意”" class="headerlink" title="腐败与“民意”"></a>腐败与“民意”</h3><p>自1933年以来，腐败就一直是群众热衷的谈资。它在政府宣传的官方渠道越是被视为禁忌，在群众中就越是发展成一种私下里的“热门话题”。尽管纳粹党人对这方面的“民意”的尊重很有限，例如只是在战争后半期象征性地查处了一些腐败党员，但监视民情的政府机关却对群众的批评和不满作了细致入微的记录，正如盖世太保和党卫军保安处的形势报告能够详细证明的那样。<br>“不是干部观察群众，而是群众在观察干部，而且是目光敏锐地观察。”国家警察科隆分局在1935年如此描述群众对腐败这个话题的敏感度。在纳粹统治的最初几年，几乎所有的国家警察分局都记录到了群众“对贪官污吏统治和贪污腐败的怨言”。</p><hr><p>被政府宣传控制的新闻界对这种事情讳莫如深，但这也压制不了群众的怨声载道。恰恰相反，“被驯服的新闻界的沉默”——这是萨克森省长的讽刺说法——对政府来说不但无效，反而有害，而且更助长了谣言的散布。由于遮掩事实和刻意沉默，政府丧失了所有辟谣的机会，导致关于腐败的谣言四处传播，贪腐的金钱数额也被大大夸大。“政府越是不允许群众去一探腐败泥沼的究竟，群众就越是热衷于这个话题，并试图自己去探究，究竟发生了什么事情。”社会民主党流亡理事会关于德国事务的报道在1936年如此描述新闻封堵和造谣传谣之间的关系。</p><hr><p>在1938年1月，流传着一封《致弗兰肯零售业人士的公开信》，其中详细描绘了省部书记的奢侈生活，最后一段是：</p><p>如果元首阿道夫·希特勒要求我们这么做的话，我们会心甘情愿地将全部（原文为着重体）营业额和最后一个芬尼都捐献出来！但对于一个贪官污吏——甚至最腐败的赤色体制也不会滋生出这样的腐败分子来——对于一个贪图享乐的人，一个四处大吼大叫的游手好闲之徒，我们一分钱也不给。他的别墅、破产的庄园、汽车、“电影明星”和剧院小婊子，他的出国旅游，以及让同伙闭嘴的收买人心的钱，都应当让他自己付账！</p><p>这封公开信的语气虽然非常强烈，但对希特勒本人的正面评价却表明，群众对腐败的批评几乎从来不会对整个纳粹统治提出质疑，而是对政权提出有限的批评。“如果元首知道这事就好了！”这样口口相传的话对于群众的基本态度，即在针砭时弊时几乎总是对政府仍然赤胆忠心来说是非常典型的。早在纳粹统治的初期，国家警察机关就在其形势报告中指出，群众不仅对希特勒本人没有任何批评，而且纳粹“金雉鸡”[39]们的丑行越是被揭露出来，元首的形象就越是光辉伟大。“群众看到元首始终是生活朴素、态度谦逊，对他一直高度信任。因此人们以最真挚热诚的方式庆祝元首的生日。”柏林警察局长在1935年5月如此说道。</p><p>[39]“金雉鸡”是第三帝国时期老百姓对纳粹党高官和高级将领的一种戏谑的称呼，因为他们的制服非常富丽堂皇。</p><hr><p>在20世纪30年代后半期，有两个新发展使得这种国内政治问题大大缓和了。首先，与纳粹政府内政外交的辉煌成就相比，腐败在民众心目中根本算不得什么重要问题；贪污腐败和结党营私被认为是一个总的来讲非常成功的政权的阴暗面，受到容忍。另外，群众对腐败行为渐渐习以为常，感觉也变得迟钝了。“人民对一切丑行都冷静超然地予以容忍，着实令人震惊。”社会民主党流亡理事会在1937年11月报告称，“从这种冷静超然，我们可以看出，道德已经沦丧到了什么程度。很多群众对任人唯亲和贪污腐败已经甘心容忍。”有些上了年纪的人对腐败的愤怒已经不能被较年轻的人所理解。群众听天由命的基本态度在“民不告，官不管”这句话中体现得淋漓尽致。记者雷蒙德·普雷策尔（化名塞巴斯蒂安·哈夫纳）在30年代末得出结论，人民已经完全领悟了官方对腐败话题的禁忌：</p><blockquote><p>由于纳粹领导人的贪腐数额极大，困惑的德国公众已经不用正常的名字称呼这种行为了。这些强盗是些大土匪，已经摇身一变成了权势炙手可热的大老爷。他们的权力极大，又极其厚颜无耻，人们不是为遭到抢劫而感到愤慨，倒是要庆幸，自己的东西还没有被抢光。</p></blockquote><p>30年代后半期经济的蓬勃发展是群众的谅解和容忍态度的另一个重要原因。在经济危机的凄惨岁月之后，群众对富丽堂皇的装扮并不感到反感，在某种程度上还认为这是富足生活和新德国的强大国威的恰当体现，对其表示欢迎。否则，我们就无法解释，奢侈成癖、腐化堕落的赫尔曼·戈林为什么毋庸置疑地受到群众爱戴了。他和他的妻子，曾经是演员的埃米·松内曼，满足了老百姓“追星”的需求。<br>1941年底1942年初，群众对腐败无动于衷地容忍甚至是接受的阶段结束了，让位于一种敏感。德军在莫斯科城下的失败、盟军开始集中轰炸德国城市，以及粮食供应的缩减，使得群众发出了“极其激烈的不满呼声”，同时人们也更加抱怨领导人享用的“外交官配给”。亚诺夫斯基和内特林那样的案件如果是在30年代肯定不会引起多少注意，现在却能引起群众的高度关注和一连几周的激烈讨论。<br>工人以激烈的言辞表达了对“民族共同体”内不同阶层承受战争苦难的程度不同和享受的生活条件不平等的不满。例如，一名工人对内特林案评论道：“我们希望终有一天能看到，对待那些大佬们也像对待平头百姓一样，否则的话，这个国家就要被冰雹砸得千疮百孔了。”党卫军保安处报告称，“群众对领导阶层的腐败现象越来越关注”。群众对当时的局面概括如下：“打死苍蝇，放走老虎。非常大的老虎不仅不怕被打，还能吃到更多肉。”</p><hr><p>政府领导层对群众的怨言的应对方法就是，通过象征性地、展示性地查处若干官员来安抚群众。早在纳粹统治的早期，政府就一直是这么做的，治标不治本，目标仅仅是安抚一下群众，而不会造成什么体制性的影响，因为那样的影响有可能会危及整个统治系统。但出现了一个新现象：在纳粹党内部，也有人表示出对腐败的不满了。尤其是在斯大林格勒的惨败之后，很多党员不再对贪污腐败和骄奢淫逸的行为无动于衷了。</p><hr><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>近期关于迫害犹太人的纳粹机构的研究突出地表明，纳粹统治下的很多“官僚系统”的特点是，将世界观的信仰与不受任何限制的行为方式结合了起来。权力监管的缺失使得纳粹党人得以不受阻挠地谋取私利、掠夺受害者的物质财富。尤其是腐败现象让我们感到，将迫害犹太人的机构描述为经典的“官僚机器”的做法，是值得商榷的，这种描述与其说是澄清了这些机构的特征，倒不如说是让它愈发难解了。</p><hr><p>第三帝国的反腐斗争的最大特点是专横霸道和随意任性。很多“达官贵人”由于自己的地位和政治靠山的保护，可以为所欲为，而下级官员在逾矩时却要面对极其严厉的处罚。于是，就出现了遭到打击的腐败、受到容忍的腐败和体制化的腐败三者并存的怪现状，而且这三者之间的界线也是有流动性的。对于某个腐败案件是否要进行查处，首先取决于这么做在政治上是否有利。普通法庭和党内法庭都是“元首国家”的没有独立性的机关，无法实施有效的司法诉讼。但在第三帝国，统治集团内部的臭名昭著的派系斗争却能带来一定程度的腐败监管，因为这种斗争常常是由于各派系互相指责对方腐败而展开的。<br>在第三帝国体制化的腐败的顶端，是希特勒本人。他通过赠礼、优待和资助的体制，来额外地巩固自己魅力十足的地位，他的玩世不恭的统治手段以身边人的道德败坏为基础。他努力通过物质手段，将其他领导人拴牢，但这并不能证明纳粹统治系统所谓的独裁特征。“希特勒体制”并非凌驾于数量众多的恩主—门客结构之上，而是与其在同一个层面上共存，这些结构在纳粹体制中是横向发展的。在这方面最突出的是各省的“诸侯”们，他们一般都控制着完善的小金库和基金会的系统，这些系统既不受纳粹党总财务官的监管，也不受国家中央权力的控制。虽然希特勒的权力足够强大，地位足够巩固，能够约束住腐败的封疆大吏们，但是元首在面对腐败问题时却非常冷漠（这很能说明问题），即便罪恶滔天的封臣也能保住自己的位子。</p><hr><p>在纳粹统治集团的上层，腐败不仅仅是狭义的物质财富来源。很多纳粹高级领导人拥有庄园和猎区，还收藏艺术品，他们这是在模仿贵族的生活方式。在获取这些表明身份地位的身外之物的过程中，他们往往杀人越货、胡作非为。他们的骄奢淫逸的生活方式——赫尔曼·戈林是其极端形式的代表——在外观上标示了1933年后精英集团的变化，强调了纳粹党人对社会的领导权，并昭然地突出各自在第三帝国统治集团内的地位。</p><hr><p>纳粹体制的管理不善和效率低下的例子不胜枚举，因此说纳粹政权进行了有意识的“现代化”的说法是站不住脚的。<br>但另一方面，我们面对着这样的问题：我们真的可以用传统的效率标准来评价纳粹政权吗？这种标准对于纳粹政权会不会完全无效呢？在纳粹统治下，货币本来就没有什么作用，政权靠借贷生存，借以开拓资源的则是最原始的手段——掠夺。纳粹政权劫掠和收集大量资产并将其投入灭绝机器的“工作效率”是极高的，也取得了骇人听闻的“成果”。在这样的体制中，腐败造成的高成本和收入亏空不是那么引人注目。在纳粹党人看来，腐败有时降低了效率、破坏了政府机能，但有时却是政治上的朋党体制的“润滑剂”，因此起到了推动政府运转和稳定全局的作用。另外，腐败鼓动更多人加入到“雅利安化”、大屠杀和剥削占领区的活动中。虽然德国群众对腐败进行了大规模的口诛笔伐，但德国社会的确是通过腐败获得了很多好处。<br>如果我们不把纳粹统治视为自上而下的独裁政权，而把它看作德国社会以各种方式广泛参与的社会行为，那么我们就会看到，腐败将纳粹统治和德国社会紧密交织起来，很多“普通的德国人”也通过中饱私囊参与到了纳粹的压迫和灭绝政策中来。</p><hr><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>[11]奥革阿斯是希腊神话中的埃利斯国王，太阳神赫利俄斯之子，拥有大批牲畜。欧律斯透斯要求赫拉克勒斯完成的十二项功绩之一就是在一天之内清理奥革阿斯的牲口圈，奥革阿斯也答应将他牲畜的十分之一作为报酬送给赫拉克勒斯。赫拉克勒斯挖掘沟渠，将阿尔普斯河和佩纽斯河（一说是两者之一）的河水引来，冲洗牲口圈，完成了任务。奥革阿斯反悔，拒绝给赫拉克勒斯牲畜，于是赫拉克勒斯杀死了奥革阿斯及其儿子们。因传说奥革阿斯的牛圈三十年从未打扫，污秽不堪，所以在西方常以“奥革阿斯的牛圈”来形容“最肮脏的地方或者积累成堆的难以解决的问题”</p><hr><p>以上摘自：<br><img src="https://ooo.0o0.ooo/2016/12/04/58442798f0d49.jpg" alt="《纳粹德国的腐败与反腐》"><br>《纳粹德国的腐败与反腐》<br>作者：(德)弗兰克·巴约尔<br>译者: 陆大鹏<br>出版社：译林出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux常用基本命令指北</title>
      <link href="/how-to-use-linux/"/>
      <url>/how-to-use-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h1><p>学习任何一种新东西，最好的方式就是进行实践。对于一个被 Windows 这样的 GUI OS 惯坏了的用户而言，上手 Linux 的最快途径便是利用一些现成的项目进行实操。正如笔者肤浅的 Linux 使用技能完完全全是靠自己在 VPS 上搭梯子（ss）达成的。在这里写一些基本命令的笔记，一方面方便自己今后查阅，另外也给看到本文的 Linux 小白一些入（bu）门（kao）级（pu）的指北。</p><a id="more"></a><h1 id="Linux-的历史"><a href="#Linux-的历史" class="headerlink" title="Linux 的历史"></a>Linux 的历史</h1><p>关于 GNU/Linux 的相关历史，<a href="http://www.jianshu.com/p/a6a594a00b5b" target="_blank" rel="noopener">GNU/Linux与开源文化的那些人和事</a> 一文已经有很详尽的介绍。简单来说，Linux 是 Linus Torvalds 在 1991 年凭个人兴趣爱好发明的一个轮子。在众多开发者和社区的贡献下这个轮子逐渐变得众人皆知。<br><img src="https://ooo.0o0.ooo/2016/10/29/5814ef387a70f.png" alt="Unix发展过程图"><br>(Source:<a href="http://www.jianshu.com/p/a6a594a00b5b" target="_blank" rel="noopener">刘军民</a>)</p><p>GNU/Linux 存在很多发行版，最早发布 GNU/Linux 系统的公司是 Redhat，现在诸如 Debian、Ubuntu、CentOS 等等的系统都是被广泛使用的 GNU/Linux 发行版。Ubuntu 在营销和 GUI 优化方面做的更好一些，所以我们偶尔能看到 Ubuntu 出现在普通消费者新购电脑的预装系统中。</p><h1 id="了解命令提示符和命令行"><a href="#了解命令提示符和命令行" class="headerlink" title="了解命令提示符和命令行"></a>了解命令提示符和命令行</h1><h2 id="命令提示符和命令行"><a href="#命令提示符和命令行" class="headerlink" title="命令提示符和命令行"></a>命令提示符和命令行</h2><p><img src="https://ooo.0o0.ooo/2016/10/29/5814ef25a7472.png" alt="命令提示符和命令行"><br>(Source:<a href="http://www.cnblogs.com/xpjiang/p/5089137.html" target="_blank" rel="noopener">姜鹄</a>)</p><h2 id="Shell-简介"><a href="#Shell-简介" class="headerlink" title="Shell 简介"></a>Shell 简介</h2><p><a href="https://zh.wikipedia.org/zh-cn/%E6%AE%BC%E5%B1%A4" target="_blank" rel="noopener">Shell</a> 指「为用户提供用户界面」的软件，通常指的是命令行界面的解析器。泛指所有为用户提供操作界面的程序，也就是程序和用户交互的层面。在 Linux 系统中，我们使用的是 Linux Shell 进行操作，不同版本的 Linux 搭配了不同版本的 Shell，在使用上语法有所差异。bash 是 Unix shell 的一种，一般来说目前绝大多数的 Linux 都支持 bash。下面我们以 bash 为例介绍一下 shell 的命令。</p><p>所谓命令行操作，可以理解为人机交互通过一条一条的命令来实现。bash shell 的命令格式为：<br><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">command <span class="string">[options]</span> <span class="string">[arguments]</span></span><br></pre></td></tr></table></figure></p><p>其中，<br>command：表示命令的名称。<br>options：表示命令的选项。<br>arguments：表示命令的参数。</p><p>我们一般把具有以上格式的字符串称为命令行。命令行是用户与 shell 之间对话的基本单位。<br>命令的选项是包含一个或多个字母的代码，主要用于改变命令的执行方式。在选项前面有一个 <code>-</code> 符号，用于区别参数。例如：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@WEBServer</span> ~]<span class="variable">$ </span>ls -a ~<span class="regexp">/test</span></span><br></pre></td></tr></table></figure></p><p>上面的语句中：<br><code>[root@WEBServer ~]$</code> 为<strong>命令提示符</strong>，<code>root</code> 为用户名，<code>WEBServer</code> 为本机名，<code>~</code> 为当前的工作目录；<br><code>ls -a ~/test</code> 为<strong>命令行</strong>，<code>ls</code> 为命令名称，<code>a</code> 为命令选项，<code>~/test</code> 为命令参数。</p><p>命令行的命令选项可以不区分前后顺序地同时列出，例如：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@WEBServer</span> ~]<span class="variable">$ </span>ls -la</span><br><span class="line">[root<span class="variable">@WEBServer</span> ~]<span class="variable">$ </span>ls -al</span><br></pre></td></tr></table></figure></p><p>还有很多 shell 的具体细节本文暂时不表，你可以通过 <a href="http://www.epubit.com.cn/article/412" target="_blank" rel="noopener">这篇文章</a> 来进行学习。后文将省略命令提示符，只给出命令行。</p><h2 id="Shell-管道"><a href="#Shell-管道" class="headerlink" title="Shell 管道"></a>Shell 管道</h2><p>所谓管道，顾名思义具有连接的作用。我们可以通过管道把一个命令的输出当作下一个命令的输入，使用管道符 <code>|</code> 把第 1 个命令的输入当作第 2 个命令的输出，第 2 个命令的输出当作第 3 个命令的输入，依此类推。例如：<br><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">ps aux | <span class="type">grep</span> blabla | <span class="type">wc</span> –l</span><br></pre></td></tr></table></figure></p><p>上面这个命令由三个命令组成，<br><code>ps aux</code> 用于查看系统中正在运行的进程<br><code>grep blabla</code> 用于匹配（提取）包含字段为 blabla 的文本信息<br><code>wc –l</code> 用于统计文本的数量<br>使用管道连接后，整条命令的作用就是查看系统中正在运行的名为 blabla 的进程数量。</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><p>自动补全命令：<code>Tab</code><br>停止当前命令：<code>Ctrl</code>+<code>C</code><br>键盘输入结束：<code>Ctrl</code>+<code>D</code></p><h1 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h1><h2 id="常见包管理套件"><a href="#常见包管理套件" class="headerlink" title="常见包管理套件"></a>常见包管理套件</h2><p>Linux 不是 GUI OS，几乎所有操作都需要输入命令行实现。所以为了方便地安装 / 卸载软件等操作，Linux 内置了专门用于对软件包进行管理的工具。不同版本的 Linux 系统使用不同的 <a href="https://www.ibm.com/developerworks/cn/linux/l-cn-rpmdpkg/" target="_blank" rel="noopener">软件包管理</a> 指令。</p><p><img src="https://chusiang.gitbooks.io/working-on-gnu-linux/content/imgs/2013-09-21-pms.png" alt="各版本系统常见套件管理指令"><br>(Source:<a href="https://chusiang.gitbooks.io/working-on-gnu-linux/content/04.package-management.html" target="_blank" rel="noopener">凍仁翔</a>)</p><p>根据上图，你可以实现对软件包的基本操作。例如，apt 常用命令如下：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update                  #更新源索引</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install &lt;package&gt;       #安装软件 &lt;package&gt;</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> &lt;package&gt;        #卸载软件 &lt;package&gt;</span><br><span class="line">sudo apt-<span class="builtin-name">get</span><span class="built_in"> upgrade </span>                #将系统中所有软件升级到最新版本</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> &lt;package&gt;        #卸载软件 &lt;package&gt;</span><br></pre></td></tr></table></figure></p><h2 id="CentOS-相关包管理套件介绍"><a href="#CentOS-相关包管理套件介绍" class="headerlink" title="CentOS 相关包管理套件介绍"></a>CentOS 相关包管理套件介绍</h2><p>笔者使用的是 Linux 发行版本是 CentOS 6，在此简单介绍一下 CentOS 的相关包管理套件。从上面的各版本系统常见套件管理指令中我们看到 CentOS 使用 rpm 和 yum 进行包管理。</p><p><strong>RPM</strong> (RPM Package Manager) 虽有 RedHat 的标志，但其原始设计理念是开放式的，包括 OpenLinux、S.u.S.E. 以及 Turbo Linux 等 Linux 的分发版本都有采用。</p><p><strong>YUM</strong> (Yellow dog Updater, Modified) 是杜克大学为了提高 RPM 软件包安装性而开发的一种软件包管理器。</p><h2 id="YUM-源和-EPEL"><a href="#YUM-源和-EPEL" class="headerlink" title="YUM 源和 EPEL"></a>YUM 源和 EPEL</h2><h3 id="源"><a href="#源" class="headerlink" title="源"></a>源</h3><p>软件包管理器就像 PC 上的各种软件管家，软件包管理器的不同『源』收录的软件资源 / 信息是不同的，如当我们使用 yum 安装一个软件 <code>&lt;ooxx&gt;</code> 时返回的信息是：<br><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">No package &lt;ooxx&gt; available.</span><br><span class="line"><span class="keyword">Error: </span>Nothing to do</span><br></pre></td></tr></table></figure></p><p>这有可能是因为我们使用的『源』中并没有记录关于 <code>&lt;ooxx&gt;</code> 的信息。所以我们需要换一个信息丰富的『源』来解决这个问题。</p><h3 id="EPEL-及使用方法"><a href="#EPEL-及使用方法" class="headerlink" title="EPEL 及使用方法"></a>EPEL 及使用方法</h3><p>EPEL (Extra Packages for Enterprise Linux) 是 Fedora 团队的免费、开源项目，用于为 RedHat 系的 Linux 系统提供额外的软件包，其适用于 RHEL、CentOS 和 Scientific Linux。对于没有默认使用 EPEL 作为 YUM 源的 CentOS，我们需要安装、设置 EPEL 后才能正常使用：</p><ol><li>使用 Root 身份登录 Linux</li><li><p>执行如下命令确认自己的系统版本，如返回信息为 <code>CentOS release 6.8 (Final)</code> 则表示系统版本为 <code>CentOS 6</code>。</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">head -n <span class="number">1</span> <span class="regexp">/etc/i</span>ssue</span><br></pre></td></tr></table></figure></li><li><p>执行如下命令确认自己的系统内核，如返回信息为 <code>Linux &lt;username&gt; 2.6.32-042stab117.16 #1 SMP Fri Sep 9 21:57:19 MSK 2016 x86_64 x86_64 x86_64 GNU/Linux</code> 则表示系统内核为 <code>64 Bit</code>。（<code>x86</code> 为 <code>32 Bit</code>）</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">uname -a</span></span><br></pre></td></tr></table></figure></li><li><p>根据系统版本和内核选择如下命令执行：<br><strong><em>RHEL/CentOS 7 </em></strong></p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">yum install https:<span class="regexp">//</span>dl.fedoraproject.org<span class="regexp">/pub/</span>epel<span class="regexp">/epel-release-latest-7.noarch.rpm</span></span><br></pre></td></tr></table></figure></li></ol><p><strong><em>RHEL/CentOS 6</em></strong><br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">yum install https:<span class="regexp">//</span>dl.fedoraproject.org<span class="regexp">/pub/</span>epel<span class="regexp">/epel-release-latest-6.noarch.rpm</span></span><br></pre></td></tr></table></figure></p><ol start="5"><li><p>执行命令 <code>yum repolist</code> 确认 EPEL 仓库已经安装</p></li><li><p>需要使用 EPEL 安装软件 <code>&lt;software&gt;</code> 时，执行如下命令即可：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">yum <span class="attribute">--enablerepo</span>=epel install &lt;software&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">whatis &lt;<span class="keyword">command</span>&gt;            <span class="comment">#单行描述命令</span></span><br><span class="line">man &lt;<span class="keyword">command</span>&gt;               <span class="comment">#显示命令手册</span></span><br><span class="line"><span class="keyword">alias</span> &lt;<span class="keyword">alias</span>&gt;=<span class="string">"&lt;command&gt;"</span>   <span class="comment">#设置 &lt;command&gt; 命令的别名为 &lt;alias&gt;，   </span></span><br><span class="line">                             之后执行 &lt;<span class="keyword">alias</span>&gt; 命令相当于执行 &lt;<span class="keyword">command</span>&gt; 命令</span><br><span class="line">date                        <span class="comment">#显示日期</span></span><br><span class="line">cal                         <span class="comment">#显示日历</span></span><br><span class="line"><span class="keyword">shutdown</span> -r now             <span class="comment">#关机后重启</span></span><br><span class="line"><span class="keyword">shutdown</span> -h now             <span class="comment">#关闭系统服务后关机</span></span><br><span class="line"><span class="keyword">shutdown</span> -h 10              <span class="comment">#10min 后关闭系统服务后关机</span></span><br><span class="line"><span class="keyword">shutdown</span> -h 21<span class="function">:25</span>        <span class="comment">#10min 后关闭系统服务后关机</span></span><br><span class="line">reboot                      <span class="comment">#立即重启</span></span><br><span class="line">init 0                      <span class="comment">#关机</span></span><br><span class="line">init 6                      <span class="comment">#重启</span></span><br><span class="line">free                        <span class="comment">#显示系统内存状态</span></span><br><span class="line">uname -a                    <span class="comment">#查看系统信息</span></span><br><span class="line">head -n 1 <span class="string">/etc/issue</span>        <span class="comment">#查看版本信息</span></span><br><span class="line">lsb_release -a              <span class="comment">#查看版本信息</span></span><br><span class="line">df -h                       <span class="comment">#查看磁盘空间</span></span><br><span class="line">du -sh                      <span class="comment">#查看目录大小</span></span><br><span class="line"><span class="keyword">clear</span>                       <span class="comment">#清除屏幕信息</span></span><br></pre></td></tr></table></figure><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">r                 <span class="comment">#递归，操作某目录及其子目录中的文件时使用</span></span></span><br><span class="line"><span class="ruby">-i                 <span class="comment">#交互操作，操作前会询问</span></span></span><br><span class="line"><span class="ruby">-f                 <span class="comment">#强制操作，不进行提示</span></span></span><br><span class="line"><span class="ruby">-help              <span class="comment">#显示帮助信息</span></span></span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">wget <span class="variable">&lt;URL&gt;</span>                            <span class="comment">#下载 &lt;URL&gt; 指向的文件</span></span><br><span class="line">pwd                                   <span class="comment">#显示当前所在目录</span></span><br><span class="line">mkdir <span class="variable">&lt;dir&gt;</span>                           <span class="comment">#创建新目录</span></span><br><span class="line">mkdir -m <span class="variable">&lt;access_code&gt;</span> <span class="variable">&lt;dir&gt;</span>          <span class="comment">#创建新目录并设定目录权限</span></span><br><span class="line">mkdir -p <span class="variable">&lt;dir&gt;</span>/<span class="variable">&lt;dir&gt;</span>                  <span class="comment">#创建新目录，若无父目录，则创建</span></span><br><span class="line">rmdir <span class="variable">&lt;dir&gt;</span>                           <span class="comment">#删除空目录</span></span><br><span class="line">rmdir -p <span class="variable">&lt;dir&gt;</span>/<span class="variable">&lt;dir&gt;</span>                  <span class="comment">#删除空目录及父目录中的所有空目录</span></span><br><span class="line">cp -p <span class="variable">&lt;source&gt;</span> <span class="variable">&lt;target&gt;</span>               <span class="comment">#复制文件 / 目录 &lt;source&gt; 及其属性到 &lt;target&gt;</span></span><br><span class="line">cp -r <span class="variable">&lt;source&gt;</span> <span class="variable">&lt;target&gt;</span>               <span class="comment">#递归复制文件 / 目录 &lt;source&gt; 内所有内容到 &lt;target&gt;</span></span><br><span class="line">cp -a <span class="variable">&lt;source&gt;</span> <span class="variable">&lt;target&gt;</span>               <span class="comment">#相当于 cp -pdr</span></span><br><span class="line">cp -i <span class="variable">&lt;source&gt;</span> <span class="variable">&lt;target&gt;</span>               <span class="comment">#复制文件时若目标文件存在，则询问操作</span></span><br><span class="line">rm -f <span class="variable">&lt;file&gt;</span>                          <span class="comment">#强制移除文件</span></span><br><span class="line">rm -r <span class="variable">&lt;file&gt;</span>                          <span class="comment">#递归移除文件 / 目录（慎用）</span></span><br><span class="line">mv <span class="variable">&lt;file&gt;</span> <span class="variable">&lt;dir&gt;</span>                       <span class="comment">#移动文件 &lt;file&gt; 到目录 &lt;dir&gt;</span></span><br><span class="line">mv <span class="variable">&lt;file&gt;</span> <span class="variable">&lt;new&gt;</span>                       <span class="comment">#重命名文件 &lt;file&gt; 为 &lt;new&gt;</span></span><br><span class="line">cat <span class="variable">&lt;file&gt;</span>                            <span class="comment">#显示文件内容</span></span><br><span class="line">cat -b <span class="variable">&lt;file&gt;</span>                         <span class="comment">#显示文件内容，空白行不显示行号</span></span><br><span class="line">cat -n <span class="variable">&lt;file&gt;</span>                         <span class="comment">#显示文件内容，显示所有行号</span></span><br><span class="line">more <span class="variable">&lt;file&gt;</span>                           <span class="comment">#分页显示文件内容</span></span><br><span class="line">        空格（Space）                  <span class="comment">#下一页</span></span><br><span class="line">        回车（Enter）                  <span class="comment">#下一行</span></span><br><span class="line">        /<span class="variable">&lt;string&gt;</span>                     <span class="comment">#向下搜索内容 &lt;string&gt;</span></span><br><span class="line">        :f                            <span class="comment">#显示文件名及行数</span></span><br><span class="line">        q                             <span class="comment">#关闭 more 显示</span></span><br><span class="line">less <span class="variable">&lt;file&gt;</span>                           <span class="comment">#分页显示文件内容</span></span><br><span class="line">        PageUp                        <span class="comment">#上一页</span></span><br><span class="line">        PageDown                      <span class="comment">#下一页</span></span><br><span class="line">        空格（Space）                  <span class="comment">#下一页</span></span><br><span class="line">        ?<span class="variable">&lt;string&gt;</span>                     <span class="comment">#向上搜索内容 &lt;string&gt;</span></span><br><span class="line">        /<span class="variable">&lt;string&gt;</span>                     <span class="comment">#向下搜索内容 &lt;string&gt;</span></span><br><span class="line">        q                             <span class="comment">#关闭 less 显示</span></span><br><span class="line">tail <span class="variable">&lt;file&gt;</span>                           <span class="comment">#显示文件最后 10 行内容</span></span><br><span class="line">tail -n <span class="variable">&lt;num&gt;</span> <span class="variable">&lt;file&gt;</span>                  <span class="comment">#显示文件最后 &lt;num&gt; 行内容</span></span><br><span class="line">touch <span class="variable">&lt;file&gt;</span>                          <span class="comment">#若 &lt;file&gt; 不存在，则新建文件 &lt;file&gt;</span></span><br><span class="line">                                      <span class="comment">#若 &lt;file&gt; 存在，则修改 &lt;file&gt; 的时间（atime/ctime/mtime）为当前时间</span></span><br><span class="line">touch -t <span class="variable">&lt;date&gt;</span> <span class="variable">&lt;file&gt;</span>                <span class="comment">#修改 &lt;file&gt; 的时间为指定 &lt;date&gt; 时间（YYMMDDhhmm）</span></span><br><span class="line">whereis <span class="variable">&lt;file&gt;</span>                        <span class="comment">#查找文件 &lt;file&gt;</span></span><br><span class="line">locate <span class="variable">&lt;keyword&gt;</span>                      <span class="comment">#查找文件（目录）名包含 &lt;keyword&gt; 的文件（目录）</span></span><br><span class="line">find <span class="variable">&lt;path&gt;</span> <span class="variable">&lt;file&gt;</span>                    <span class="comment">#在 &lt;path&gt; 路径下查找文件 &lt;file&gt;</span></span><br><span class="line">tar -zxvf <span class="variable">&lt;file&gt;</span>.gz <span class="variable">&lt;dir&gt;</span>             <span class="comment">#打包 &lt;dir&gt; 目录并压缩为 &lt;file&gt;.gz</span></span><br><span class="line">tar -zxvf <span class="variable">&lt;file&gt;</span>.gz                   <span class="comment">#解压缩解包文件 &lt;file&gt;.gz</span></span><br><span class="line">tar -jxvf <span class="variable">&lt;file&gt;</span>.bz2 <span class="variable">&lt;dir&gt;</span>            <span class="comment">#打包 &lt;dir&gt; 目录并压缩为 &lt;file&gt;.bz2</span></span><br><span class="line">tar -jxvf <span class="variable">&lt;file&gt;</span>.bz2                  <span class="comment">#解压缩解包文件 &lt;file&gt;.bz2</span></span><br></pre></td></tr></table></figure><h2 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h2><p>编辑文本时我们可以使用 <code>vi</code> 或 <code>vim</code> 工具来实现，直接执行命令即可编辑文件 <code>&lt;file&gt;</code>：<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vi</span> <span class="symbol">&lt;file&gt;</span></span><br></pre></td></tr></table></figure></p><p>编辑文件时有三种命令模式：命令模式、插入模式、编辑模式。使用 <code>ESC</code> 或 <code>i</code> 或 <code>:</code> 来切换模式。命令模式下（按 <code>ESC</code> 进入）：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">:q</span>                      <span class="comment">#询问退出</span></span><br><span class="line"><span class="symbol">:q!</span>                     <span class="comment">#不保存并强制退出</span></span><br><span class="line"><span class="symbol">:wq</span>                     <span class="comment">#保存并退出</span></span><br><span class="line"><span class="symbol">:set</span> number             <span class="comment">#显示行号</span></span><br><span class="line"><span class="symbol">:set</span> nonumber           <span class="comment">#隐藏行号</span></span><br><span class="line">/apache                 <span class="comment">#在文档中查找 apache 按 n 跳到下一个，shift+n 上一个</span></span><br><span class="line">yyp                     <span class="comment">#复制光标所在行，并粘贴</span></span><br><span class="line">j                       <span class="comment">#下一行，相当于↓</span></span><br><span class="line">k                       <span class="comment">#上一行，相当于↑</span></span><br><span class="line">h                       <span class="comment">#左移一个字符，相当于←</span></span><br><span class="line">l                       <span class="comment">#右移一个字符，相当于→</span></span><br></pre></td></tr></table></figure></p><p>其实这已经算是 <a href="https://zh.wikipedia.org/wiki/Vi" target="_blank" rel="noopener">vi</a>/<a href="https://zh.wikipedia.org/wiki/Vim" target="_blank" rel="noopener">Vim</a> 的使用方法（命令）了，可以通过 <a href="https://zhuanlan.zhihu.com/p/21278816" target="_blank" rel="noopener">这篇文章</a> 入门。</p><h2 id="清空文件内容"><a href="#清空文件内容" class="headerlink" title="清空文件内容"></a>清空文件内容</h2><p>下面的三个命令都可实现清空文件内容，但命令执行后文件大小有所不同：<br><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">echo <span class="string">""</span> &gt; <span class="params">&lt;file&gt;</span>                     <span class="meta">#文件大小被截为 1 字节</span></span><br><span class="line">&gt; <span class="params">&lt;file&gt;</span>                             <span class="meta">#文件大小被截为 0 字节</span></span><br><span class="line">cat<span class="meta-keyword">/dev/</span>null &gt; <span class="params">&lt;file&gt;</span>                <span class="meta">#文件大小被截为 0 字节</span></span><br></pre></td></tr></table></figure></p><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><h3 id="Linux-文件权限的表示"><a href="#Linux-文件权限的表示" class="headerlink" title="Linux 文件权限的表示"></a>Linux 文件权限的表示</h3><p>使用 <code>ll</code> 命令查看当前目录下的文件详细信息，文件属性如图所示：<br><img src="https://cloud.githubusercontent.com/assets/7871813/17443279/560334cc-5b6c-11e6-9bbc-0017890d80aa.png" alt="Linux文件属性"><br>(Source:<a href="https://github.com/dwqs/blog/issues/30" target="_blank" rel="noopener">dwqs</a>)</p><p>Linux 系统中的文件有三种基本权限，使用这三种权限的数值组合可以满足文件权限管理的所有需求。</p><table><thead><tr><th>参数</th><th>意义</th><th>数值</th></tr></thead><tbody><tr><td>R</td><td>读(read)</td><td>4</td></tr><tr><td>W</td><td>写(write)</td><td>2</td></tr><tr><td>X</td><td>可执行(execute)</td><td>1</td></tr></tbody></table><p><img src="https://cloud.githubusercontent.com/assets/7871813/17443291/64c1cf3c-5b6c-11e6-8dd6-5b3a371e13eb.png" alt="文件权限"><br>(Source:<a href="https://github.com/dwqs/blog/issues/30" target="_blank" rel="noopener">dwqs</a>)</p><p>文件属性中 <code>drwxr-x---</code> 为 <code>fonts</code> 文件夹的权限<br><code>drwxr-x---</code> 一共十个字符，分成四段：<br>第一个字符表示文件属性，<code>-</code> 表示普通文件，<code>d</code> 表示目录，<code>l</code> 表示链接。<br>第二三四个字符 <code>rwx</code> 表示当前所属用户的权限。数值表示为 4+2+1=7<br>第五六七个字符 <code>r-x</code> 表示当前所属组的权限。数值表示为 4+0+1=5<br>第八九十个字符 <code>---</code> 表示其他用户权限。数值表示为 0+0+0=0<br>故 <code>fonts</code> 文件夹的权限用数值表示为 750</p><h3 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">chgrp -r <span class="params">&lt;file&gt;</span>                       <span class="meta">#更改文件所属用户组</span></span><br><span class="line">chown -r <span class="params">&lt;user&gt;</span>:<span class="params">&lt;group&gt;</span> <span class="params">&lt;file&gt;</span>        <span class="meta">#更改文件所属用户</span></span><br></pre></td></tr></table></figure><p><code>chmod</code> 命令可更改文件权限，其有 4 个参数</p><ul><li>指定用户及用户组：<code>[u &lt;指定用户&gt;  g &lt;指定用户组&gt;  o &lt;其他用户&gt;  a &lt;所有用户&gt;]</code></li><li>权限增减：<code>[+ 增加权限  - 减少权限]</code></li><li>权限变更内容：<code>[r  w  x]</code></li><li>权限变更的文件名： <code>&lt;file&gt;</code></li></ul><p>文件 newfile 的权限为 <code>-rw-r—-x</code>，如需将其权限更改为 <code>-rwxrw-r-x</code>（数值表示为 765），执行下列任意一条命令即可：<br><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">sudo chmod u+x,g+w,o+r <span class="keyword">new</span><span class="type">file</span></span><br><span class="line"><span class="type">sudo</span> chmod <span class="number">765</span> <span class="keyword">new</span><span class="type">file</span></span><br></pre></td></tr></table></figure></p><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">top                             <span class="comment">#实时显示进程信息</span></span><br><span class="line">ps aux                          <span class="comment">#显示进程信息</span></span><br><span class="line">ps aux | <span class="keyword">grep</span> &lt;<span class="keyword">package</span>&gt;         <span class="comment">#显示 &lt;package&gt; 程序的进程信息</span></span><br><span class="line"><span class="keyword">kill</span> &lt;PID&gt;                      <span class="comment">#终止 PID 为 &lt;PID&gt; 的进程</span></span><br><span class="line"><span class="keyword">kill</span> -<span class="number">2</span> &lt;PID&gt;                   <span class="comment">#中断进程，类似 Ctrl+C</span></span><br><span class="line"><span class="keyword">kill</span> -<span class="number">9</span> &lt;PID&gt;                   <span class="comment">#杀死进程</span></span><br></pre></td></tr></table></figure><table><thead><tr><th><code>top</code> 表头</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>PID</td><td>进程 ID</td><td></td></tr><tr><td>USER</td><td>进程的属主</td><td></td></tr><tr><td>PR</td><td>优先级</td><td></td></tr><tr><td>NI</td><td>Nice 值</td><td>负值表示高优先级<br>正值表示低优先级</td></tr><tr><td>VIRT</td><td>虚拟內存使用量</td><td>单位 KB</td></tr><tr><td>RES</td><td>固定內存使用量</td><td>单位 KB</td></tr><tr><td>SHR</td><td>共享内存大小</td><td>单位 KB</td></tr><tr><td>S</td><td>进程状态</td><td><code>D</code> 不可中断的睡眠状态<br><code>R</code> 运行<br><code>S</code> 睡眠<br><code>T</code> 跟踪 / 停止<br><code>Z</code> 僵尸进程</td></tr><tr><td>%CPU</td><td>CPU 占比</td><td></td></tr><tr><td>%MEM</td><td>内存占比</td><td></td></tr><tr><td>TIME+</td><td>进程实际使用 CPU 运作的时间</td><td>单位 1/100 秒</td></tr><tr><td>COMMAND</td><td>程序的实际指令</td></tr></tbody></table><hr><table><thead><tr><th><code>ps aux</code> 表头</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>USER</td><td>进程的属主</td><td></td></tr><tr><td>PID</td><td>进程 ID</td><td></td></tr><tr><td>%CPU</td><td>CPU 占比</td><td></td></tr><tr><td>%MEM</td><td>内存占比</td><td></td></tr><tr><td>VSZ</td><td>虚拟內存使用量</td><td>单位 KB</td></tr><tr><td>RSS</td><td>固定內存使用量</td><td>单位 KB</td></tr><tr><td>TTY</td><td>在哪个终端机上面运作</td><td><code>?</code> 与终端机无关<br><code>tty1-tty6</code> 本机登入者程序<br><code>pts/0</code>由网络连接进主机的程序</td></tr><tr><td>STAT</td><td>当前程序状态</td><td><code>D</code> 无法中断的休眠状态（通常 IO 的进程）<br><code>R</code> 正在运行可中在队列中可过行的<br><code>S</code> 处于休眠状态<br><code>T</code> 停止或被追踪<br><code>W</code> 进入内存交换 （从内核 2.6 开始无效）<br><code>X</code> 死掉的进程 （基本很少見）<br><code>Z</code> 僵尸进程<br><code>&lt;</code> 优先级高的进程<br><code>N</code> 优先级较低的进程<br><code>L</code> 有些页被锁进内存<br><code>s</code> 进程的领导者（在它之下有子进程）<br><code>l</code> 多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）<br><code>+</code> 位于后台的进程组</td></tr><tr><td>START</td><td>进程触发启动的时间</td><td></td></tr><tr><td>TIME</td><td>进程实际使用 CPU 运作的时间</td><td>单位秒</td></tr><tr><td>COMMAND</td><td>程序的实际指令</td></tr></tbody></table><h1 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h1><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">useradd -<span class="keyword">m</span> <span class="symbol">&lt;user&gt;</span>               #添加用户 <span class="symbol">&lt;user&gt;</span></span><br><span class="line">passwd <span class="symbol">&lt;user&gt;</span>                   #设置用户 <span class="symbol">&lt;user&gt;</span> 的密码</span><br><span class="line">userdel -r <span class="symbol">&lt;user&gt;</span>               #删除用户 <span class="symbol">&lt;user&gt;</span></span><br><span class="line">su <span class="symbol">&lt;userB&gt;</span>                      #临时切换到 <span class="symbol">&lt;userB&gt;</span> 身份工作，运行 `<span class="keyword">exit</span>` 命令返回</span><br><span class="line">groups                          #查看当前用户所属的组</span><br><span class="line">usermod -G <span class="symbol">&lt;group&gt;</span> <span class="symbol">&lt;user&gt;</span>       #将用户 <span class="symbol">&lt;user&gt;</span> 加入 <span class="symbol">&lt;group&gt;</span> 组</span><br><span class="line">usermod -g <span class="symbol">&lt;group&gt;</span> <span class="symbol">&lt;user&gt;</span>       #将用户 <span class="symbol">&lt;user&gt;</span> 加入 <span class="symbol">&lt;group&gt;</span> 组，并从原有用户组中除去</span><br></pre></td></tr></table></figure><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat</span> -tunpl                           <span class="comment">#列出所有监听的服务端口</span></span><br><span class="line">iptables -L -n                           <span class="comment">#查看防火墙设置</span></span><br><span class="line">iptables -F                              <span class="comment">#清空防火墙规则</span></span><br><span class="line">ifconfig -a |grep -i hw                  <span class="comment">#查看 MAC 地址</span></span><br><span class="line">ifconfig | awk <span class="string">'/eth/&#123;print <span class="variable">$1</span>,<span class="variable">$5</span>&#125;'</span>      <span class="comment">#查看 MAC 地址</span></span><br><span class="line">sudo lshw -c network | grep serial       <span class="comment">#查看 MAC 地址</span></span><br></pre></td></tr></table></figure><h2 id="添加指定端口的防火墙例外"><a href="#添加指定端口的防火墙例外" class="headerlink" title="添加指定端口的防火墙例外"></a>添加指定端口的防火墙例外</h2><p>添加指定端口 <code>&lt;port&gt;</code> 的防火墙例外使用如下命令：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -<span class="selector-tag">p</span> tcp --dport &lt;port&gt; -j ACCEPT</span><br></pre></td></tr></table></figure></p><h2 id="简单的-HTTP-服务"><a href="#简单的-HTTP-服务" class="headerlink" title="简单的 HTTP 服务"></a>简单的 HTTP 服务</h2><p>搭建一个简单的 Web Server，使用 HTTP 服务将 <code>&lt;http_dir&gt;</code> 中的目录和文件以 HTTP 的方式展示出来：<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="symbol">&lt;http_dir&gt;</span> &amp;&amp; <span class="keyword">python</span> -<span class="keyword">m</span> SimpleHTTPServer <span class="symbol">&lt;port&gt;</span></span><br></pre></td></tr></table></figure></p><p>若本机的外网 IP 为 <code>&lt;IP&gt;</code>，使用浏览器访问 <code>http://&lt;IP&gt;:&lt;port&gt;</code> 即可浏览 <code>&lt;http_dir&gt;</code> 目录。这是一个可以用来共享文件的非常有用的方式。</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><h2 id="设置开机启动："><a href="#设置开机启动：" class="headerlink" title="设置开机启动："></a>设置开机启动：</h2><h3 id="开机启动命令"><a href="#开机启动命令" class="headerlink" title="开机启动命令"></a>开机启动命令</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">vi /etc/rc.<span class="keyword">local</span></span><br></pre></td></tr></table></figure><p>将开机启动命令写入上述文件即可。</p><h3 id="开机启动服务"><a href="#开机启动服务" class="headerlink" title="开机启动服务"></a>开机启动服务</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">chkconfig --list          显示开机可以自动启动的服务</span><br><span class="line">chkconfig --<span class="keyword">add</span><span class="bash">          添加开机自动启动 *** 服务</span></span><br><span class="line"><span class="bash">chkconfig --del          删除开机自动启动 *** 服务</span></span><br><span class="line"><span class="bash">setup                    在 shell 的 GUI 中进行详细配置</span></span><br><span class="line"><span class="bash">ntsysv                   在 shell 的 GUI 中进行简单配置</span></span><br></pre></td></tr></table></figure><h2 id="修改-SSH-默认端口"><a href="#修改-SSH-默认端口" class="headerlink" title="修改 SSH 默认端口"></a>修改 SSH 默认端口</h2><p>SSH 默认端口一般为 <code>22</code>，可通过修改配置文件自定义 SSH 默认端口：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure></p><p>修改文件中 <code>#Port &lt;port&gt;</code> 的 <code>&lt;port&gt;</code> 为自定义的端口，并删除 <code>#</code> 使之生效。</p><h2 id="限制-SSH-登录的-IP"><a href="#限制-SSH-登录的-IP" class="headerlink" title="限制 SSH 登录的 IP"></a>限制 SSH 登录的 IP</h2><p>如需限制指定 <code>&lt;IP&gt;</code> 使用 SSH 登录，可编辑文件实现：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>hosts.deny</span><br></pre></td></tr></table></figure></p><p>文件末尾加入 <code>sshd:ALL</code><br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>hosts.allow</span><br></pre></td></tr></table></figure></p><p>文件末尾加入 <code>sshd:&lt;IP&gt;</code></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.jianshu.com/p/a6a594a00b5b" target="_blank" rel="noopener">GNU/Linux 与开源文化的那些人和事</a><br><a href="https://chusiang.gitbooks.io/working-on-gnu-linux/content/" target="_blank" rel="noopener">完全用 GNU/Linux 工作</a><br><a href="http://blog.csdn.net/xiaoguaihai/article/details/8705992" target="_blank" rel="noopener">【Linux】linux 常用基本命令</a><br><a href="http://www.cnblogs.com/xpjiang/p/5089137.html" target="_blank" rel="noopener">九十分钟极速入门 Linux——Linux Guide for Developments 学习笔记</a><br><a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="noopener">Linux 工具快速教程</a><br><a href="https://github.com/dwqs/blog/issues/30" target="_blank" rel="noopener">Linux 的文件权限</a><br><a href="http://coolshell.cn/articles/1480.html" target="_blank" rel="noopener">非常简单的Python HTTP服务</a><br><a href="http://www.epubit.com.cn/article/412" target="_blank" rel="noopener">Linux 常用命令及使用技巧</a><br><a href="https://zhuanlan.zhihu.com/p/21278816" target="_blank" rel="noopener">vim/vi 命令整理</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ShadowsocksR简明教程</title>
      <link href="/how-to-use-shadowsocks-rss/"/>
      <url>/how-to-use-shadowsocks-rss/</url>
      
        <content type="html"><![CDATA[<p>简明教程系列：<br><a href="/how-to-use-shadowrocket/">Shadowrocket 简明教程</a><br><a href="/how-to-use-ssr-android/">SSR for Android 简明教程</a></p><hr><p>在网上看到的软件配置教程都不够满意，特此成文帮助使用 shadowsocks-rss for Windows 的朋友快速上手。</p><a id="more"></a><p>把大象放进冰箱只需三步：</p><ol><li>开门：添加服务器信息（可手动添加或扫码或链接添加）</li><li>把大象放进去：设置系统代理模式并更新代理规则</li><li>关门：连接代理</li></ol><h1 id="添加服务器信息"><a href="#添加服务器信息" class="headerlink" title="添加服务器信息"></a>添加服务器信息</h1><p>程序运行后将自动在系统托盘（桌面右下角，与 QQ 等软件在一起）后台运行，可右击软件图标，扫描屏幕中显示的<strong>二维码添加</strong>服务器配置，或复制服务器配置链接后选择其<strong>从剪贴板复制地址</strong>添加服务器配置</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b991ae4f82.png" alt="添加服务器信息"></p><p>也可以双击软件图标打开服务器配置页面进行修改或添加新的服务器配置，添加 / 修改后点击「确定」使配置生效</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b991b53ef1.png" alt="修改或添加服务器信息"></p><h1 id="设置代理规则和系统代理模式"><a href="#设置代理规则和系统代理模式" class="headerlink" title="设置代理规则和系统代理模式"></a>设置代理规则和系统代理模式</h1><p>右击软件图标，在<strong>代理规则</strong>选项中选择「绕过局域网和大陆」。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b99190bd72.png" alt="设置代理规则"></p><p>下载 <a href="https://softs.fun/Other/pac.txt" target="_blank" rel="noopener">GFWList PAC文件</a>（右键 链接另存为…，如无法下载可使用<a href="https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/other/pac.txt" target="_blank" rel="noopener">备用链接</a>），右击软件图标，在<strong>PAC</strong>选项中选择「编辑本地 PAC 文件」，在打开的窗口中使用下载下来的 <a href="https://softs.fun/Other/pac.txt" target="_blank" rel="noopener">GFWList PAC文件</a> 替换已有的 pac.txt 文件。</p><p><img src="https://i.loli.net/2018/05/17/5afda04c0c79b.png" alt="更新 PAC 为 GFWList"></p><p>右击软件图标，<strong>系统代理模式</strong>选项中的默认选项是不修改系统（IE）代理，<strong>推荐</strong>选择「PAC 模式」可使系统中符合 GFWList （一个无法正常访问的网站列表）的网络连接通过代理进行连接。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9917e03f0.png" alt="默认不修改系统（IE）代理"><br><img src="https://ooo.0o0.ooo/2016/10/22/580b991962bc3.png" alt="设置PAC模式"></p><p>右击软件图标，在<strong>系统代理模式</strong>选项中选择「全局模式」可使系统的所有网络连接通过代理进行连接。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b991ad0ff6.png" alt="设置全局模式"></p><p>进行上述设置后代理自动生效，无需特殊开关。</p><h1 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h1><p>仅仅只进行上述操作是远远不够的，在可以使用代理的情况下，我们推荐使用 <a href="https://www.google.com/chrome/browser/desktop/" target="_blank" rel="noopener">Chrome 浏览器</a> 浏览网站。其可以使用特定插件进一步自定义的代理规则，方法如下：</p><h2 id="安装-Chrome-插件"><a href="#安装-Chrome-插件" class="headerlink" title="安装 Chrome 插件"></a>安装 Chrome 插件</h2><p>使用 Chrome 浏览器打开 <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN" target="_blank" rel="noopener">Proxy SwitchyOmega</a> 并安装该插件</p><h2 id="插件设置"><a href="#插件设置" class="headerlink" title="插件设置"></a>插件设置</h2><p>插件安装后会出现在浏览器地址栏右侧（如下图），单击插件图标进入<strong>选项</strong>进行插件设置</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b991b2ee69.png" alt="Proxy SwitchyOmega"></p><p>新建情景模式 - 随意名称 - 创建代理服务器</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9918cf4ce.png" alt="新建情景模式"><br><img src="https://ooo.0o0.ooo/2016/10/22/580b9acc76fcb.png" alt="创建代理服务器"></p><p>选择刚刚创建的情景模式，代理协议 socks5，代理服务器 127.0.0.1，代理端口 1080，并应用选项</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9accb760b.png" alt="设置代理服务器"></p><p>在遇到无法正常访问的网站时，单击插件图标，选择自己创建的代理服务器情景模式，刷新网页即可自动使用代理进行访问。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9acbdfcc0.png" alt="指定情景模式进行代理"></p><p>但是这样不够智能，还需要手动频繁切换，我们可使用<strong>自动切换</strong>情景模式。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9acc7acca.png" alt="自动切换情景模式进行代理"></p><p>在遇到无法正常访问的网站时，单击插件图标，<strong>添加条件</strong>，将弹出的设置窗口中情景模式设置为自己创建的代理服务器情景模式，刷新网页即可自动使用代理进行访问，且今后再次访问该网域也将自动使用该情景模式。类似的，不需要代理的网站可设置其情景模式为直接连接即可。</p><p><img src="https://ooo.0o0.ooo/2016/10/22/580b9acc7b8cf.png" alt="添加条件"><br><img src="https://ooo.0o0.ooo/2016/10/22/580b9acd4767c.png" alt="添加特定网站的情景模式"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> ShadowsocksR </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Shadowrocket简明教程</title>
      <link href="/how-to-use-shadowrocket/"/>
      <url>/how-to-use-shadowrocket/</url>
      
        <content type="html"><![CDATA[<p>简明教程系列：<br><a href="/how-to-use-ssr-android/">SSR for Android 简明教程</a><br><a href="/how-to-use-shadowsocks-rss/">ShadowsocksR 简明教程</a></p><hr><p>在网上看到的软件配置教程都不够满意，特此成文帮助使用小火箭的朋友快速上手。</p><a id="more"></a><p>把大象放进冰箱只需三步：</p><ol><li>开门：添加服务器信息（可扫码或手动添加）</li><li>把大象放进去：设置代理规则</li><li>关门：连接代理</li></ol><h1 id="添加服务器信息"><a href="#添加服务器信息" class="headerlink" title="添加服务器信息"></a>添加服务器信息</h1><p>程序<strong>首页</strong>可扫描二维码添加服务器配置，或手动添加服务器配置<br><img src="https://ooo.0o0.ooo/2016/10/22/580b57e4b1549.png" alt="程序首页"></p><p>手动添加服务器配置如下图所示<br><img src="https://ooo.0o0.ooo/2016/10/23/580c4081ded4b.png" alt="手动添加服务器配置"></p><h1 id="设置代理规则"><a href="#设置代理规则" class="headerlink" title="设置代理规则"></a>设置代理规则</h1><p>程序<strong>配置</strong>页添加代理规则配置<br>代理规则文件推荐使用：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/lhie1/</span>Rules<span class="regexp">/master/</span>Shadowrocket.conf</span><br></pre></td></tr></table></figure></p><p>联网状态下添加远程文件后该文件将自动下载至本地，确认使用刚刚添加的代理规则文件<br><img src="https://ooo.0o0.ooo/2016/10/22/580b57e62e9d8.png" alt="03.png"></p><p>程序<strong>设置</strong>页选择全局路由为 <code>Config</code><br><img src="https://ooo.0o0.ooo/2016/10/22/580b57e4ad8dd.png" alt="04.png"></p><h1 id="连接代理"><a href="#连接代理" class="headerlink" title="连接代理"></a>连接代理</h1><p>返回程序<strong>首页</strong>连接代理，系统弹出 VPN 连接权限通知时点击允许（Allow）。<br><img src="https://ooo.0o0.ooo/2016/10/22/580b57e4af848.png" alt="05.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> ShadowsocksR </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSR for Android简明教程</title>
      <link href="/how-to-use-ssr-android/"/>
      <url>/how-to-use-ssr-android/</url>
      
        <content type="html"><![CDATA[<p>简明教程系列：<br><a href="/how-to-use-shadowrocket/">Shadowrocket 简明教程</a><br><a href="/how-to-use-shadowsocks-rss/">ShadowsocksR 简明教程</a></p><hr><p>在网上看到的软件配置教程都不够满意，特此成文帮助使用 shadowsocks-rss for Android 的朋友快速上手。</p><a id="more"></a><p>把大象放进冰箱只需三步：</p><ol><li>开门：添加服务器信息（可手动添加或扫码或链接添加）</li><li>把大象放进去：设置代理规则和需要代理的程序</li><li>关门：连接代理</li></ol><h1 id="添加服务器信息"><a href="#添加服务器信息" class="headerlink" title="添加服务器信息"></a>添加服务器信息</h1><p>程序<strong>首页</strong>可手动修改服务器信息，或点击 LOGO 进入服务器配置页面添加新的配置<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74ad75cea.png" alt="01.png"></p><p>通常扫描二维码或从剪贴板导入链接进行添加新的配置<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74ae78b35.png" alt="02.png"></p><p>添加成功后确认使用刚刚添加的服务器节点<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74ad6e90f.png" alt="03.png"></p><h1 id="设置代理规则和需要代理的程序"><a href="#设置代理规则和需要代理的程序" class="headerlink" title="设置代理规则和需要代理的程序"></a>设置代理规则和需要代理的程序</h1><p>返回程序<strong>首页</strong>，路由选项选择绕过局域网和大陆网站。根据需要设置开机自动启动。并设置分应用代理。<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74ae26f0e.png" alt="04.png"></p><p>在<strong>分应用代理</strong>页面开启绕行模式，勾选所有不需要代理的 App，这将使开启代理后自动绕过这些不需代理的 App，而没有勾选的 App 和系统本身将通过代理进行连接。你亦可反向分应用代理，不开启绕行模式，勾选需要代理的特定 App 进行使用，此选择下系统层面的网络连接无法通过代理服务器进行连接。<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74aea7694.png" alt="05.png"></p><h1 id="连接代理"><a href="#连接代理" class="headerlink" title="连接代理"></a>连接代理</h1><p>返回程序<strong>首页</strong>点击小飞机标志连接代理。<br><img src="https://ooo.0o0.ooo/2016/10/22/580b74ae8e310.png" alt="06.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> ShadowsocksR </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《日本的思想》读书笔记</title>
      <link href="/japanese-thought-clip/"/>
      <url>/japanese-thought-clip/</url>
      
        <content type="html"><![CDATA[<p>第64页</p><p>我们的传统宗教，没有一个能发挥与新时代流入的意识形态进行思想交锋、并通过这个交锋使传统发挥自觉再生的作用，因此新思想一个一个地被无秩序地积埋，使近代日本人精神上的杂居性愈演愈烈。日本的近代天皇制正试图把权力核心同时作为精神“机轴”用以对付这种事态，但是，因国体是以杂居性的“传统”本身作为自身的实体的，所以它并不能成为将我们的思想进行实质性整合的原理，而只在否定性的同质化（异端的排除）作用方面发挥了强大作用，它对于人格性主体——无论是自由认识主体上的意义、伦理责任主体的意义或是秩序形成的主体的意义——的确立，从一开始就包含着成为决定性桎梏的命运。战后的变革使得这个似是而非的“精神机轴”一举颠覆。在这里，原本存在于日本人精神状况中的杂居的无秩序性，由于第二次“开国”几乎显露到了极限。思想界的纷乱这个词在明治以来，曾是统治阶层以及道学保守主义者的共通说法。但是，思想与现实之间自由地相互交流的条件，在战前明显地受到了阻碍，就此看来，可以说，现在我们才开始迎来了真正的思想的纷乱。实在不知从中会产生出什么，但是可以确切地说，是我们已经不能从这个地点折回，也没有必要从这个地点折回了。</p><a id="more"></a><p>第58页</p><p><strong>理论信仰的产生</strong></p><p>然而马克思主义在日本具有如此巨大的思想史意义，其本身还有着悲剧与不幸的缘由。近世合理主义的逻辑与基督教的良心以及近代科学的试验操作精神——这三者作为现代西欧思想的传统，或明或暗地成为马克思主义的前提。而究竟由怎样的世界观来把这三者的任务兼于一身付诸实现呢？日本的马克思主义难堪如此重负，这也不足为怪。反过来说，首先第一点，凡理论性的东西、概念性的东西、抽象性的东西，都遭到了日本式感性的抵抗和排斥，结果，马克思主义必须完全承受这一切。第二，不仅马克思主义者，一般的哲学家、社会科学家、思想家也在这一点上多少有些相通，尤其是专家以外的广大读者层或是政治家、实业家、军人、新闻工作者等等，在把哲学、社会科学作为一种“教养”来重视时，则以更激烈的形式表现出对理论乃至思想的拜物教倾向，正是因马克思主义具有体系性，以致使人们认为似乎这是马克思主义特有的。也正如马克思主义独占了“思想问题”一样，直到今日，人们仍认为公式主义是马克思主义的专卖。这时“公式”所包含的意味和机能几乎没有得到反省。而且，马克思主义以外的主义、世界观、教义等等在日本的土壤中被理解和信奉时，难道没有形成不亚于马克思主义的公式主义吗？此类问题亦往往被人们忽略。</p><p>理论信仰的发生与制度的拜物化在精神构造上是对应的。近代日本在引进制度或“机制”时，并不是将其作为创造源泉的精神——自由的主体站在严密的方法自觉的立场上，将对象进行概念性整合，通过不断的验证将其再构筑的这种精神——而是作为既成品来接受的，与此相平行，在此往往不是重视其从现实出发的抽象化作用，而是重视其被抽象化了的结果。因此，理论、概念等就失去了作为虚构的意味，反而转化成了一种现实。因此，外国的教员们常带着讽刺的意味发出惊叹，说日本的大学生、知识分子通过各种各样范畴的“抽象的”组合进行概念操作，比起西方人来还得心应手。</p><p>然而这样一来，被置于与现实同一平面的理论，与丰饶的现实相比，当然就显得贫乏而可怜。特别是对于前面所述的那种与“实感”紧密结合的文学家来说，这种理论几乎是难以忍受的精神上的暴力。由于公式成为了公式主义，所以对其的抗拒也就成了对公式本身的蔑视，以致实感信仰与理论信仰形成了种无尽的恶性循环。</p><p>另外，第三，在理论与现实的关系上，作为总体世界观的马克思主义，其特有的思考方式与日本的知识分子的思考方式相结合，进一步加速了理论的拜物化倾向，这一点也是不能忽视的。众所周知，黑格尔主义主张密涅瓦的猫头鹰①到了傍晚才起飞，即当一定的历史现实几乎毫无保留地得到展现之时，哲学将理性地把握之，并使之上升到概念的层次。马克思主义是在继承这一立场的同时并将其逆转的过程中成立的。世界的总体性自我认识的成立正好成了世界没落的印证，这正是马克思试图将资本制生产全过程理论化的超乎寻常的能量源泉之所在。然而，对历史中的现实进行总体性把握的这种想法，一旦扎根于日本这个传统上还缺乏把理论作为虚构来思考的国家，往往会导致轻易地信仰理论（乃至法则）与现实之间会形成某种预定调和的倾向。</p><p> ①密涅瓦（Minerva）的猫头鹰：密涅瓦是罗马神话中掌管技术的女神，密涅瓦的猫头鹰被认为是智慧的象征。</p><p>第56页</p><p><strong>日本的马克思主义在思想史上的意义</strong></p><p>在所有的政治和社会的意识形态中嗅出一种“不洁的抽象”一味地沉溺于自我的实感，这种思考方式一旦压倒地被巨大的政治性现实例如战争所围绕，几乎都用与对自然的现实同样“纯粹”的心情将其绝对化，关于这个过程，在此不作深入叙述。不过，最后，我想把代表我国社会科学的思考、并传统触发了文学“实感”的抵抗的马克思主义的问题，与上述题目联系起来，对近代日本的知性构造中的问题性作—个概括。</p><p>马克思主义一手独揽了代表社会科学的地位，这自有与其相应的必然性。第一，有了马克思主义，日本的知识界才因之而开始把社会现实分别地按政治、法律、哲学、经济等方面来把握，不仅如此，并且学会了用相互联系的观点来综合地考察问题的方法。另外关于历史，也学到了不单单用历史资料确定个别事实，或只着眼于领袖人物的枯荣兴衰，而是寻求在多样的历史表象背后驱动历史运动的基本导因。这种综合社会科学和构造性历史学的观点，虽然在移植孔德、卢梭、斯宾塞、巴克尔等人思想的明治初期出现过。但由于天皇制的统合过程以及如同在欧洲十九世纪以后社会科学的个别化专门化急速推进，一方面学术机构的各科起初就以专门化学问的形态引进，另一方面新闻传媒则越来越大众化，这两方面的原因使上述观点从知性世界中便不知不觉地消失了。马克思主义的一个巨大的学问的魅力就在于此。</p><p>第二，与上述的内容相关联，马克思主义明确揭示出，任何科学研究都不可能完全没有前提，不管自己是否意识到，科学者都是站在一定的价值取向上进行理性操作的。以往只是在哲学方面、而且是极其观念地意识到了的学问与思想不可割离的关系，马克思主义则以“党派性”的过激形态，将其推到了所有科学者面前。而且，这种思想不是用来对世界作各种解释，而是把改变世界作为自己的必然任务的。认识的主体一旦从作为直接所与的现实中隔离开来，置身于与之甚为紧张的关系中，从而逻辑性地重新构成世界，这样才能使理论成为推动现实的杠杆。这种自笛卡儿、培根以来，当然地内在于近代知性中的逻辑，在我国可以说是因马克思主义才得以大规模地唤醒。另外，在我国这个向来没有基督教传统的国家，也正是马克思主义以广泛的社会规模教会了我们：“思想”不单是书斋里精神享受的对象，思想肩负着作为人的人格责任。即便共产党人的大量转向，如前所述，其思考方式大多数是以传统的形式出现的，但思想的转向好歹也以各种形式留下了一种良心上的印记，这至少在以往的“思想”中是看不到的。仅由此点也可以明白把马克思主义给日本知识分子带来的深刻影响与对待其它的外来思想那样，一概归结为日本人的追逐时尚和知性好奇心，这是多么肤浅的观点！</p><p>第55页</p><p><strong>实感信仰的问题</strong></p><p>日本的近代文学，是被“家”的同化和“官僚的机构化”这两股推进日本的“近代”的强大的力量挟持着，在力图抓住自我的现实感的努力摸索中起步的。并且，在这里，（i）在表现感觉的细微差异上词汇丰富，而在表现逻辑性的、普遍性的概念上词汇贫乏的日语特性，（ii）与以上的日语特性相关联，将感情寄托于四季自然，或者对人的言行举止进行细致观察，并且将微妙摇摆的“心情”用极度精练的文体来形象化的日本文学的传统，（iii）现实主义只作为劝善惩恶的反命题而产生，不具备合理精神（古典主义）和自然科学精神作前提，因而容易与国学的那种把事实绝对化和紧密贴合于直接感觉的传统相连接，以致在自我意识内部，规范感觉极难从欲望和好恶感情中分离开来，（iv）大多数文学者（不包括鸥外那样的例子）或是从官僚制的阶梯中落伍者，或是对直接环境（家和乡土）的逃逸者，要不然就是为了弥补政治运动的挫折感才进入文学领域的，不管哪种情况，都背离了日本帝国“正常”的臣民途径，作为“多余者”已为自己和他人所认可的。由于这些情况，这些文学者与制度上的近代化的关系变得淡薄，从而超越自觉的思想立场，不得不显著地倾向于“传统的”心情和美感方面。</p><p>对制度的反抗（反官僚的情绪）与对抽象性、概念性的生理上的厌恶难以分离地结合在一起，加之胚胎于对如前所述“升官发迹社会”的地位名誉的反感和轻蔑（有时是自卑感）的反俗物主义，借助了佛教式的某种厌世观，便产生出俗世＝现象的世界＝概念的世界＝规范（法则）的世界这样一个等式，对合理性思考、法则性思考的反抗便越发“传统化”了。而且，也不具有像欧洲的浪漫主义者那种从根本上否定自然科学知性的精神，因为整个近代日本，对自然科学及技术成果过分依存，日本文学者也缺乏对科学真确性存疑的强烈或者说是顽固）态度。这样一方面是不可否定的自然科学领域，另一方面是感觉所能触及的狭隘的日常现实，唯有这两极被作为确实的世界而保留了下来。文学上的实感，也只在后者狭隘的日常感觉世界中，或在由绝对自我超越时空，并以“自由”的直观来把握瞬间闪烁的真实之中得到满足。而介于两者之间的“社会”这一世界则本来就是暧昧的，不论从哪个角度都可以解释的，最终都不外是逐渐变化而过的现象。究极的选择只归于 2×2＝4，或文体的问题！（小林秀雄《致X的信》）</p><p>第46页</p><p>日本统一国家的形成和资本的原始积累的强势实施，在迅速应对国际压力、从而“不亚于外国”的目标下以惊人的速度推进。不用说，这些已经原原本本地被一刻也不停息的近代化官僚制的统治贯彻到末端的行政村，以轻工业以及巨大军需工业为主轴的产业革命被迅速推行所继承。之所以如此其社会的秘密之一，在于以自主性特权为依据的封建的、身份上的中间势力的抵抗力非常脆弱。在明治政府开设帝国议会之前不得不先创设华族制度（造出来的贵族制，这本来就是形容矛盾）由此讽刺意味可知，像欧洲的那种承担社会荣誉的坚韧的贵族传统自治都市、特权行会、拥有禁入权的寺院等对国家权力形成社会性抵抗的势力，在日本是何等的脆弱。前面论述过的“出人头地”的社会流动性之所以能相当早期地形成，其原因就在于此。在政治经济文化及所有方面，近代日本都是暴发户型进升的社会（统治层本身则多由这些暴发户构成）而未经民主化的“大众化”现象也伴随着科技的普及而比较早地就显著形成了。</p><p>第45页</p><p>经历了从霍布斯到洛克再到卢梭而完成的近代国家政治理论，与近世认识论的发展并行，虽然各有很大的不同，但都同样地承继了由主体的作为使经验世界组组织化的这种想法，把作为顶端的创造主体的君主的作用转回到底层的主体的市民的作用上。而且，此时作为虚构的国家观还结出了社会契约论的果实，而对于“生的充溢”与制度之间的距离感依然被保持着。使这两者的二元紧张关系得以逻辑化的，正是确立“自然状态”和国家状态——仍以各自不同的方法——的关系。即使“契约说”作为一种“学说”变得陈腐以后，那种把“由绝大多数人服从于少数人”的旧有政治社会的现实看成“一个惊人的现象”的自觉意识(H. J. Laski, The Grammar of Politics, p. 21)，在上述紧张意识的支撑下形成了市民社会的传统，并成为不断地对权力正当性的根据进行质疑的源泉。</p><p>第39页</p><p>同样是儒教的自然法思想，在中国则表现出较强的规范性、契约性的特征，而在日本却表现出权威（恩情）和报恩的契机，这并不仅是学者解释上的差异，而是渗透到封建制或家产官僚制内部构成其现实的作用关联的一种“精神”。</p><p>第35页</p><p>由于战败而接受了波茨坦宣言，因此日本统治层要再一次、这回则是在极其绝望的状况下，被迫给国体下―个极限的定义。我方（日本）在接受波茨坦宣言时，附加了“在允许了不包括要求变更天皇对国家的统治大权的情况下”这一条件，对此，盟军方面的回答是，“天皇及日本政府对国家统治的权限”“从属于盟军最高司令官”，日本的最终统治形式将根据“国民自由表明的意思”来决定。“subject to”在此“勉强意译为‘在限制之下’”，“The ultimate form of ( the ) govemment of Japan”“译为‘最终的日本国政府的形态’，以此尽量避免使用可能联想到包含天皇的国体之类的政治形态或统治组织等用语”（外务省编《终战史录》，第 631 页，原文有着重号）。尽管外务当局如此煞苦心，但在御前会议中，这种写法是否意味着国体的变革这―问题仍引起了十分激烈的争论，以致推迟了投降的决定，这是众所周知的了。令人吃惊的，与其说是在此最后关头日本统治层依然最关心维护国体，毋宁说是对于统治阶层如此具有决定性意义、并在事实上作为国民统合“原理”起着如此有效作用的这个实体终究意味着什么？关于这―点，在日本帝国的最高首脑层次也得不出―致的结论，最后只能由“圣断”来解决。而且，围绕着“圣断”是否能保全国体这―问题，军部又分裂为“承诏必谨派＂和“神州防卫派”！后者认为“即便―时违背天皇裕仁的意图，但能守住皇祖皇宗以来建立的国体的本旨，那么在更大的意义上是真正的忠节气（大井笃《天皇制与太平洋战争》，同前，第 752 页）。</p><p>第33页</p><p>曾在东京大学执教的莱德雷在所著的《日本＝欧洲》（Japan-Europa，1929）一书中记录了他在日本期间所见识而感到震动的两件事。一件是大正十二年末发生的难波大助的摄政宫狙击事件（虎之门事件）。此事件之所以令他震惊，与其说是狂热主义者的行为本身，不如说是“接下来发生的事”。内阁辞职，从警视总监到路边值勤的警察等一连串的“责任者”（作者强调他们都不在能阻止凶犯恶行的位置）都受到了免去官职的惩罚，不仅如此，而且连犯人的父亲也被辞去众议院议员之职，在门前围起竹栅栏，足不出户；乡里的人们也取消了正月的庆祝进入“丧”期；连大助曾毕业的小学的校长乃至班级训导都因曾经教过如此不法之徒而辞职。这样一种对责任的漫无边际的承担方式，还有把这看成理所当然的社会的无形压力，在这位德国教授眼里完全是一幅异样的光景。他所举出的另一件事，即（大概是在大地震时）为了抢救出在大火中燃烧的天皇照片，很多学校的校长都因此殒命。“进步团体曾提议，应该让此等怕遭不测的天皇照片远离学校。与其让校长们烧死，还不如把照片烧掉，这种想法居然完全没有成为问题。＂（着重号是莱德雷的强调，原书230页）日本天皇制也许的确不像沙皇主义在权力行使方面那样残忍，但是，西欧的君主制，甚至与东正教会相结合的帝政俄国，也难以想像出这种对社会责任的承担方式。这里并不是要讨论孰好孰坏，应该指出，这里潜在的问题，与代日本的“精神”和“机构”都绝非无缘，也非例外。</p><p>第28页</p><p>“仅仅大不能算是伟大，极尽奢侈也不能算是高尚。加入到所谓现代文明大机构组织中的个人，正成为机械习惯的奴隶，受到曾由自己制造的怪物无情地制御。虽然西方高谈自由，但为了争得财富而伤害了真正的个性，为了无穷无尽的渴望而牺牲了自己的幸福和满足。西洋夸耀自己从中世的迷信中得到解放，又是如何看待对富有的偶像崇拜的呢？在现代绚烂的假面背后，又隐藏着多少苦恼和不满呢？”（《日本的觉醒》岩波文库版，54页）冈仓天心的这段话是很有“预言性”的，如果隐去其名，便可与奥尔特加、瓦勒里、汤因比等思想家的“精神危机”的名言完全相通。</p><p>然而并不像人们单纯的理解那样，从文明开化到自由民权的一系列思想，——与后来的国粹主义抬头的时代相比——它们对欧洲的理解并不是那么“天真的”。一直就有人指出，以天赋人权论为依据的民权论者中，大部分人存在着如下思想的分裂，即在国内采取自然法合理主义立场，在国际社会则采取弱肉强食观念的。（参照：冈义武《明治初期自由民权论者眼中的当时国际形势》，《明治史研究丛书》第四卷所收。）罗素曾经辛辣地指出，欧洲文化相对于中国文化的优越性，并不是基于但丁、莎士比亚、歌德比孔子、老子占优势，而是基于这样一个更残酷的事实，即平均起来一个欧洲人杀死一个中国人要比相反的情况更容易一些。而对于东洋来说，最切身而具体的感受是，“欧洲近代”意味着与帝国主义相结合的机械和技术。但从我国来看，先是对中国的思想文化传统抱有“传统的”自卑感，继而又对西洋抱有自卑感，因此，东洋与西洋的问题，和日本作为东洋“近代化”优胜者的问题在思想上交错，这种交错后来甚至强化了日本实现帝国主义的发展的虚伪意识的性格，促成了轻率的东西方“综合”观的发酵。</p><p>第26页</p><p>而且直到今天，战争期间的那些著名“世界史的哲学”家还在说“日本新宪法是建立在轻视国家、社会义务，极度重视个人人权的权利一边倒的基调上的，这宛然是社会思想产生之前的时代产物，提倡的是法国大革命人权宣言时代的主张。提出新类型的权利，还不能保证新宪法的新时代性和进步性。在经过了为社会公共福利而抑制自由主义的偏重个人权利、尊重义务的社会主义精神阶段之后的现阶段，如何调节权利义务的关系，这应成为有最先进思想立场的课题。从这一点来看，我们可以说日本的新宪法在其思想基调上，是存在于社会主义以前阶段的时代错误的作品”（高山岩男《战后日本的精神状况》127―128页，《现代宗教讲座》VI），他们如此指责，并嘲笑那些“叫嚣拥护这个旧时代的宪法”的知识分子和社会主义政党的“时代错误”。在这里，加藤弘之以来的那种极陈腐的批判方式在与庸俗的发展阶段论相结合中重新表现出来了。</p><p>第21页</p><p>“神道”可以说像一个毫无内容而不断延长的空白布筒，它是用每个时代强有力的宗教“习合”（指把相异的教理折衷调和—译者）来填充其教义内容的。毋庸置疑，神道的这种“无限拥抱”性和思想杂居性，集中地表现了上述指出的日本思想的“传统”。正因为它没有绝对者，又没有以独特的方式形成对世界进行逻辑性、规范性整合的“道”，所以对外来意识形态的感染也无抵御的装备。国学试图对“布筒”中的内容进行清扫——排除汉意和佛意——时，自然要面对这样一种矛盾，即两个难以区分的契机中，赞扬前者（即没有“道”）却又慨叹者（即思想的感染性）。（这也是后来所有国粹主义者所面临的矛盾。）宣长这种完全靠着直接感觉，拒绝一切抽象化的方法，在社会和政治方面反而导致了这样的机会主义，不以儒治则难治时，就以儒治国。无佛则不能成就时，则以佛治国，此皆其时之神道也”（《铃屋答问录》）。与此相对照，试图重新构筑“神道”世界观的笃胤，则作为“道”的规范化所要付出的代价，去再次“拥抱”儒佛甚至包括基督教，表现出一种泛日本主义。</p><p>第20页</p><p>不过，这里特别显著的一点是，宣长把道、自然、性等范畴的一切抽象化、规范化都当作汉意一律加以排斥，并把一切抽象的议论全部排斥，只想追求纯感觉上的事实。由此，他的批判即便能算是意识形态揭露，但本来就不可能是以一定的原理立场作根据的意识形态批判。这虽然准确地触及了儒者对其教义的现实妥当性缺乏斟酌的盲点，但由此而摈弃一切逻辑化即抽象化，认为日本不存在规范化思考，这恰恰证明了日本事实上的良好状态并不需要任何“教义”，从而否定了现实与规范之间紧张关系本身的意义。由此而产生的倾向，一方面是对与生俱来的感性的尊重，另一方面则是对既成的统治体制的被动追随，结果只能是在这两重意义上对“既成的”状况作出肯定现状的反应。</p><p>第19页</p><p>所谓富强者，既非我有，而适足以借贼兵赍盗粮耳。”（同上、卷一）强调了思想国防的重要性。这里我们可以发现杜勒斯式的间接侵略的逻辑已经完全成型并显现出来。当然，人们也许会说这只是在突然面对异文化激烈冲击时，传统集团一同显示出来的一种自卑感。要是如此，那么本居宣长著名的儒教批判方式又如何解释呢？他指出：“在汉土，所谓道究其要旨无非二法也，即夺人国与防人夺己国而己。”因此，比如“所谓天命，在彼国古代不过是灭君夺国的圣人为开脱罪责而捏造出来的口实罢了”（《直昆灵》）。这里与其说是以哲学构筑为荣的儒教思想的冗长理论一“设置了各式各样的繁杂名目”—的内容本身为问题，不如说揭露了它是一种替统治者或篡权者隐瞒或美化现实的意识形态。</p><p>第19页</p><p>对意识形态的批判在欧洲成为一般常识，是到了第一次世界大战后，那一代人“不仅目睹了对各种观念的真理性的普遍不信，并目睹了对各种观念的主张者的动机的普遍不信”（K. Mannheim，Ideology and Utopia，Preface by L. Wirth，XIII）以后才发生。</p><p>第16页</p><p>在此并不是说上述这些东西之间是没有任何类似性的，也不是说找出其中的共通性本身没有意义。如果说人类的思考自古以来不会发生什么变化，那讨论便到此止了。应指出，在理解异文化背景下的精神作品时，我们非常缺乏首先把它看成与自己彻底不同的东西来对待的心理准备，从在这种意义上表现出的良好的事物理解力所产生的与异文化轻易接合的“传统”，反而阻碍着任何外来文化形成传统，这才是重要的问题点。特别是明治以后，在对知识贪婪的好奇心和头脑置换转移的迅速性——这的确可算世界第一流，这正是日本飞速“跃进”的一个关键因素——由于吸收外国文化的“传统”，在现代的知识阶层里，就其思想而言，似乎对“未知事物”的感觉已经完全丧失。最初表现出来的是好奇心，但马上就会说“哦，不外是那个”，过敏症与感觉迟钝症如此违背逻辑地结合在一起。比如，在西欧或美国等的知识界中，关于民主主义的基本理念、民主主义的基础这种已有数百年历史的题目，依然被反复质疑，从正面进行探讨。但在日本，战后仅过数年，就轻率敷衍地说“民主主义”“已经都弄明白了”。上述两种状况所形成的巨大反差实在令人惊叹。</p><p>第14页</p><p>新事物的迅速胜利和旧事物稀里糊涂的潜入、沉积，本来就构成同一精神“传统”的两个方面，而这两个方面又不仅仅以上述方式表现出来。欧洲的哲学、思想本来所具有的历史构造性屡次被分解，或被割断了其思想史的前提，仅作为零件不断地吸收进来。其结果，那种经过高度抽象的理论却意外地在扎根于我们旧习惯的生活感情中受到欢迎，在欧洲本来是对根深蒂固的传统进行殊死抵抗的东西，在日本反倒与“常识”性的想法轻而易举地相一致，或是最新的舶来品与原有的手头上的思想库存顺利地吻合，这样的情况屡见不鲜。</p><p>第9页</p><p>现在想提起注意的是，传统思想在维新后越发增强了零碎片断的性质，既不能将各种新思想从内部进行重新构建，亦不能作为与异质思想断然对抗的原理发挥作用。正因为如此，尽管各个思想内容及其所占地位有着巨大差异，但在思想摄取与表面交锋的方法上，“前近代”与“近代”反而产生出相互连续的结果。</p><p>第8页</p><p>如果把我们的思维方式分解成一个个要素，再分别追溯这些要素的谱系的话，就会发现有佛教的因素、儒教的因素、萨满教的因素、西欧的因素——总之，最终是在我们的历史上印下足迹的所有思想的断片。问题在于这些因素皆杂乱地聚在一起，其相互之间的理论关系和该占的位置全然不明确。从这种基本的存在方式来看，无论是所谓的“传统”思想还是明治以后引进的欧洲思想，都看不出其本质上有何区别。人们反复地慨叹近代日本舍弃了维新以前的思想遗产而“欧化”了（而且这种慨叹从明治以后至今日已经成为定式），但是假如具有数百年背景的“传统”思想能真的作为遗产形成了传统，那又怎么会那样轻易地被“欧化”的怒涛所吞没呢？</p><p>第7页</p><p>儒教、佛教以及与之相“习合”而发展的神道，或江户时代的国学等，常常被统称为传统思想，以此与明治以后大量流入的欧洲思想相对比。区别这两种类型本身并没有错，而且也是有意义的。但是，以传统与非传统的范畴来区分两者，有可能会导致重大的误解。因为外来思想被摄取进来后，便以各种形式融入我们的生活方式和意识中，作为文化它已留下难以消除的烙印。从这种意义上说，欧洲的思想也已在日本“传统化”了。即使是翻译思想，甚至是误译思想，也相应地形成了我们思考的框架。</p><p>第5页</p><p>思想没能在对抗和积累的基础上历史地形成构造，这一“传统”表现得最明显而又滑稽的例子，便是日本的论争史。某一时代所进行的激烈论争，极少能成为共有财产而为下一时代所继承发展。不管是自由论、还是关于文学的艺术性与政治性的论争，以及知识分子论、历史的本质论等等，同样的问题提法，在不同的时代反复成为论坛的讨论题目。当然，思想的论争本来就没有绝对的结论可言，但在日本，大多数的论争往往没有就某些问题进行分析和整理，也没有明确归结出遗留的问题就不了了之。过了很久以后，因某种契机又对实质相同的题目展开论争，这时也并不是从前次论争所到达的结果出发，而是每回都一切从零开始讨论。还有，比如那些多少与文化或世界观的本质相关的题目，尽管这些题目具有高度的普遍性，但其在欧洲所经历的长年深入探讨的思想背景却往往在日本的论争中被完全置之度外——尽管产生于欧洲的作品已不断流入了日本——因此从“思维的经济性”的角度来看，这也是巨大的浪费。在这里，（1）一方面，日本“学界”整天忙于经销输入的“完成品”，另一方面社会又产生了一种逆反现象，就是“独创性”崇拜，即把零碎片断的偶然想法当作“独创”来极度尊崇，这种崇拜在评论界和大众传媒的推动下得以不断地再生产。而且两者之间互相轻蔑的恶性循环（这一点和后述部分有关联）也在其中起作用。（2）因为各时代各集团与当时西方占有力地位的国家或思潮分别形成横向联系，造成了一个封闭的欧洲形象，所以纵向的历史性思想关联被无视了。（3）不言而喻，现代常见的最单纯的原因，就是论争被搬上大众传媒时，便按着传媒所布设的轨道发展，从而愈益背离论争者当初的意图。但是，像明治二十年代有名的基督教与国体的关系论争，在佛教徒与儒教思想家责难基督教徒的根据里，几乎看不到幕末时的、更何况是十六世纪基督教传来时的责难根据得到了发展的痕迹。这样看来，不得不说问题是波及到日本思想史的一般形态。因为不言而喻，“论争”是辩证法的原始形态。</p><p>第4页</p><p>若表达得露骨一些，也就是说，在我国没有形成这样一种思想传统，即那种可以给各个时代的观念和思想赋予相互关联性，使所有的思想立场在与其相关的关系中——即使是通过否定而形成的关系中——力图定立自己的历史地位的那种核心性的、或相当于坐标轴的思想传统。我们不要只悲叹或美化自己所处的位置，而应首先敢于正视这种现实，我们只能够从这一 实出发。</p><p>第9页</p><p>所谓在可能性中来理解，比如，作为完成了的思想，或作为思想的实践上的结果，从“反动”的东西里可以找出“革命的”契机、服从的说教中也可以找出反逆契机、谛观之中也可以找出能动的契机，或者说就是去发现各自的对立面的思想史的方法。</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/lpic/s4438007.jpg" alt="《日本的思想》"><br><a href="https://book.douban.com/subject/3662234/" target="_blank" rel="noopener">《日本的思想》</a><br>作者：(日)丸山真男<br>译者: 区建英 / 刘岳兵<br>出版社：生活·读书·新知三联书店</p><p>相关视频：<br><a href="http://v.youku.com/v_show/id_XMTMzMTIzNjI1Ng==.html" target="_blank" rel="noopener">梁文道第三十八夜：日本的思想（一）</a><br><a href="http://v.youku.com/v_show/id_XMTMzMjM0MTg2NA==.html" target="_blank" rel="noopener">梁文道第三十九夜：日本的思想（二）</a></p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>局域网内Linux挂载Windows共享文件夹</title>
      <link href="/mount-windir-in-linux-for-LAN/"/>
      <url>/mount-windir-in-linux-for-LAN/</url>
      
        <content type="html"><![CDATA[<p>为实现在 Linux 服务器上的开发环境实时映射局域网内 Windows 的共享文件夹进行开发，我们可以使用 Linux 的 mount 功能把局域网内 Windows 的共享文件夹挂载到指定目录。在此将实现步骤罗列，给需要的人以参考。</p><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><ol><li>添加专用于挂载的 Windows 新用户，设置用户名为 <code>&lt;username&gt;</code>，密码为 <code>&lt;password&gt;</code></li><li>创建 Windows 共享文件夹 <code>&lt;shared_dir&gt;</code></li><li>共享该文件夹：右键单击文件夹 <code>&lt;shared_dir&gt;</code> 进入 属性 - 共享 - 高级共享 - 共享此文件夹。</li><li>设置共享权限，权限 - 添加，在 选择用户或组 界面的 输入对象名称来选择 输入框内输入用户名 <code>&lt;username&gt;</code> 确定添加，并将 <code>&lt;username&gt;</code> 的权限设置为 完全控制。建议删除 Everyone 用户的共享权限。</li><li>确定 / 固定 Windows 在局域网中的 IP 地址为 <code>&lt;WinIP&gt;</code></li><li>关闭 Windows 防火墙</li></ol><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><ol><li>创建 Linux 挂载文件夹 <code>&lt;mount_dir&gt;</code></li><li>以 root 权限运行如下命令挂载文件夹<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">mount -t cifs -o username="<span class="tag">&lt;<span class="name">username</span>&gt;</span>",password="<span class="tag">&lt;<span class="name">password</span>&gt;</span>" -o uid=<span class="tag">&lt;<span class="name">linuxuser</span>&gt;</span> -o gid=<span class="tag">&lt;<span class="name">linuxgroup</span>&gt;</span> //<span class="tag">&lt;<span class="name">WinIP</span>&gt;</span>/<span class="tag">&lt;<span class="name">shared_dir</span>&gt;</span> /<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;<span class="name">mount_dir</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>其中的 <code>&lt;linuxuser&gt;</code> 和 <code>&lt;linuxgroup&gt;</code> 为 Linux 中具有开发环境配置权限的用户和其所在用户组。<br>上述方法将 <code>&lt;shared_dir&gt;</code> 内的文件挂载到了 <code>&lt;mount_dir&gt;</code> 中。你也可以根据自己需要对命令进行微调。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> 局域网 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用JavaScript为URL瘦身</title>
      <link href="/simplify-URL/"/>
      <url>/simplify-URL/</url>
      
        <content type="html"><![CDATA[<p>由于 SEO 优化或流量统计需要，邮箱订阅或某些网站会对自身 URL 进行处理，在原 URL 后面追加一系列的标签，形如<br><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">https://zhuanlan.zhihu.com/p/<span class="number">22545574</span>?hmsr=toutiao.<span class="built_in">io</span>&amp;utm_medium=toutiao.<span class="built_in">io</span>&amp;utm_source=toutiao.<span class="built_in">io</span></span><br></pre></td></tr></table></figure></p><p>其原本的 URL 为：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>zhuanlan.zhihu.com<span class="regexp">/p/</span><span class="number">22545574</span></span><br></pre></td></tr></table></figure></p><p>带有标签后缀的 URL 不够优雅，分享这样的 URL 时会影响观感，需要手动删除无用参数（有点强迫症的感觉）。</p><p>好在 <a href="https://twitter.com/ibingfei" target="_blank" rel="noopener">@ibingfei</a> 给我找了一个 <a href="https://gist.github.com/wozozo/1714762/" target="_blank" rel="noopener">解决方案</a>，只需将处理 URL 的 JS 脚本存为书签，使用时点击一下该书签即可。下面是经我稍微改动，加入过滤 acm、mtt、cks 三个标签后的 JS 脚本，仅供参考：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">javascript:(<span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">  var search, params, <span class="built_in">i</span>, re;</span><br><span class="line">  search = location.search.replace( /^\?/, <span class="string">''</span> ).split( <span class="string">'&amp;'</span> );</span><br><span class="line">  params = [];</span><br><span class="line">  <span class="keyword">if</span> (!search) <span class="keyword">return</span>;</span><br><span class="line">  <span class="built_in">i</span> = search.<span class="built_in">length</span>;</span><br><span class="line">  <span class="keyword">while</span>( <span class="built_in">i</span>-- )&#123;</span><br><span class="line">    <span class="keyword">if</span>( !search[<span class="built_in">i</span>].match( /^utm_|^hmsr|^acm|^mtt|^cks|^fb_action|^fb_source|^action_object_map|^action_type_map|^action_ref_map/ ) )&#123;</span><br><span class="line">      params.push( search[<span class="built_in">i</span>] );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      re = <span class="built_in">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (re) &#123;</span><br><span class="line">    history.pushState(<span class="string">''</span>,<span class="string">''</span>,location.pathname + (( params.<span class="built_in">length</span> ) ? <span class="string">'?'</span> + params.join( <span class="string">'&amp;'</span> ) : <span class="string">''</span> ));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>此法的原理是对 URL 中的无用标签进行正则匹配，从而实现过滤。当然你也可以自行添加过滤规则，只需在其中按  !search[i].match( / <code>|^&lt;标签名&gt;</code>/ )  格式添加标签即可。</p><p>举个栗子：如测试后发现 <a href="http://yhyy135.github.io?blabla=hahaha" target="_blank" rel="noopener">http://yhyy135.github.io?blabla=hahaha</a> 中，删除标签 blabla 后不影响正常访问，则可在上述 JS 脚本的正则规则中添加 <code>|^blabla</code> 即可。整个 URL 减肥过程如此流畅。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> URL </tag>
            
            <tag> JS </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RabbitMQ入门指南PHP版（三）</title>
      <link href="/rabbitmq-guide-3/"/>
      <url>/rabbitmq-guide-3/</url>
      
        <content type="html"><![CDATA[<p>RabbitMQ 入门指南 PHP 版系列文章：<br><a href="https://yhyy135.github.io/rabbitmq-guide-1/" target="_blank" rel="noopener">RabbitMQ 入门指南 PHP 版（一）</a><br><a href="https://yhyy135.github.io/rabbitmq-guide-2/" target="_blank" rel="noopener">RabbitMQ 入门指南 PHP 版（二）</a></p><h1 id="主题交换机-Topic-exchange"><a href="#主题交换机-Topic-exchange" class="headerlink" title="主题交换机 Topic exchange"></a>主题交换机 Topic exchange</h1><p>为进行更为复杂和高级的路由操作，可通过使用主题交换机来实现。<br>主题交换机的路由键必须是一个由 <code>.</code> 分隔开的词语列表。绑定键也必须拥有同样的格式。携带特定路由键的消息将被主题交换机投递给绑定键与之相匹配的队列。</p><a id="more"></a><p>绑定键和路由键有两种应用方式：</p><ul><li>* 号表示一个单词</li><li># 号表示任意数量（零个或多个）单词</li></ul><p>举个栗子：所有消息均描述动物。消息所携带的路由键由三个被 <code>.</code> 分隔开的单词组成，第一个单词描述动物的敏捷度，第二个单词描述动物颜色，第三个单词描述物种。格式如：&lt;敏捷度&gt;.&lt;颜色&gt;.&lt;物种&gt;</p><p>给定三个绑定：<br>Q1 的绑定键为 *.orange.*，该绑定针对的是所有的桔黄色动物的信息。<br>Q2 的绑定键为 *.*.rabbit 和 lazy.#，该绑定针对的是所有兔子和所有懒惰的动物。</p><p><img src="https://www.rabbitmq.com/img/tutorials/python-five.png" alt="主题交换机"></p><p>携带有 quick.orange.rabbit 的消息将会被分别投递给这两个队列；<br>携带着 lazy.orange.elephant 的消息会被分别投递给这两个队列；<br>携带有 quick.orange.fox 的消息会投递给第一个队列；<br>携带有 lazy.brown.fox 的消息会投递给第二个队列；<br>携带有 lazy.pink.rabbit 的消息只会被投递给第二个队列，即使它同时匹配第二个队列的两个绑定。<br>携带有 quick.brown.fox 的消息不会投递给任意队列。<br>携带有一个单词或者四个单词如 orange 或 quick.orange.male.rabbit 的消息时，消息将不被投递，且会被丢弃。<br>携带有 lazy.orange.male.rabbit 的消息会匹配最后一个绑定，并被投递到第二个队列中。<br>当一个队列的绑定键为 # 时，该队列将忽略消息的路由键，接收所有消息。</p><h2 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h2><p>源代码：<br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/emit_log_topic.php" target="_blank" rel="noopener">emit_log_topic.php</a><br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/receive_logs_topic.php" target="_blank" rel="noopener">receive_logs_topic.php</a></p><p>若需接收所有日志：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_topic<span class="selector-class">.php</span> <span class="string">"#"</span></span><br></pre></td></tr></table></figure></p><p>接收来自 <code>kern</code> 设备的日志：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_topic<span class="selector-class">.php</span> <span class="string">"kern.*"</span></span><br></pre></td></tr></table></figure></p><p>只接收严重程度为 <code>critical</code> 的日志：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_topic<span class="selector-class">.php</span> <span class="string">"*.critical"</span></span><br></pre></td></tr></table></figure></p><p>建立多个绑定：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_topic<span class="selector-class">.php</span> <span class="string">"kern.*"</span> <span class="string">"*.critical"</span></span><br></pre></td></tr></table></figure></p><p>发送路由键为 <code>kern.critical</code> 的日志：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php emit_log_topic<span class="selector-class">.php</span> <span class="string">"kern.critical"</span> <span class="string">"A critical kernel error"</span></span><br></pre></td></tr></table></figure></p><h1 id="远程过程调用-Remote-Procedure-Call"><a href="#远程过程调用-Remote-Procedure-Call" class="headerlink" title="远程过程调用 Remote Procedure Call"></a>远程过程调用 Remote Procedure Call</h1><p>若要将一个函数运行在远程终端上并且等待从远程终端获取结果，可通过远程过程调用（Remote Procedure Call, RPC） 实现。</p><h2 id="客户端接口"><a href="#客户端接口" class="headerlink" title="客户端接口"></a>客户端接口</h2><p>创建一个简单的客户端类，用以展示 RPC 服务。它通过 “call” 方法发送 RPC 请求，并在收到回应前保持阻塞。<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$fibonacci_rpc = <span class="keyword">new</span> FibonacciRpcClient();</span><br><span class="line">$response = $fibonacci_rpc-&gt;call(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">" [.] Got "</span>, $response, <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure></p><h2 id="回调队列"><a href="#回调队列" class="headerlink" title="回调队列"></a>回调队列</h2><p>客户端发送请求信息后，服务端将其应用到一个回复信息中。客户端在发送请求时同时发送一个回调队列（callback queue）的地址用以接收回复信息。<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span>($queue_name, ,) = $channel-&gt;queue_declare(<span class="string">""</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">$msg = <span class="keyword">new</span> AMQPMessage(</span><br><span class="line">    $payload,</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">'reply_to'</span> =&gt; $queue_name));</span><br><span class="line"></span><br><span class="line">$channel-&gt;basic_publish($msg, <span class="string">''</span>, <span class="string">'rpc_queue'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># ... then code to read a response message from the callback_queue ...</span></span><br></pre></td></tr></table></figure></p><h3 id="消息属性"><a href="#消息属性" class="headerlink" title="消息属性"></a>消息属性</h3><p>AMQP 协议为消息预定义了 14 个属性。其中常用的有以下几个：</p><ul><li>delivery_mode（投递模式）：标记消息为持久的（值为 2）或暂存的（除了 2 之外的其他任何值）。</li><li>content_type（内容类型）: 描述编码的 mime-type。</li><li>reply_to（回复目标）：命名回调队列。</li><li>correlation_id（关联标识）：关联 RPC 的响应和请求。</li></ul><h2 id="关联标识-Correlation-Id"><a href="#关联标识-Correlation-Id" class="headerlink" title="关联标识 Correlation Id"></a>关联标识 Correlation Id</h2><p>为使消息投递更高效，可为每个客户端只建立一个独立的回调队列，并用关联标识来辨别该响应所属的请求。如果消息的关联标识为未知，则忽略消息。</p><h2 id="运行代码-1"><a href="#运行代码-1" class="headerlink" title="运行代码"></a>运行代码</h2><p><img src="https://www.rabbitmq.com/img/tutorials/python-six.png" alt="远程过程调用"></p><p>RPC 的工作原理：</p><ul><li>客户端启动时创建一个匿名独占回调队列。</li><li>客户端发送的消息带有 reply_to 和 correlation_id 属性。</li><li>请求将发送到一个 rpc_queue 队列中。</li><li>服务器等待接收请求。请求出现时，它将带有执行结果的消息发送给 reply_to 字段指定的队列。</li><li>客户端等待回调队列里的结果。消息出现时，它将 correlation_id 属性与请求匹配的消息返回给程序。</li></ul><p>RPC 的优势：</p><ul><li>服务器运行过慢时，可运行另外一个服务器端来扩展</li><li>客户端的 RPC 请求只发送或接收一条消息。无需 queue_declare 声明队列异步调用。单个请求只需往返一次。</li></ul><p>构建一个 RPC 系统：包含一个客户端和一个 RPC 服务器，并创建一个模拟 RPC 服务来返回斐波那契数列。</p><p><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/rpc_server.php" target="_blank" rel="noopener">rpc_server.php</a><br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/rpc_client.php" target="_blank" rel="noopener">rpc_client.php</a></p><p>启动服务器端：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php rpc_server.php</span><br><span class="line"> [x] Awaiting RPC requests</span><br></pre></td></tr></table></figure></p><p>启动客户端，请求一个 fibonacci 队列<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php rpc_client.php</span><br><span class="line"> [x] Requesting fib(<span class="number">30</span>)</span><br></pre></td></tr></table></figure></p><hr><p><strong>相关文章</strong><br><a href="https://www.rabbitmq.com/tutorials/tutorial-five-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - Topics</a><br><a href="https://www.rabbitmq.com/tutorials/tutorial-six-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - Remote procedure call (RPC)</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/topics.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 为什么需要主题交换机？</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/rpc.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 远程过程调用</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RabbitMQ入门指南PHP版（二）</title>
      <link href="/rabbitmq-guide-2/"/>
      <url>/rabbitmq-guide-2/</url>
      
        <content type="html"><![CDATA[<p>RabbitMQ 入门指南 PHP 版系列文章：<br><a href="https://yhyy135.github.io/rabbitmq-guide-1/" target="_blank" rel="noopener">RabbitMQ 入门指南 PHP 版（一）</a></p><h1 id="发布／订阅-Publish-Subscribe"><a href="#发布／订阅-Publish-Subscribe" class="headerlink" title="发布／订阅 Publish/Subscribe"></a>发布／订阅 Publish/Subscribe</h1><p>分发一个消息给多个消费者（consumers）的模式称为「发布 / 订阅」。若要构建一个简单的日志系统用于发送日志消息和获取消息并输出内容，可利用发布 / 订阅模式实现。</p><a id="more"></a><h2 id="交换机-Exchanges"><a href="#交换机-Exchanges" class="headerlink" title="交换机 Exchanges"></a>交换机 Exchanges</h2><p>RabbitMQ 中完整的消息模型:</p><ul><li>生产者（producer）是发布消息的应用程序。</li><li>队列（queue）用于消息存储的缓冲。</li><li>消费者（consumer）是接收消息的应用程序。</li></ul><p>RabbitMQ 消息模型的核心理念是：发布者（producer）不会直接发送任何消息给队列，其只需要把消息发送给一个交换机（exchange）代为处理。消息处理规则通过交换机类型（exchange type）来定义。</p><p>交换机类型：</p><ul><li>直连交换机（direct）</li><li>主题交换机（topic）</li><li>头交换机（headers）</li><li>扇型交换机（fanout）</li></ul><p><img src="https://www.rabbitmq.com/img/tutorials/exchanges.png" alt="交换机"></p><p>先创建一个名为 logs 的扇型交换机，它将把消息发送给它所知道的所有队列：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$channel</span>-&gt;exchange_declare(<span class="string">'logs'</span>, <span class="string">'fanout'</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line"><span class="variable">$channel</span>-&gt;basic_publish(<span class="variable">$msg</span>, <span class="string">'logs'</span>);</span><br></pre></td></tr></table></figure></p><p>其中 basic_publish() 的第一个变量为发送消息的目标队列。<br>其中 basic_publish() 的第二个变量为交换机设置 routing_key。</p><h3 id="交换机列表"><a href="#交换机列表" class="headerlink" title="交换机列表"></a>交换机列表</h3><p>使用 rabbitmqctl 命令可列出服务器上所有的交换机：<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ sudo rabbitmqctl list_exchanges</span><br><span class="line">Listing exchanges ...</span><br><span class="line">        direct</span><br><span class="line">amq<span class="selector-class">.direct</span>      direct</span><br><span class="line">amq<span class="selector-class">.fanout</span>      fanout</span><br><span class="line">amq<span class="selector-class">.headers</span>     headers</span><br><span class="line">amq<span class="selector-class">.match</span>       headers</span><br><span class="line">amq<span class="selector-class">.rabbitmq</span><span class="selector-class">.log</span>        topic</span><br><span class="line">amq<span class="selector-class">.rabbitmq</span><span class="selector-class">.trace</span>      topic</span><br><span class="line">amq<span class="selector-class">.topic</span>       topic</span><br><span class="line">logs    fanout</span><br><span class="line">..<span class="selector-class">.done</span>.</span><br></pre></td></tr></table></figure></p><p>其中名为 amq.* 的交换机是 RabbitMQ 默认创建的。</p><h3 id="匿名的交换机"><a href="#匿名的交换机" class="headerlink" title="匿名的交换机"></a>匿名的交换机</h3><p>在介绍发送消息 Sending 时举例的 <a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/send.php" target="_blank" rel="noopener">send.php</a> 中有如下代码：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$channel</span>-&gt;basic_publish(<span class="variable">$msg</span>, <span class="string">''</span>, <span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure></p><p>在该例中我们使用空字符串 ‘’ 设置使用默认交换机。</p><h2 id="临时队列-Temporary-queues"><a href="#临时队列-Temporary-queues" class="headerlink" title="临时队列 Temporary queues"></a>临时队列 Temporary queues</h2><p>调用 queue_declare 方法时，函数参数 queue 的值为空可使 RabbitMQ 创建一个随机命名的队列：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span>($queue_name, ,) = $channel-&gt;queue_declare(<span class="string">""</span>);</span><br></pre></td></tr></table></figure></p><p>若要使其与消费者（consumer）断开连接时被立即删除，可声明该队列为 exclusive。</p><h2 id="绑定-Bindings"><a href="#绑定-Bindings" class="headerlink" title="绑定 Bindings"></a>绑定 Bindings</h2><p><img src="https://ooo.0o0.ooo/2016/10/29/58142048a263f.png" alt="绑定"></p><p>交换机和队列之间的联系我们称之为绑定（binding），绑定时可添加 routing_key 参数。为避免与 basic_publish 的 routing_key 参数混淆，将此处的 routing_key 称为绑定键（binding key）。绑定键将会影响交换机对消息进行的路由操作。扇型交换机会忽略该值。</p><p>不带绑定键的绑定：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$channel</span>-&gt;queue_bind(<span class="variable">$queue_name</span>, <span class="string">'logs'</span>);</span><br></pre></td></tr></table></figure></p><p>带绑定键为 black 的绑定：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$binding_key</span> = <span class="string">'black'</span>;</span><br><span class="line"><span class="variable">$channel</span>-&gt;queue_bind(<span class="variable">$queue_name</span>, <span class="variable">$exchange_name</span>, <span class="variable">$binding_key</span>);</span><br></pre></td></tr></table></figure></p><h3 id="绑定列表"><a href="#绑定列表" class="headerlink" title="绑定列表"></a>绑定列表</h3><p>使用 rabbitmqctl 命令可列出所有现存的绑定。<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo rabbitmqctl list_bindings</span><br></pre></td></tr></table></figure></p><h2 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h2><p><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/emit_log.php" target="_blank" rel="noopener">emit_log.php</a><br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/receive_logs.php" target="_blank" rel="noopener">receive_logs.php</a></p><p><img src="https://ooo.0o0.ooo/2016/10/29/5814205ccb445.png" alt=""></p><p>由于发布消息要求确定存在的交换机，故在 RabbitMQ 连接成功后声明一个交换机。日志消息发布程序把消息发送给 logs 交换机而不是匿名交换机。若未绑定队列到交换机，消息将丢失。若没有消费者监听，则消息会被忽略。执行下列命令将实现 logs 交换机把数据发送给两个系统命名的队列。</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ php receive_logs<span class="selector-class">.php</span> &gt; logs_from_rabbit<span class="selector-class">.log</span>               <span class="comment">//将日志存入文件</span></span><br><span class="line">$ php receive_logs<span class="selector-class">.php</span>                                     <span class="comment">//查看日志</span></span><br><span class="line">$ php emit_log<span class="selector-class">.php</span>                                         <span class="comment">//发送日志</span></span><br><span class="line">$ sudo rabbitmqctl list_bindings                          <span class="comment">//确认已创建的队列绑定</span></span><br><span class="line">Listing bindings ...</span><br><span class="line"> ...</span><br><span class="line">logs    amq.gen-TJWkez28YpImbWdRKMa8sg==                []</span><br><span class="line">logs    amq.gen-x0kymA4yPzAT6BoC/YP+zw==                []</span><br><span class="line">..<span class="selector-class">.done</span>.</span><br></pre></td></tr></table></figure><h1 id="路由-Routing"><a href="#路由-Routing" class="headerlink" title="路由 Routing"></a>路由 Routing</h1><h2 id="直连交换机-Direct-exchange"><a href="#直连交换机-Direct-exchange" class="headerlink" title="直连交换机 Direct exchange"></a>直连交换机 Direct exchange</h2><p>直连交换机将会对绑定键（binding key）和路由键（routing key）进行精确匹配，从而确定消息该分发到哪个队列。<br>举个栗子：</p><p><img src="https://www.rabbitmq.com/img/tutorials/direct-exchange.png" alt="直连交换机"></p><p>上图中直连交换机 X 和 Q1，Q2 两个队列进行了绑定。<br>第一个队列有一个绑定，绑定键为 orange。<br>第二个队列有两个绑定，绑定键为 black 和 green。<br>当路由键为 orange 的消息发布到交换机，会被路由到队列 Q1。<br>当路由键为 black 者 green 的消息发布到交换机，会路由到 Q2。<br>其他的所有消息都将会被丢弃。</p><h2 id="多重绑定-Multiple-bindings"><a href="#多重绑定-Multiple-bindings" class="headerlink" title="多重绑定 Multiple bindings"></a>多重绑定 Multiple bindings</h2><p><img src="https://www.rabbitmq.com/img/tutorials/direct-exchange-multiple.png" alt="多重绑定"></p><p>可使用相同的绑定键绑定多个队列。使用 black 绑定键添加 X 和 Q1、Q2 之间的绑定，则带有 black 路由键的消息会同时发送到 Q1 和 Q2。</p><h2 id="情景应用"><a href="#情景应用" class="headerlink" title="情景应用"></a>情景应用</h2><p>如需把严重的错误日志信息写入日志文件（存储到磁盘），同时仍把所有日志信息输出到控制台中，可利用路由功能实现：将消息发送到直连交换机，以日志级别作为路由键。日志级别 severity 的值是 info、warning、error。接收日志的脚本可根据日志级别来选择其要处理的日志。</p><h3 id="发送日志"><a href="#发送日志" class="headerlink" title="发送日志"></a>发送日志</h3><p>创建一个交换机（exchange）：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$channel</span>-&gt;exchange_declare(<span class="string">'direct_logs'</span>, <span class="string">'direct'</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure></p><p>发送消息：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$channel</span>-&gt;exchange_declare(<span class="string">'direct_logs'</span>, <span class="string">'direct'</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line"><span class="variable">$channel</span>-&gt;basic_publish(<span class="variable">$msg</span>, <span class="string">'direct_logs'</span>, <span class="variable">$severity</span>);</span><br></pre></td></tr></table></figure></p><h3 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h3><p>根据严重级别分别创建绑定：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($severities <span class="keyword">as</span> $severity) &#123;</span><br><span class="line">    $channel-&gt;queue_bind($queue_name, <span class="string">'direct_logs'</span>, $severity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="运行代码-1"><a href="#运行代码-1" class="headerlink" title="运行代码"></a>运行代码</h2><p>源代码：<br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/emit_log_direct.php" target="_blank" rel="noopener">emit_log_direct.php</a><br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/receive_logs_direct.php" target="_blank" rel="noopener">receive_logs_direct.php</a></p><p>若只需保存 warning 和 error 级别的日志到磁盘：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_direct.php <span class="builtin-name">warning</span> <span class="builtin-name">error</span> &gt; logs_from_rabbit.log</span><br></pre></td></tr></table></figure></p><p>在新终端中输出所有日志信息：<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ php receive_logs_direct.php info warning error</span><br><span class="line"> [*] Waiting <span class="keyword">for</span> logs. To <span class="keyword">exit</span> press CTRL+C</span><br></pre></td></tr></table></figure></p><p>输出 error 级别的日志：<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">$ php emit_log_direct.php <span class="built_in">error</span> <span class="string">"Run. Run. Or it will explode."</span></span><br><span class="line"> [x] Sent '<span class="built_in">error</span>':'<span class="keyword">Run</span>. <span class="keyword">Run</span>. <span class="keyword">Or</span> it will explode.'</span><br></pre></td></tr></table></figure></p><hr><p><strong>相关文章</strong><br><a href="https://www.rabbitmq.com/tutorials/tutorial-three-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - Publish/Subscribe</a><br><a href="https://www.rabbitmq.com/tutorials/tutorial-four-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - Routing</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/publish-subscribe.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 发布／订阅</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/routing.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 路由</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RabbitMQ入门指南PHP版（一）</title>
      <link href="/rabbitmq-guide-1/"/>
      <url>/rabbitmq-guide-1/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>RabbitMQ 是一个消息代理。核心原理是接收和发送消息。</p><p><img src="https://www.rabbitmq.com/img/tutorials/producer.png" alt="生产者"></p><ul><li>生产 (Producing) 就是发送消息。发送消息的程序就是一个生产者 (producer)。用 “P” 表示</li></ul><p><img src="https://ooo.0o0.ooo/2016/10/29/58141fc7910a7.png" alt="队列"></p><ul><li>队列 (queue) 就是邮箱的名称。消息存储在一个队列（queue）中通过你的应用程序和 RabbitMQ 进行传输</li></ul><p><img src="https://www.rabbitmq.com/img/tutorials/consumer.png" alt="消费者"></p><ul><li>消费（Consuming）就是获取消息。等待获取消息的程序就是一个消费者（consumer）。用 “C” 表示</li></ul><p>RabbitMQ 使用的是 AMQP 协议，对于 PHP 来说你可以选择 <a href="https://github.com/php-amqplib/php-amqplib" target="_blank" rel="noopener">php-amqplib</a> 作为 RabbitMQ 的客户端。</p><a id="more"></a><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h1><p><img src="https://www.rabbitmq.com/img/tutorials/python-one.png" alt="Hello World!"></p><p>设计一个简单的流程：生产者（producer）把消息发送到一个名为 “hello” 的队列中。消费者（consumer）从这个队列中获取消息。</p><h2 id="发送消息-Sending"><a href="#发送消息-Sending" class="headerlink" title="发送消息 Sending"></a>发送消息 Sending</h2><p><img src="https://www.rabbitmq.com/img/tutorials/sending.png" alt="发送消息"></p><p>发送程序会发送一个消息到队列中。首先要做的事情就是建立一个到 RabbitMQ 服务器的连接。</p><p>send.php<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&lt;!-- %<span class="number">1</span> --&gt;</span><br><span class="line">require_once __DIR__ . <span class="string">'/vendor/autoload.php'</span>;</span><br><span class="line">use PhpAmqpLib\Connection\AMQPStreamConnection;</span><br><span class="line">use PhpAmqpLib\Message\AMQPMessage;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">2</span> --&gt;</span><br><span class="line">$connection = <span class="keyword">new</span> AMQPStreamConnection(<span class="string">'localhost'</span>, <span class="number">5672</span>, <span class="string">'guest'</span>, <span class="string">'guest'</span>);</span><br><span class="line">$channel = $connection-&gt;channel();</span><br><span class="line">$channel-&gt;queue_declare(<span class="string">'hello'</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">3</span> --&gt;</span><br><span class="line">$msg = <span class="keyword">new</span> AMQPMessage(<span class="string">'Hello World!'</span>);</span><br><span class="line">$channel-&gt;basic_publish($msg, <span class="string">''</span>, <span class="string">'hello'</span>);</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">4</span> --&gt;</span><br><span class="line">echo <span class="string">" [x] Sent 'Hello World!'\n"</span>;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">5</span> --&gt;</span><br><span class="line">$channel-&gt;close();</span><br><span class="line">$connection-&gt;close();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><ol><li>添加必要的库</li><li>建立一个到 RabbitMQ 服务器的连接；创建一个名为 hello 的队列，然后把消息发送到这个队列中。</li><li>发送的消息存入 $msg；发送的消息存入 $msg；在 RabbitMQ 中，消息是不能直接发送到队列，它需要发送到交换机（exchange）中，将 $msg 通过一个空字符串来标识的交换机投递到 hello 队列中。</li><li>提示发送成功信息。</li><li>断开连接。</li></ol><h2 id="获取消息-Receiving"><a href="#获取消息-Receiving" class="headerlink" title="获取消息 Receiving"></a>获取消息 Receiving</h2><p><img src="https://www.rabbitmq.com/img/tutorials/receiving.png" alt="获取消息"></p><p>receive.php<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&lt;!-- %<span class="number">1</span> --&gt;</span><br><span class="line">require_once __DIR__ . <span class="string">'/vendor/autoload.php'</span>;</span><br><span class="line">use PhpAmqpLib\Connection\AMQPStreamConnection;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">2</span> --&gt;</span><br><span class="line">$connection = <span class="keyword">new</span> AMQPStreamConnection(<span class="string">'localhost'</span>, <span class="number">5672</span>, <span class="string">'guest'</span>, <span class="string">'guest'</span>);</span><br><span class="line">$channel = $connection-&gt;channel();</span><br><span class="line">$channel-&gt;queue_declare(<span class="string">'hello'</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">3</span> --&gt;</span><br><span class="line">echo <span class="string">' [*] Waiting for messages. To exit press CTRL+C'</span>, <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">4</span> --&gt;</span><br><span class="line">$callback = <span class="function"><span class="keyword">function</span>(<span class="params">$msg</span>) </span>&#123;</span><br><span class="line">  echo <span class="string">" [x] Received "</span>, $msg-&gt;body, <span class="string">"\n"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">5</span> --&gt;</span><br><span class="line">$channel-&gt;basic_consume(<span class="string">'hello'</span>, <span class="string">''</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, $callback);</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">6</span> --&gt;</span><br><span class="line"><span class="keyword">while</span>(count($channel-&gt;callbacks)) &#123;</span><br><span class="line">    $channel-&gt;wait();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- %<span class="number">7</span> --&gt;</span><br><span class="line">$channel-&gt;close();</span><br><span class="line">$connection-&gt;close();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><ol><li>添加必要的库</li><li>建立一个到 RabbitMQ 服务器的连接；创建一个名为 hello 的队列，然后把消息发送到这个队列中。在 receive.php 中重复声明队列防止程序运行顺序导致的错误。</li><li>提示中断程序信息。</li><li>为队列定义一个回调（callback）函数，使用回调函数提示发送成功信息。</li><li>使用回调函数从名为 hello 的队列中接收消息</li><li>输入一个用来等待消息数据并且在需要的时候运行回调函数的无限循环</li><li>断开连接。</li></ol><h2 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h2><p>源代码：<br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/send.php" target="_blank" rel="noopener">send.php</a><br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/receive.php" target="_blank" rel="noopener">receive.php</a></p><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">$ php <span class="built_in">send</span>.php</span><br></pre></td></tr></table></figure><p>在终端中运行程序发送消息，send 程序在每次运行之后就会停止。<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>php receive.php</span><br></pre></td></tr></table></figure></p><p>在终端中运行程序获取消息，receive 程序并不会退出。它一直在准备获取消息。可通过 Ctrl-C 来中止。</p><h1 id="工作队列-Work-Queues"><a href="#工作队列-Work-Queues" class="headerlink" title="工作队列 Work Queues"></a>工作队列 Work Queues</h1><p><img src="https://www.rabbitmq.com/img/tutorials/python-two.png" alt="工作队列"></p><p>工作队列（又称：任务队列——Task Queues）是为了避免等待一些占用大量资源、时间的操作。当我们把任务（Task）当作消息发送到队列中，一个运行在后台的工作者（worker）进程就会取出任务然后处理。当你运行多个工作者（workers），任务就会在它们之间共享。</p><h2 id="准备-Preparation"><a href="#准备-Preparation" class="headerlink" title="准备 Preparation"></a>准备 Preparation</h2><p>这里使用 sleep() 函数来模拟复杂的任务，在字符串中加上点号（.）来表示任务的复杂程度，一个点（.）将会耗时 1 秒钟。比如 “Hello…” 就会耗时 3 秒钟。</p><h2 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h2><p>按照计划发送任意消息任务到工作队列中</p><p>修改 send.php 的第 2，3，4 部分得到 new_task.php，修改 receive.php 的第 2，4，5 部分得到 worker.php，使其按照计划发送任务到我们的工作队列中。</p><p>new_task.py<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">2</span> --&gt;</span></span><br><span class="line"><span class="php">$connection = <span class="keyword">new</span> AMQPStreamConnection(<span class="string">'localhost'</span>, <span class="number">5672</span>, <span class="string">'guest'</span>, <span class="string">'guest'</span>);</span></span><br><span class="line"><span class="php">$channel = $connection-&gt;channel();</span></span><br><span class="line"><span class="php">$channel-&gt;queue_declare(<span class="string">'task_queue'</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">3</span> --&gt;</span></span><br><span class="line"><span class="php">$data = implode(<span class="string">' '</span>, array_slice($argv, <span class="number">1</span>));</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">empty</span>($data)) $data = <span class="string">"Hello World!"</span>;</span></span><br><span class="line"><span class="php">$msg = <span class="keyword">new</span> AMQPMessage($data,</span></span><br><span class="line"><span class="php">                           <span class="keyword">array</span>(<span class="string">'delivery_mode'</span> =&gt; <span class="number">2</span>)</span></span><br><span class="line"><span class="php">);</span></span><br><span class="line"><span class="php">$channel-&gt;basic_publish($msg, <span class="string">''</span>, <span class="string">'task_queue'</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">4</span> --&gt;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">" [x] Sent "</span>, $data, <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>2.建立一个到 RabbitMQ 服务器的连接；创建一个名为 task_queue 的队列，然后把消息发送到这个队列中。<br>3.发送的单条消息作为发送单元存入 $data，并将其存入 $msg 作为队列发送。<br>4.提示每一条消息发送成功信息。</p><p>worker.php<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">2</span> --&gt;</span></span><br><span class="line"><span class="php">$connection = <span class="keyword">new</span> AMQPStreamConnection(<span class="string">'localhost'</span>, <span class="number">5672</span>, <span class="string">'guest'</span>, <span class="string">'guest'</span>);</span></span><br><span class="line"><span class="php">$channel = $connection-&gt;channel();</span></span><br><span class="line"><span class="php">$channel-&gt;queue_declare(<span class="string">'task_queue'</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">4</span> --&gt;</span></span><br><span class="line"><span class="php">$callback = <span class="function"><span class="keyword">function</span><span class="params">($msg)</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">" [x] Received "</span>, $msg-&gt;body, <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">sleep(substr_count($msg-&gt;body, <span class="string">'.'</span>));</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">" [x] Done"</span>, <span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">$msg-&gt;delivery_info[<span class="string">'channel'</span>]-&gt;basic_ack($msg-&gt;delivery_info[<span class="string">'delivery_tag'</span>]);</span></span><br><span class="line"><span class="php">&#125;;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&lt;!-- %<span class="number">5</span> --&gt;</span></span><br><span class="line"><span class="php">$channel-&gt;basic_qos(<span class="keyword">null</span>, <span class="number">1</span>, <span class="keyword">null</span>);</span></span><br><span class="line"><span class="php">$channel-&gt;basic_consume(<span class="string">'task_queue'</span>, <span class="string">''</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, $callback);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>2.建立一个到 RabbitMQ 服务器的连接；创建一个名为 task_queue 的队列，然后把消息发送到这个队列中。在 worker.php 中重复声明队列防止程序运行顺序导致的错误。<br>4.为队列定义一个回调（callback）函数，使用回调函数提示发送成功信息。<br>5.使用回调函数从名为 task_queue 的队列中接收消息。</p><h2 id="轮询调度-Round-robin-dispatching"><a href="#轮询调度-Round-robin-dispatching" class="headerlink" title="轮询调度 Round-robin dispatching"></a>轮询调度 Round-robin dispatching</h2><p>三个终端，两个用来运行 worker.py 脚本，即两个消费者（consumers）—— C1 和 C2 接收工作者（workers）发送的消息。平均每个消费者都会收到同等数量得消息。这种发送消息得方式叫做——轮询调度</p><p>workers：<br><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">$ php <span class="keyword">new</span><span class="type">_task</span>.php First message.</span><br><span class="line">$ php <span class="keyword">new</span><span class="type">_task</span>.php Second message..</span><br><span class="line">$ php <span class="keyword">new</span><span class="type">_task</span>.php Third message...</span><br><span class="line">$ php <span class="keyword">new</span><span class="type">_task</span>.php Fourth message....</span><br><span class="line">$ php <span class="keyword">new</span><span class="type">_task</span>.php Fifth message.....</span><br></pre></td></tr></table></figure></p><p>C1:<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ php worker.php</span><br><span class="line">[*] Waiting <span class="keyword">for</span> messages. To <span class="keyword">exit</span> press CTRL+C</span><br><span class="line">[x] Received <span class="string">'First message.'</span></span><br><span class="line">[x] Received <span class="string">'Third message...'</span></span><br><span class="line">[x] Received <span class="string">'Fifth message.....'</span></span><br></pre></td></tr></table></figure></p><p>C2:<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ php worker.php</span><br><span class="line">[*] Waiting <span class="keyword">for</span> messages. To <span class="keyword">exit</span> press CTRL+C</span><br><span class="line">[x] Received <span class="string">'Second message..'</span></span><br><span class="line">[x] Received <span class="string">'Fourth message....'</span></span><br></pre></td></tr></table></figure></p><h2 id="消息确认-Message-acknowledgment"><a href="#消息确认-Message-acknowledgment" class="headerlink" title="消息确认 Message acknowledgment"></a>消息确认 Message acknowledgment</h2><p>如果不对消息进行确认，已发送的消息将马上在内存中被移除。为了防止系统运行导致的任务消息的丢失，我们使用消息确认机制预防此类情况的发生。消费者会通过一个响应（ack），告诉 RabbitMQ 已经收到并处理了某条消息，然后 RabbitMQ 就会释放并删除这条消息。若 RabbitMQ 未收到响应，则会将消息重新发送给其他消费者（consumer）。在进程运行时使用 CTRL+C 终止进程，消息也不会丢失。<br>消息确认默认关闭。可使用 no_ack=True 标识将其开启：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$callback = <span class="function"><span class="keyword">function</span><span class="params">($msg)</span></span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">" [x] Received "</span>, $msg-&gt;body, <span class="string">"\n"</span>;</span><br><span class="line">  sleep(substr_count($msg-&gt;body, <span class="string">'.'</span>));</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">" [x] Done"</span>, <span class="string">"\n"</span>;</span><br><span class="line">  $msg-&gt;delivery_info[<span class="string">'channel'</span>]-&gt;basic_ack($msg-&gt;delivery_info[<span class="string">'delivery_tag'</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$channel-&gt;basic_consume(<span class="string">'task_queue'</span>, <span class="string">''</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, $callback);</span><br></pre></td></tr></table></figure></p><h3 id="忘记确认"><a href="#忘记确认" class="headerlink" title="忘记确认"></a>忘记确认</h3><p>未声明 basic_ack 标志位将导致无法释放未响应的消息，RabbitMQ 就会占用越来越多的内存。排除该错误可使用 rabbitmqctl 命令输出 messages_unacknowledged 字段：<br><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$</span> sudo rabbitmqctl list_queues name messages_ready messages_unacknowledged</span><br><span class="line"><span class="function"><span class="title">Listing</span></span> queues ...</span><br><span class="line">hello    <span class="number">0</span>       <span class="number">0</span></span><br><span class="line">...done.</span><br></pre></td></tr></table></figure></p><h2 id="消息持久化-Message-durability"><a href="#消息持久化-Message-durability" class="headerlink" title="消息持久化 Message durability"></a>消息持久化 Message durability</h2><p>在 RabbitMQ 退出或者崩溃时，将会丢失所有队列和消息。把「队列」和「消息」设为持久化可确保信息不会丢失。<br>在保证未声明同名的非持久化队列的情况下，在生产者（producer）和消费者（consumer）对应的代码中修改声明 task_queue 队列持久化：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$channel-&gt;queue_declare('hello',</span> <span class="literal">false</span><span class="string">,</span> <span class="literal">true</span><span class="string">,</span> <span class="literal">false</span><span class="string">,</span> <span class="literal">false</span><span class="string">);</span></span><br></pre></td></tr></table></figure></p><p>将 delivery_mode 的属性设为 2，实现消息持久化：<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$msg = <span class="keyword">new</span> AMQPMessage($data,</span><br><span class="line">                       <span class="keyword">array</span>(<span class="string">'delivery_mode'</span> =&gt; <span class="number">2</span>)</span><br><span class="line">       );</span><br></pre></td></tr></table></figure></p><p>PS：RabbitMq 收到消息到保存之间存在一个很小的时间间隔，故消息持久化并不能保证真正的持久化，但已经足够应付我们的简单工作队列。若一定要保证持久化，需改写代码来支持事务（transaction）。</p><h2 id="公平调度-Fair-dispatch"><a href="#公平调度-Fair-dispatch" class="headerlink" title="公平调度 Fair dispatch"></a>公平调度 Fair dispatch</h2><p><img src="https://www.rabbitmq.com/img/tutorials/prefetch-count.png" alt="公平调度"></p><p>RabbitMQ 只管分发进入队列的消息，不会关心有多少消费者（consumer）没有作出响应。它盲目的把第 n-th 条消息发给第 n-th 个消费者。为实现 RabbitMQ 按需处理消息分发，可使用 basic.qos 方法，并设置 prefetch_count=1。这使得 RabbitMQ 同一时刻，不要发送超过 1 条消息给一个工作者（worker），直到它已经处理了上一条消息并且作出了响应。<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">channel.basic_qos(<span class="attribute">prefetch_count</span>=1)</span><br></pre></td></tr></table></figure></p><h2 id="运行代码-1"><a href="#运行代码-1" class="headerlink" title="运行代码"></a>运行代码</h2><p>源代码：<br><a href="https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/new_task.php" target="_blank" rel="noopener">new_task.php</a><br><a href="http://github.com/rabbitmq/rabbitmq-tutorials/blob/master/php/worker.php" target="_blank" rel="noopener">worker.php</a></p><hr><p><strong>相关文章</strong><br><a href="https://www.rabbitmq.com/tutorials/tutorial-one-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - “Hello World!”</a><br><a href="https://www.rabbitmq.com/tutorials/tutorial-two-php.html" target="_blank" rel="noopener">RabbitMQ - RabbitMQ tutorial - Work Queues</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/hello-world.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 介绍</a><br><a href="http://wiki.jikexueyuan.com/project/rabbitmq/work-queues.html" target="_blank" rel="noopener">RabbitMQ 能为你做些什么？ - 工作队列</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Extreme ways</title>
      <link href="/Extreme-ways/"/>
      <url>/Extreme-ways/</url>
      
        <content type="html"><![CDATA[<p>转瞬间距离正式入职已经不多不少两个月整。</p><p>对 <a href="http://www.luanxiang.org/blog/archives/2221.html" target="_blank" rel="noopener">stereotype</a> 的理解逐渐深刻起来，不再去争辩什么看起来简单的东西，因为那很有可能是思维陷阱，很有可能让自己浮在水上，看不清池底来回游走的鱼。尽量提醒自己不去简单地思考和表达，正如不鸟万如一曾在 <a href="https://blog.yitianshijie.net/2016/08/18/yitianshijie-newsletter-29/" target="_blank" rel="noopener">一天世界会员通讯：建筑为什么 low？（2016.8.1）</a> 里如是写道：</p><blockquote><p>我们必须承认审美是被论述出来的。同样的结构、图像、风景，用不同的文字描述，会形成截然不同的心理认知和情感冲击。这就是我为什么相当反感中文网络上常见的一种化骨水式的论说方式，姑且称之为「不就是」体。这种文体的爱好者喜欢把任何复杂的现象化解成简单而容易下咽的压缩饼干。「不就是形式大于内容嘛」「不就是钱没给够的问题嘛」「网页版 Apple Pay 不就是支付宝嘛」。很多时候它们或许「是」，但并不「就是」。在理性至上精神和对神秘主义的反感驱使下，人们喜欢用总结中心思想的方式把审美驯服成容易理解的样子——往往也就是某种已经被认可了的旧的样子。这是文化保守主义的体现。</p></blockquote><a id="more"></a><p>两天前的夜里象象和门提起跳槽的事儿，虽然离职本身是没什么可说的个人选择。但其中提及的心路历程让我感同身受：</p><blockquote><p>最近几个月发现其实我对于任何事情都兴趣索然<br>很多别人以为或者我自己以为喜欢的都没那么热爱<br>只想着过自己的节能安份</p></blockquote><p>就像还没愈合的伤口，渐渐因为蹉跎而忘记了伤痛，却因为一次不经意地触碰更加疼痛。我仿佛看到了自己那样模糊而不得的思索与困惑，很清晰，但是又触不可及。</p><p><strong>我最害怕的</strong><br><strong>就是失去对这个世界的好奇和喜爱</strong><br><strong>就是一心想着苟且而不愿再去追逐什么</strong><br><strong>这样的想法甚至出现的更早一些</strong><br><strong>因为我发现我所爱的好像没有那么爱</strong><br><strong>别人追求的东西对我来说也没有多少吸引力</strong></p><p>我曾经想，人类无穷的欲望能够支撑其发展，就像我们有了目标，就可以一直为了目标而奋斗而努力，keep curious 是如此地重要，保持对世界的好奇不仅仅是更多可能性的基石，更是自身发展的永动机。所以我担心自己对待世界的好奇心一点一点地减退，然后成为一个看似无所欲求的行尸走肉。</p><blockquote><p>草食男指的是日本社会中，约出生于 1970 年前后，现今年约 30 岁至 44 岁，一个特殊的男性族群。他们的特色是安静、温和、节俭、彬彬有礼，较为消极与悲观，野心较小，没有大的人生目标。他们追求物质与名利的欲望很低，对追求异性、恋爱及性爱的兴趣也不高。专心于自己的个人嗜好，重视与家人相处的时间，不喜欢长时间投入职场工作以提升社会地位，也不积极于投资理财，偏好保守型的储蓄。</p></blockquote><p>常常跟别人打趣说自己是个草食男，却没曾想到自己愈加暗合了这样的状态和心态，身处万千世界时保有的那份对 intensity 的追逐与热情慢慢减弱，更愿意选择所谓地过好每一天，完成好每一件事，仅此而已。这样单调而漫无目的地混吃等死，使我在一天天的郁郁寡欢中度过，尽管生活看起来并没有那么无趣——买了很多新东西，学习很多新知识，认识很多新角色，看了很多新电影——掰着手指头数了数两个月来看过的电影：《大魚海棠》、《惊天大逆转》、《巴霍巴利王》、《爱宠大机密》、《谍影重重 5》、《星际迷航 3》，俨然成了电影院的熟客。驾轻就熟地买一杯饮料，然后不慌不忙地进场，走马观花地看着荧幕上的演员为我演绎一出戏，一出又一出人生的戏，然后一笑了之，笑的戏中人，更笑观戏者。</p><p>一个人走在通勤的路上，仔细回味着入职两个月来的生活——就好像上了发条的机器人咯吱咯吱地机械运动。从学校到社会，这样的转变对我来说没有任何不适应，无非只是换了个环境换了个消耗时间和精力的地方罢了。工作的 <a href="http://wdxtub.com/2016/03/27/paradigm-shift/" target="_blank" rel="noopener">范式转换</a> 就好像一个 <a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%9B%A0" target="_blank" rel="noopener">meme</a> 一样让我一时间找不到接受的方向。我不知道这样的所谓「职场转型」算不算成功，我也并不那么在乎，毕竟大道理人人都懂，更多的只是实践和执行力的偏差。</p><p>不过在激情减退的同时，还是有些许的欣慰并存。那些突如其来的小确幸总能让我重新认真审视和面对眼前的茫然和不知所措。母上当然还是那样关心我的生活和工作，虽然不常联系，但是每次都能说很多，我尽可能地让她明白我的生活状态，希望不要因为自己刚步入职场、生活独立而让父母为此担心。时不时会想念起家乡的小吃，回想起每次放假回家，我都会按照自己列出的清单一样一样地去吃个遍。忘了是谁曾说我特别喜欢吃小吃，第一次听到这说法的时候我有所迟疑，因为觉得自己并算不上一个严格意义上的「吃货」，不过后来认真想想，我对吃的追求，并不仅仅停在喂饱生命，还有一丝「美食」的想法，纵然自己吃的不多，有这样一颗吃货的心也算是对生活的追求。在家里试着自己动手做饭，然后以此视为自己动手丰衣足食的体验，不管酸甜苦辣，I can control it and I can’t control it sometimes. 生活里的事情，好像从很简单的事情就能领悟道理。</p><p>运动量的减少虽然没有直观反映在体重变化上，但是心里对身体健康的重视却与日俱增，健康的生活方式，健康的饮食搭配，健康的作息规律，都是 <a href="http://taiwan.chtsai.org/2016/03/18/zai_jia_chi_zaocan/" target="_blank" rel="noopener">看着容易但难于驾驭的小事</a>。更不用谈自己信誓旦旦要每周跑步几次的自我承诺。如果自身执行力难以达到，自身执行力容易被外部环境干扰，那就顺应这个法则，用更多的外部条件去介入，去影响自己好了。花钱健身总比花钱看病要值得的多，这样也符合我对身体投资的理念。</p><p>深圳是个年轻的城市，充满活力的城市。街道上行走的人以年轻人居多，很少看到老年人出行。几年前港澳游路过深圳的时候，并未想过自己会在这个城市落脚，更没有想过在这里工作和生活。雨淅淅沥沥地下着，我坐在公交的后排座位上，看着来来往往的人和窗外的不住往后的光景，慢慢感受这个城市的节奏和人文气息。从公交上下来的时候，雨还没停，一直不喜欢打伞，多半是觉得麻烦，不巧没带伞，索性就淋着雨大步向前走去，生命的路或许也像这样有风风雨雨，你觉得它是事儿的时候，多半会一脚陷进泥泞或者被溅起积水弄湿裤脚，抑或为了系紧松散的鞋带而停下脚步，最终拖慢了自己的步伐。你还有可能并不在意这些无关紧要的小打小闹，尽管会因为这样的 tricks 耽误一时半会儿，但是并不妨碍你走向目标的意志。就好像只要你愿意，你就可以去实践、去完成。重要的是那颗坚持不懈的初心，你有没有为了靠近目标而无视风雨，有没有为了自己的许诺而坚持宝贵的契约精神，自己对自己的许诺变得如此举足轻重。</p><blockquote><p>做成事情的重点是策略和坚持，而坚持就是最重要的策略。越来越觉得，无论是编程、雕刻还是建筑，都是技术加艺术的结晶，天赋固然重要，但刻苦练习也是不可或缺的。想要做成事情，不把手弄『脏』是不可能的。</p></blockquote><p>对后端开发的心态不是那样热情，有一部分原因是因为自己想要走的前端路没有达成，除此以外或许是觉得后端开发特别是 <a href="http://www.zcfy.cc/article/php-sucks-889.html" target="_blank" rel="noopener">PHP</a> 的社区氛围不是那样优秀，我当然不能夸夸其谈，在自己还什么都不会的时候对 <a href="https://www.zhihu.com/question/26498147" target="_blank" rel="noopener">世界上最好的编程语言</a> 品头论足，我要做的更多是去学习和探索，在有限的时间内去实现自己的梦想。每天下班的身心疲惫慢慢成为了我的日常，不过在心底里，我依旧心存一丝对技术的渴求。曾听闻过一个开发者，每天下班回家不管有多少事，都还要认真看两个小时的书学习技术。这样不惜弄「脏」双手的积累，无可厚非地给他带来了不菲的回报。前端的发展愈加专业化，我有一种隐隐的预感，如果不能在两年内搭上这趟班车，也许以后再想转型就不是那么容易的事情了。亲爱的自己，你是不是应该从现在开始逃离你的舒适圈？不然，你可能就再没有选择的机会了。</p><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=423118313&auto=0&height=66"></iframe></center><blockquote><p>Extreme ways are back again<br>Extreme places I didn’t know<br>Everything that I’d owned<br>Extreme ways I know,<br>will part the colors of my sea<br>Perfect color me</p></blockquote><p><span style="color: #ffffff;">拉拉杂杂写了一些乱七八糟的东西，只希望在未来的某一天，再次看到这些文字的自己，不要忘了自己的初心，不要忘了自己的思索，不要忘了自己想要成为什么样的自己。</span></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git 简明教程</title>
      <link href="/how-to-use-git/"/>
      <url>/how-to-use-git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-简介"><a href="#Git-简介" class="headerlink" title="Git 简介"></a>Git 简介</h1><p>Git 属于分散型版本管理系统，是为版本管理而设计的软件。<br>Linux 的创始人 Linus Torvalds 在 2005 年开发了 Git 的原型程序。当时，由于在 Linux 内核开发中使用的既有版本管理系统的开发方许可证发生了变更，为了更换新的版本管理系统，Torvalds 开发了 Git。</p><h1 id="什么是版本管理"><a href="#什么是版本管理" class="headerlink" title="什么是版本管理"></a>什么是版本管理</h1><p>版本管理就是管理更新的历史记录。它为我们提供了一些在软件开发过程中必不可少的功能，例如记录一款软件添加或更改源代码的过程，回滚到特定阶段，恢复误删除的文件等。在 Git 出现以前，人们普遍采用 Subversion 等集中型版本管理系统，而现在 Git 已成为主流。</p><a id="more"></a><h1 id="集中型与分散型"><a href="#集中型与分散型" class="headerlink" title="集中型与分散型"></a>集中型与分散型</h1><p>以 Subversion 为代表的集中型，会将仓库集中存放在服务器之中，所以只存在一个仓库。这就是为什么这种版本管理系统会被称作集中型。<br>集中型将所有数据集中存放在服务器当中，有便于管理的有点。但是一旦开发者所处的环境不能连接服务器，就无法获取最新的源代码，开发也就几乎无法进行。服务器宕机时也是同样的道理，而且万一服务器故障导致数据消失，恐怕开发者就再也见不到最新的源代码了。</p><p>以 Git 为代表的分散型，例如 GitHub 会将仓库 Fork 给每一个用户。Fork 就是将 GitHub 的某个特定仓库复制到自己的账户下。Fork 出的仓库与原仓库是两个不同的仓库，开发者可以随意编辑。分散型拥有多个仓库，相对而言稍显复杂。不过，由于本地的开发环境中就有仓库，所以开发者不必连接远程仓库就可以进行开发。</p><p><img src="https://i.v2ex.co/fAhm82RJ.png" alt="Git 常用命令流程图"></p><h1 id="Git-客户端"><a href="#Git-客户端" class="headerlink" title="Git 客户端"></a>Git 客户端</h1><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git 官方客户端</a><br><a href="https://tortoisegit.org/" target="_blank" rel="noopener">TortoiseGit</a><br><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">SourceTree</a></p><h1 id="初始设置"><a href="#初始设置" class="headerlink" title="初始设置"></a>初始设置</h1><p>设置姓名和邮箱地址<br>首先设置使用 Git 时的姓名和邮箱地址。名字请用英文输入。<code>--global</code>  为全局设置参数。</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global user.name <span class="string">"&lt;用户名&gt;"</span></span><br><span class="line">$ git<span class="built_in"> config </span>--global user.email <span class="string">"&lt;用户邮箱&gt;"</span></span><br></pre></td></tr></table></figure><p>这个命令，会在 “~/.gitconfig” 中以如下形式输出设置文件。<br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[user]</span></span><br><span class="line"><span class="attr">name</span> = &lt;用户名&gt;</span><br><span class="line"><span class="attr">email</span> = &lt;用户邮箱&gt;</span><br></pre></td></tr></table></figure></p><h1 id="Git-命令"><a href="#Git-命令" class="headerlink" title="Git 命令"></a>Git 命令</h1><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>git init                <span class="comment">#初始化仓库</span></span><br><span class="line"><span class="variable">$ </span>git status              <span class="comment">#查看仓库状态</span></span><br><span class="line"><span class="variable">$ </span>git status -s           <span class="comment">#查看简单版仓库的状态</span></span><br><span class="line"><span class="variable">$ </span>git show                <span class="comment">#显示某次提交的内容</span></span><br></pre></td></tr></table></figure><h2 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">$ git <span class="keyword">add</span><span class="bash">              <span class="comment">#向暂存区中添加文件</span></span></span><br><span class="line"><span class="bash">$ git add .            <span class="comment">#添加当前目录下的所有文件</span></span></span><br><span class="line"><span class="bash">$ git add &lt;filename&gt;   <span class="comment">#添加 &lt;filename&gt; 文件</span></span></span><br><span class="line"><span class="bash">$ git add -i           <span class="comment">#交互式添加文件到暂存区</span></span></span><br><span class="line"><span class="bash">$ git add -p           <span class="comment">#交互式的保存和取消保存变化</span></span></span><br></pre></td></tr></table></figure><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>git commit                 <span class="comment">#提交仓库的历史记录</span></span><br><span class="line"><span class="variable">$ </span>git commit -m <span class="string">"&lt;comment&gt;"</span>  <span class="comment">#以&lt;comment&gt;作为提交操作的介绍信息进行提交</span></span><br><span class="line"><span class="variable">$ </span>git commit --amend         <span class="comment">#与上次 commit 合并</span></span><br><span class="line"><span class="variable">$ </span>git commit                 <span class="comment">#在编辑器中记述提交信息的格式如下。</span></span><br><span class="line">                             <span class="comment">#第一行：用一行文字简述提交的更改内容</span></span><br><span class="line">                             <span class="comment">#第二行：空行</span></span><br><span class="line">                             <span class="comment">#第三行以后：记述更改的原因和详细内容</span></span><br></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2016/10/27/5811f7fea74ee.png" alt="git三棵树"><br>(Source:<a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">罗杰·杜德勒</a>)</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span>                  <span class="comment">#查看提交日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> --pretty=short   <span class="comment">#只显示提交信息的第一行</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> -p &lt;filename&gt;    <span class="comment">#显示文件 &lt;filename&gt; 的改动</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> -5               <span class="comment">#显示 5 条日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> &lt;分支名&gt;          <span class="comment">#查看某分支的日志</span></span></span><br></pre></td></tr></table></figure><h3 id="查看某一文件的历史改动"><a href="#查看某一文件的历史改动" class="headerlink" title="查看某一文件的历史改动"></a>查看某一文件的历史改动</h3><p>上述命令中 <code>git log -p</code> 可实现查看某一文件的历史改动，不过在 terminal 里面看文本修改为免太不爽，可以试试 <code>gitk</code> 命令：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$ gitk <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br><span class="line">$ gitk <span class="tag">&lt;<span class="name">file_path</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在查看时文件历史时可以在命令中添加 –follow 参数跟踪文件一切变动，使用此命令时，如果查看的特定文件文件曾重命名，也将被跟踪到并输出历史改动</p><h3 id="查找包含特定文件的-commit"><a href="#查找包含特定文件的-commit" class="headerlink" title="查找包含特定文件的 commit"></a>查找包含特定文件的 commit</h3><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$</span> git <span class="built-in">log</span> &lt;filename&gt;</span><br><span class="line"><span class="symbol">$</span> git show &lt;commit_id&gt;</span><br><span class="line"><span class="symbol">$</span> git <span class="built-in">log</span> --follow &lt;文件绝对路径&gt;</span><br></pre></td></tr></table></figure><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p><code>HEAD</code> 表示上一次 commit 的版本<br><code>HEAD~n</code> 表示前第 n 次 commit 的版本<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>git diff                     <span class="comment">#查看更改前后的差别</span></span><br><span class="line"><span class="variable">$ </span>git diff HEAD                <span class="comment">#查看工作树和最新 commit 的差别</span></span><br><span class="line"><span class="variable">$ </span>git diff HEAD~<span class="number">1</span> HEAD       <span class="comment">#比较上一次和这一次代码之间的差异</span></span><br><span class="line"><span class="variable">$ </span>git diff HEAD~<span class="number">3</span> HEAD       <span class="comment">#比较前第三次和这一次代码之间的差异</span></span><br><span class="line"><span class="variable">$ </span>git diff HEAD^^^^^ HEAD      <span class="comment">#比较前第五次和这一次代码之间的差异</span></span><br><span class="line"><span class="variable">$ </span>git checkout -- &lt;filename&gt;   <span class="comment">#回滚到修改前的状态</span></span><br></pre></td></tr></table></figure></p><p>养成这样一个好习惯：在执行 git commit 命令之前先执行 git diff HEAD 命令，查看本次提交与上次提交之间有什么差别，等确认完毕后再进行提交。这里 HEAD 是指向当前分支中最新一次提交的指针。</p><h2 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ git <span class="keyword">reset</span> <span class="keyword">HEAD</span> filename  <span class="comment">#从暂存区移除文件</span></span><br><span class="line">$ git <span class="keyword">reset</span> <span class="comment">--hard HEAD~n  #直接回退到前第 n 个版本。</span></span><br><span class="line">$ git <span class="keyword">reset</span> <span class="comment">--hard SHA     #回到 SHA 对应的 commit 的版本。</span></span><br></pre></td></tr></table></figure><p>可选参数：<br><code>–hard</code> 回退版本，代码也回退，忽略所有修改<br><code>–soft</code> 回退版本，代码不变，回退所有的 add 操作<br><code>–mixed</code> 回退版本，代码不变，保留 add 操作</p><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>git branch &lt;分支名&gt;                           <span class="comment">#以 &lt;branch-name&gt; 为名创建新分支</span></span><br><span class="line"><span class="variable">$ </span>git branch -d &lt;分支名&gt;                        <span class="comment">#删除分支</span></span><br><span class="line"><span class="variable">$ </span>git branch –merged &amp; git branch –no-merged   <span class="comment">#返回已合并或未合并的分支列表</span></span><br><span class="line"><span class="variable">$ </span>git checkout &lt;分支名&gt;                         <span class="comment">#切换分支</span></span><br><span class="line"><span class="variable">$ </span>git merge                                    <span class="comment">#与本地当前分支合并。</span></span><br><span class="line"><span class="variable">$ </span>git merge &lt;分支名&gt;                            <span class="comment">#合并分支到当前分支</span></span><br></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2016/10/27/5811f85386747.png" alt="合并分支"><br>(Source:<a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">罗杰·杜德勒</a>)</p><h2 id="远程仓库操作"><a href="#远程仓库操作" class="headerlink" title="远程仓库操作"></a>远程仓库操作</h2><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="params">&lt;远程仓库网址&gt;</span> <span class="params">&lt;本地目录名&gt;</span>                <span class="meta">#将远程仓库克隆到本地</span></span><br><span class="line">$ git clone -b <span class="params">&lt;分支名&gt;</span> <span class="params">&lt;远程仓库网址&gt;</span> <span class="params">&lt;工作目录名&gt;</span>    <span class="meta">#克隆远程仓库的特定分支=</span></span><br><span class="line">$ git clone -o <span class="params">&lt;自定义仓库名&gt;</span> <span class="params">&lt;远程仓库网址&gt;</span>           <span class="meta">#克隆远程仓库并自定义其名称</span></span><br><span class="line">$ git fetch <span class="params">&lt;远程仓库名&gt;</span>                        <span class="meta">#从远程库抓取数据</span></span><br><span class="line">$ git fetch <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;分支名&gt;</span>                <span class="meta">#从远程库抓取特定分支的数据</span></span><br><span class="line">$ git remote                                   <span class="meta">#查看当前远程库</span></span><br><span class="line">$ git remote -v                                <span class="meta">#查看远程仓库详细信息</span></span><br><span class="line">$ git remote <span class="params">&lt;远程仓库名&gt;</span>                       <span class="meta">#查看远程仓库</span></span><br><span class="line">$ git remote show <span class="params">&lt;远程仓库名&gt;</span>                  <span class="meta">#查看远程仓库信息</span></span><br><span class="line">$ git remote add <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;远程仓库网址&gt;</span>     <span class="meta">#添加远程仓库</span></span><br><span class="line">$ git remote rename <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;新远程仓库名&gt;</span>  <span class="meta">#重命名远程仓库</span></span><br><span class="line">$ git remote update <span class="params">&lt;远程仓库名&gt;</span>                <span class="meta">#更新分支列表</span></span><br><span class="line">$ git remote rm <span class="params">&lt;远程仓库名&gt;</span>                    <span class="meta">#删除远程仓库</span></span><br><span class="line">$ git remote add <span class="params">&lt;别名&gt;</span> <span class="params">&lt;远程仓库网址&gt;</span>           <span class="meta">#设置远程仓库别名</span></span><br><span class="line">$ git remote prune origin                      <span class="meta">#删除任何不存在于远端仓库的分支</span></span><br><span class="line">$ git pull                                     <span class="meta">#拉取远程库默认分支并合并到当前仓库，相当于 fetch+merge</span></span><br><span class="line">$ git pull -b <span class="params">&lt;分支名&gt;</span>                          <span class="meta">#拉取远程库特定分支并合并到当前仓库</span></span><br><span class="line">$ git push origin master                       <span class="meta">#推送数据到默认的远程仓库的主分支</span></span><br><span class="line">$ git push origin <span class="params">&lt;分支名&gt;</span>                      <span class="meta">#推送数据到默认的远程仓库的特定分支</span></span><br><span class="line">$ git push origin --tags                       <span class="meta">#推送数据到默认的远程仓库的特定分支并添加标签</span></span><br><span class="line">$ git push <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;分支名&gt;</span>                 <span class="meta">#推送数据到远程仓库的特定分支</span></span><br><span class="line">$ git push -u <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;分支名&gt;</span>              <span class="meta">#指定远程仓库名和分支名为默认值</span></span><br><span class="line">$ git push -f <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;分支名&gt;</span>              <span class="meta">#推送数据并强制覆盖到远程仓库的特定分支</span></span><br><span class="line">$ git push <span class="params">&lt;远程仓库名&gt;</span> <span class="params">&lt;本地分支名&gt;</span>:<span class="params">&lt;远程分支名&gt;</span> <span class="meta">#推送数据到远程仓库的特定分支，后者不存在时则新建。</span></span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git tag                               #列出所有标签</span><br><span class="line">$ git tag -a &lt;标签名&gt; -m <span class="string">"&lt;提交信息&gt;"</span>    #为版本打一个标签</span><br><span class="line">$ git reflog                            #显示本地已完成的操作列表</span><br><span class="line">$ git shortlog -sn                      #显示提交记录的参与者列表</span><br><span class="line">$ git help                              #帮助文档</span><br><span class="line">$ git reset                             #撤销上一次 git <span class="builtin-name">add</span> . 操作</span><br><span class="line">$ gitk                                  #打开图形化 git 界面</span><br><span class="line">$ git<span class="built_in"> config </span>--global color.ui auto     #彩色的 git 输出</span><br><span class="line">$ git<span class="built_in"> config </span>format.pretty oneline      #显示历史记录时，每个提交的信息只显示一行</span><br></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2016/10/27/5811f9b6e7c76.png" alt="Git 知识结构"><br>(Source:<a href="http://7xifb5.com1.z0.glb.clouddn.com/wustrive-hexogit%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84.png" target="_blank" rel="noopener">wustrive2008</a>)</p><h2 id="gitignore"><a href="#gitignore" class="headerlink" title="gitignore"></a>gitignore</h2><p>对于 Git 项目中不想进行跟踪、同步的文件 / 目录，可将其写入 <code>gitignore</code> 文件中。在 Github 上有人整理了各种开发配置下的 <code>gitignore</code> 文件模板，你可以 <a href="https://github.com/github/gitignore" target="_blank" rel="noopener">在这里</a> 进行挑选。</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><h2 id="添加-SSH-密钥对"><a href="#添加-SSH-密钥对" class="headerlink" title="添加 SSH 密钥对"></a>添加 SSH 密钥对</h2><p>操作远程库（clone/push/pull）时产生如下提示 ：</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could <span class="keyword">not</span> <span class="built_in">read</span> <span class="built_in">from</span> remote repository.</span><br><span class="line">Please make sure you have <span class="keyword">the</span> correct access rights <span class="keyword">and</span> <span class="keyword">the</span> repository exists.</span><br></pre></td></tr></table></figure><p>这是由于没有将 SSH 密钥对添加到本地 ssh-agent 和 Github 中导致的。如想了解 ssh-agent 原理，可阅读 <a href="http://yijiebuyi.com/blog/4b5c272e7058cb331098250c8e98eb3e.html" target="_blank" rel="noopener">ssh-agent 与 ssh 的区别</a>，可进行如下操作：</p><p>1.确保你已经生成了 SSH 密钥对<br>2.使用 Git Bash，打开 ssh-agent：<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span></span><br><span class="line">Agent pid 59566</span><br></pre></td></tr></table></figure></p><p>3.添加 SSH 密钥对，默认密钥文件名为 <code>id_rsa</code> 和 <code>id_rsa.pub</code>，可根据需要修改密钥文件名：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ ssh-<span class="builtin-name">add</span> ~/.ssh/id_rsa</span><br><span class="line">Identity added: /c/Users/&lt;用户名&gt;/.ssh/id_rsa (/c/Users/&lt;用户名&gt;/.ssh/id_rsa)</span><br></pre></td></tr></table></figure></p><p>4.登录 Github 用户设置界面，进入 SSH 和 GPG 密钥对界面，将本地的 SSH 公钥（*.pub文件）中的内容复制添加到 Github 的 New SSH key 窗口的 key 中，即可添加成功。</p><p>ps. 可在根目录中的 .bash_profile 文件（即 ~/.bash_profile）添加命令别名，今后即可使用别名 <code>sshadd</code> 完成上述操作：<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span><span class="keyword">alias</span> sshadd=<span class="string">'eval "$(ssh-agent -s)" &amp;&amp; ssh-add ~/.ssh/id_rsa'</span></span><br></pre></td></tr></table></figure></p><p>或者在该文件中添加如下命令，今后打开 git bash 时即可自动完成上述关于 SSH 密钥的操作：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ eval <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span> &amp;&amp; ssh-<span class="builtin-name">add</span> ~/.ssh/github_rsa</span><br></pre></td></tr></table></figure></p><h2 id="Git-的代理设置"><a href="#Git-的代理设置" class="headerlink" title="Git 的代理设置"></a>Git 的代理设置</h2><p>在对 Github 某仓库进行 git clone 操作时发现，由于身处强国，下载速度极其不稳定，时快时慢甚至断流导致 clone 失败。所以想到为 Git 设置代理解决问题。<br>这也算是一个大众问题了，从 <a href="https://gist.github.com/laispace/666dd7b27e9116faece6" target="_blank" rel="noopener">这里</a> 看到了答案：</p><ol><li>确认自己使用的代理工具在本地监听的端口 <code>&lt;localport&gt;</code></li><li><p>在 git bash 中运行如下命令：</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">$ git config --global https<span class="selector-class">.proxy</span> http:<span class="comment">//127.0.0.1:&lt;localport&gt;</span></span><br><span class="line">$ git config --global https<span class="selector-class">.proxy</span> https:<span class="comment">//127.0.0.1:&lt;localport&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以使用 http 或 https 的 URL 进行 clone 操作。<br>如果需要取消代理设置：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global --unset http.proxy</span><br><span class="line">$ git<span class="built_in"> config </span>--global --unset https.proxy</span><br></pre></td></tr></table></figure></li></ol><p>在 Git 官网的 <a href="https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git#_git_config" target="_blank" rel="noopener">git-config 页面</a> 看到了这样一段话：</p><blockquote><p>可以用 git config 配置 Git。</p><p>Git 使用一系列配置文件来保存你自定义的行为。 它首先会查找 <code>/etc/gitconfig</code>文件，该文件含有系统里每位用户及他们所拥有的仓库的配置值。 如果你传递 <code>--system</code> 选项给 <code>git config</code>，它就会读写该文件。</p><p>接下来 Git 会查找每个用户的 <code>~/.gitconfig</code> 文件（或者 <code>~/.config/git/config</code> 文件）。 你可以传递 <code>--global</code> 选项让 Git 读写该文件。</p><p>最后 Git 会查找你正在操作的版本库所对应的 Git 目录下的配置文件（<code>.git/config</code>）。 这个文件中的值只对该版本库有效。</p><p>以上三个层次中每层的配置（系统、全局、本地）都会覆盖掉上一层次的配置，所以 <code>.git/config</code> 中的值会覆盖掉 <code>/etc/gitconfig</code> 中所对应的值。</p><p>[NOTE]<br>Git 的配置文件是纯文本的，所以你可以直接手动编辑这些配置文件，输入合乎语法的值。 但是运行 <code>git config</code> 命令会更简单些。</p></blockquote><p>所以我们可以用 <code>git config --help</code> 命令打开帮助页面，研究一下 <code>git config</code> 中各种命令的用途，然后按格式添加在根目录中的 <code>.gitconfig</code> （即 ~/.gitconfig）文件中。比如对照上述设置代理的配置可按如下格式添加：<br><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="string">[http]</span></span><br><span class="line">proxy = http://<span class="number">127.0.0.1:1080</span></span><br><span class="line"></span><br><span class="line"><span class="string">[https]</span></span><br><span class="line">proxy = http://<span class="number">127.0.0.1:1080</span></span><br></pre></td></tr></table></figure></p><p>关于 <code>.gitconfig</code> 应该还有很多玩儿法，如果你有什么好思路不妨在评论区分享给大家。</p><h2 id="Git-多账户"><a href="#Git-多账户" class="headerlink" title="Git 多账户"></a>Git 多账户</h2><p><strong>Git 使用邮箱进行身份验证</strong>，所以 Git 多账户存在以下使用情景：</p><ul><li>同一台电脑可有多个使用相同邮箱的 Git 账号，密钥默认读取 id_rsa。 为实现在不同网站以<strong>不同用户名，相同邮箱</strong>进行操作，可编辑 <code>~/.ssh/config</code> ：</li></ul><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">host github</span><br><span class="line">   hostname github.com</span><br><span class="line">  <span class="built_in"> Port </span>22</span><br><span class="line">host gitlab</span><br><span class="line">   hostname gitlab.zjut.com</span><br><span class="line">  <span class="built_in"> Port </span>65095</span><br></pre></td></tr></table></figure><ul><li>同一台电脑可有多个使用不同邮箱的 Git 账号，web1 使用 id_rsa 密钥，web2 使用 id_rsa_github 密钥。为实现在不同网站以<strong>不同用户名，不同邮箱</strong>进行操作，可进行如下操作：</li></ul><p>1.编辑 <code>~/.ssh/config</code> ：<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># web1</span></span><br><span class="line">Host web1</span><br><span class="line">    HostName gitlab.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">   <span class="built_in"> User </span>name1</span><br><span class="line"></span><br><span class="line"><span class="comment"># web2</span></span><br><span class="line">Host web2</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_github</span><br><span class="line">   <span class="built_in"> User </span>name2</span><br></pre></td></tr></table></figure></p><p>2.取消用户名和邮箱地址的全局设置<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global --unset user.name</span><br><span class="line">$ git<span class="built_in"> config </span>--global --unset user.email</span><br></pre></td></tr></table></figure></p><p>3.进入每个项目单独设置自己的用户名和邮箱地址<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span> user.name <span class="string">"&lt;用户名&gt;"</span></span><br><span class="line">$ git<span class="built_in"> config </span> user.email <span class="string">"&lt;用户邮箱&gt;"</span></span><br></pre></td></tr></table></figure></p><p>4.测试是否配置成功<br><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh-T git<span class="variable">@gitlab</span>.com              <span class="comment">#使用 HostName 测试</span></span><br><span class="line"><span class="variable">$ </span>ssh-T git<span class="variable">@web2</span>                    <span class="comment">#使用 Host 测试</span></span><br></pre></td></tr></table></figure></p><h2 id="更新-Github-中-fork-的项目"><a href="#更新-Github-中-fork-的项目" class="headerlink" title="更新 Github 中 fork 的项目"></a>更新 Github 中 fork 的项目</h2><p>在 Github 上 fork 了一些牛人的项目，但自己 fork 的项目是静止不变的，不会随原项目的更新而更新。当原项目更新时，我们可使用如下方法更新自己仓库中相应的项目：<br>1.克隆自己的项目到本地：<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">&lt;自己的远程仓库网址&gt;</span></span><br></pre></td></tr></table></figure></p><p>2.进入克隆到本地的项目目录，把 fork 的原项目作为一个远程仓库以 upstream 为别名添加到本地库中：<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">$ git remote <span class="keyword">add</span><span class="bash"> upstream &lt;原远程仓库网址&gt;</span></span><br></pre></td></tr></table></figure></p><p>3.拉取另一个远程仓库的相应分支合并到本地库：<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ git pull upstream <span class="literal">master</span></span><br></pre></td></tr></table></figure></p><p>4.将合并后的项目推送到 Github 上自己的项目中：<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure></p><h2 id="追加改动的-commit"><a href="#追加改动的-commit" class="headerlink" title="追加改动的 commit"></a>追加改动的 commit</h2><p>当完成某一次 commit 后又进行了代码改动，但不想再提交一个新的 commit，这时可以使用如下命令追加改动文件到前一个 commit：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">$ git <span class="keyword">add</span><span class="bash"> &lt;文件名&gt;                <span class="comment">#将修改的文件添加到暂存区</span></span></span><br><span class="line"><span class="bash">$ git commit --amend -C HEAD     <span class="comment">#追加改动到上一次 commit</span></span></span><br></pre></td></tr></table></figure><h2 id="暂时处理其他项目的修改"><a href="#暂时处理其他项目的修改" class="headerlink" title="暂时处理其他项目的修改"></a>暂时处理其他项目的修改</h2><p>当你正在进行项目中某一部分的工作，里面的东西处于一个比较杂乱的状态，而你想转到其他分支上进行一些工作。问题是，你不想提交进行了一半的工作，否则以后你无法回到这个工作点。这时候可以将现场储藏起来，然后处理插队需求或切换到其他分支工作，之后再将现场取出继续工作：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>git stash           <span class="comment">#储藏现场以便之后继续工作</span></span><br><span class="line"><span class="variable">$ </span>git stash list      <span class="comment">#查看所有被储藏的现场列表</span></span><br><span class="line"><span class="variable">$ </span>git stash apply     <span class="comment">#恢复现场，但是不删除现场备份</span></span><br><span class="line"><span class="variable">$ </span>git stash pop       <span class="comment">#恢复现场，同时删除现场备份</span></span><br><span class="line"><span class="variable">$ </span>git stash drop      <span class="comment">#删除现场备份</span></span><br></pre></td></tr></table></figure><p>可以从 pop 关键字看出储藏结构是堆栈，因此你可以在这个上面玩儿出其他花样。</p><h2 id="使用外部软件进行-diff-merge"><a href="#使用外部软件进行-diff-merge" class="headerlink" title="使用外部软件进行 diff/merge"></a>使用外部软件进行 diff/merge</h2><p>作为一个伪程序狗，终究还是不能逃脱使用 GUI 的宿命。由于 Git 自带的 <code>git diff</code> 并不能够满足某些场景下的使用。我们需要设置一些第三方对比软件进行新旧文档的比较 / 合并。这里笔者使用 Beyond Compare 4 进行举例：</p><p><code>git diff</code> 是普通的逐行对比命令，使用外部比较工具需要使用 <code>git difftool</code> 命令，假设 Beyond Compare 4 已安装至 <code>E:\Program Files\Beyond Compare 4</code> 目录，在使用前我们需进行如下配置，方法有二：</p><ol><li><p>执行 Git 命令进行配置：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global diff.tool bc4</span><br><span class="line">$ git<span class="built_in"> config </span>--global difftool.bc4.path <span class="string">"e:/program files/beyond compare 4/bcomp.exe"</span></span><br><span class="line">$ git<span class="built_in"> config </span>--global merge.tool bc4</span><br><span class="line">$ git<span class="built_in"> config </span>--global mergetool.bc4.path <span class="string">"e:/program files/beyond compare 4/bcomp.exe"</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <code>. gitconfig</code> 文件进行配置，添加如下项：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[diff]</span><br><span class="line"> <span class="built_in"> tool </span>= bc</span><br><span class="line">[difftool]</span><br><span class="line">  prompt = <span class="literal">false</span></span><br><span class="line">[difftool <span class="string">"bc"</span>]</span><br><span class="line">  path = e:/program files/beyond compare 4/bcomp.exe</span><br><span class="line">[merge]</span><br><span class="line"> <span class="built_in"> tool </span>= bc</span><br><span class="line">[mergetool <span class="string">"bc"</span>]</span><br><span class="line">  path = e:/program files/beyond compare 4/bcomp.exe</span><br></pre></td></tr></table></figure></li></ol><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>列举一些实用的 Alias，可根据自己需要酌情修改，并将其写入 <code>.bash_profile</code> 文件中实现自动加载：</p><figure class="highlight vhdl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alias</span> g=git</span><br><span class="line"><span class="keyword">alias</span> ga=<span class="symbol">'git</span> add'</span><br><span class="line"><span class="keyword">alias</span> gaa=<span class="symbol">'git</span> add <span class="comment">--all'</span></span><br><span class="line"><span class="keyword">alias</span> gap=<span class="symbol">'git</span> add <span class="comment">--patch'</span></span><br><span class="line"><span class="keyword">alias</span> gb=<span class="symbol">'git</span> branch'</span><br><span class="line"><span class="keyword">alias</span> gba=<span class="symbol">'git</span> branch -a'</span><br><span class="line"><span class="keyword">alias</span> gbr=<span class="symbol">'git</span> branch <span class="comment">--remote'</span></span><br><span class="line"><span class="keyword">alias</span> gc=<span class="symbol">'git</span> commit -v'</span><br><span class="line"><span class="keyword">alias</span> <span class="symbol">'gc</span>!'=<span class="symbol">'git</span> commit -v <span class="comment">--amend'</span></span><br><span class="line"><span class="keyword">alias</span> gca=<span class="symbol">'git</span> commit -v -a'</span><br><span class="line"><span class="keyword">alias</span> <span class="symbol">'gca</span>!'=<span class="symbol">'git</span> commit -v -a <span class="comment">--amend'</span></span><br><span class="line"><span class="keyword">alias</span> gcl=<span class="symbol">'git</span> config <span class="comment">--list'</span></span><br><span class="line"><span class="keyword">alias</span> gclean=<span class="symbol">'git</span> reset <span class="comment">--hard &amp;&amp; git clean -dfx'</span></span><br><span class="line"><span class="keyword">alias</span> gcm=<span class="symbol">'git</span> checkout master'</span><br><span class="line"><span class="keyword">alias</span> gcmsg=<span class="symbol">'git</span> commit -m'</span><br><span class="line"><span class="keyword">alias</span> gco=<span class="symbol">'git</span> checkout'</span><br><span class="line"><span class="keyword">alias</span> gcount=<span class="symbol">'git</span> shortlog -sn'</span><br><span class="line"><span class="keyword">alias</span> gcp=<span class="symbol">'git</span> cherry-pick'</span><br><span class="line"><span class="keyword">alias</span> gcs=<span class="symbol">'git</span> commit -S'</span><br><span class="line"><span class="keyword">alias</span> gd=<span class="symbol">'git</span> diff'</span><br><span class="line"><span class="keyword">alias</span> gdc=<span class="symbol">'git</span> diff <span class="comment">--cached'</span></span><br><span class="line"><span class="keyword">alias</span> gdt=<span class="symbol">'git</span> difftool'</span><br><span class="line"><span class="keyword">alias</span> gg=<span class="symbol">'git</span> gui citool'</span><br><span class="line"><span class="keyword">alias</span> gga=<span class="symbol">'git</span> gui citool <span class="comment">--amend'</span></span><br><span class="line"><span class="keyword">alias</span> ggpnp=<span class="symbol">'git</span> pull origin `git rev-parse <span class="comment">--abbrev-ref HEAD` &amp;&amp; git push origin `git rev-parse --abbrev-ref HEAD`'</span></span><br><span class="line"><span class="keyword">alias</span> ggpull=<span class="symbol">'git</span> pull origin `git rev-parse <span class="comment">--abbrev-ref HEAD`'</span></span><br><span class="line"><span class="keyword">alias</span> ggpur=<span class="symbol">'git</span> pull <span class="comment">--rebase origin `git rev-parse --abbrev-ref HEAD`'</span></span><br><span class="line"><span class="keyword">alias</span> ggpush=<span class="symbol">'git</span> push origin `git rev-parse <span class="comment">--abbrev-ref HEAD`'</span></span><br><span class="line"><span class="keyword">alias</span> gignore=<span class="symbol">'git</span> update-index <span class="comment">--assume-unchanged'</span></span><br><span class="line"><span class="keyword">alias</span> gignored=<span class="symbol">'git</span> ls-files -v | grep <span class="string">"^[[:lower:]]"</span>'</span><br><span class="line"><span class="keyword">alias</span> git-svn-dcommit-push=<span class="symbol">'git</span> svn dcommit &amp;&amp; git push github master:svntrunk'</span><br><span class="line"><span class="keyword">alias</span> gk=<span class="symbol">'gitk</span> <span class="comment">--all --branches'</span></span><br><span class="line"><span class="keyword">alias</span> gl=<span class="symbol">'git</span> pull'</span><br><span class="line"><span class="keyword">alias</span> glg=<span class="symbol">'git</span> log <span class="comment">--stat --max-count=10'</span></span><br><span class="line"><span class="keyword">alias</span> glgg=<span class="symbol">'git</span> log <span class="comment">--graph --max-count=10'</span></span><br><span class="line"><span class="keyword">alias</span> glgga=<span class="symbol">'git</span> log <span class="comment">--graph --decorate --all'</span></span><br><span class="line"><span class="keyword">alias</span> glo=<span class="symbol">'git</span> log <span class="comment">--oneline --decorate --color'</span></span><br><span class="line"><span class="keyword">alias</span> globurl=<span class="symbol">'noglob</span> urlglobber '</span><br><span class="line"><span class="keyword">alias</span> glog=<span class="symbol">'git</span> log <span class="comment">--oneline --decorate --color --graph'</span></span><br><span class="line"><span class="keyword">alias</span> glp=_git_log_prettily</span><br><span class="line"><span class="keyword">alias</span> gm=<span class="symbol">'git</span> merge'</span><br><span class="line"><span class="keyword">alias</span> gmt=<span class="symbol">'git</span> mergetool <span class="comment">--no-prompt'</span></span><br><span class="line"><span class="keyword">alias</span> gp=<span class="symbol">'git</span> push'</span><br><span class="line"><span class="keyword">alias</span> gpoat=<span class="symbol">'git</span> push origin <span class="comment">--all &amp;&amp; git push origin --tags'</span></span><br><span class="line"><span class="keyword">alias</span> gr=<span class="symbol">'git</span> remote'</span><br><span class="line"><span class="keyword">alias</span> grba=<span class="symbol">'git</span> rebase <span class="comment">--abort'</span></span><br><span class="line"><span class="keyword">alias</span> grbc=<span class="symbol">'git</span> rebase <span class="comment">--continue'</span></span><br><span class="line"><span class="keyword">alias</span> grbi=<span class="symbol">'git</span> rebase -i'</span><br><span class="line"><span class="keyword">alias</span> grep=<span class="symbol">'grep</span>  <span class="comment">--color=auto --exclude-dir=&#123;.bzr,.cvs,.git,.hg,.svn&#125;'</span></span><br><span class="line"><span class="keyword">alias</span> grh=<span class="symbol">'git</span> reset HEAD'</span><br><span class="line"><span class="keyword">alias</span> grhh=<span class="symbol">'git</span> reset HEAD <span class="comment">--hard'</span></span><br><span class="line"><span class="keyword">alias</span> grmv=<span class="symbol">'git</span> remote rename'</span><br><span class="line"><span class="keyword">alias</span> grrm=<span class="symbol">'git</span> remote remove'</span><br><span class="line"><span class="keyword">alias</span> grset=<span class="symbol">'git</span> remote set-url'</span><br><span class="line"><span class="keyword">alias</span> grt=<span class="symbol">'cd</span> $(git rev-parse <span class="comment">--show-toplevel || echo ".")'</span></span><br><span class="line"><span class="keyword">alias</span> grup=<span class="symbol">'git</span> remote update'</span><br><span class="line"><span class="keyword">alias</span> grv=<span class="symbol">'git</span> remote -v'</span><br><span class="line"><span class="keyword">alias</span> gsd=<span class="symbol">'git</span> svn dcommit'</span><br><span class="line"><span class="keyword">alias</span> gsps=<span class="symbol">'git</span> show <span class="comment">--pretty=short --show-signature'</span></span><br><span class="line"><span class="keyword">alias</span> gsr=<span class="symbol">'git</span> svn rebase'</span><br><span class="line"><span class="keyword">alias</span> gss=<span class="symbol">'git</span> status -s'</span><br><span class="line"><span class="keyword">alias</span> gst=<span class="symbol">'git</span> status'</span><br><span class="line"><span class="keyword">alias</span> gsta=<span class="symbol">'git</span> stash'</span><br><span class="line"><span class="keyword">alias</span> gstd=<span class="symbol">'git</span> stash drop'</span><br><span class="line"><span class="keyword">alias</span> gstp=<span class="symbol">'git</span> stash pop'</span><br><span class="line"><span class="keyword">alias</span> gsts=<span class="symbol">'git</span> stash show <span class="comment">--text'</span></span><br><span class="line"><span class="keyword">alias</span> gts=<span class="symbol">'git</span> tag -s'</span><br><span class="line"><span class="keyword">alias</span> gunignore=<span class="symbol">'git</span> update-index <span class="comment">--no-assume-unchanged'</span></span><br><span class="line"><span class="keyword">alias</span> gunwip=<span class="symbol">'git</span> log -n <span class="number">1</span> | grep -q -c <span class="string">"\-\-wip\-\-"</span> &amp;&amp; git reset HEAD~<span class="number">1</span>'</span><br><span class="line"><span class="keyword">alias</span> gup=<span class="symbol">'git</span> pull <span class="comment">--rebase'</span></span><br><span class="line"><span class="keyword">alias</span> gvt=<span class="symbol">'git</span> verify-tag'</span><br><span class="line"><span class="keyword">alias</span> gwc=<span class="symbol">'git</span> whatchanged -p <span class="comment">--abbrev-commit --pretty=medium'</span></span><br><span class="line"><span class="keyword">alias</span> gwip=<span class="symbol">'git</span> add -A; git ls-files <span class="comment">--deleted -z | xargs -r0 git rm; git commit -m "--wip--"'</span></span><br><span class="line"><span class="keyword">alias</span> gad=<span class="symbol">'git</span> diff <span class="comment">--name-only --diff-filter=M --relative | xargs -rt git add'</span></span><br><span class="line"><span class="keyword">alias</span> log=<span class="string">"git log --oneline --graph --decorate --color=always"</span></span><br><span class="line"><span class="keyword">alias</span> logg=<span class="string">"git log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)—     %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative"</span></span><br></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2016/08/27/57c1c74738dc1.png" alt="Git Cheat Sheet"></p><hr><p><strong>相关文章</strong><br><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰Git系列教程</a><br><a href="http://www.php-z.com/blog-200052-112.html" target="_blank" rel="noopener">Git 学习之基本操作（一）</a><br><a href="http://www.php-z.com/blog-200052-105.html" target="_blank" rel="noopener">Git 入门</a><br><a href="http://www.php-z.com/blog-200052-106.html" target="_blank" rel="noopener">Git 安装和初始设置</a><br><a href="https://www.sdk.cn/news/2957" target="_blank" rel="noopener">常用的 12 个 Git 基本命令</a><br><a href="http://www.jianshu.com/p/d1c9bfa612db" target="_blank" rel="noopener">git 和 svn diff 命令行可视效果</a><br><a href="http://www.kuqin.com/shuoit/20151010/348440.html" target="_blank" rel="noopener">关于 Git 和 Github 你不知道的十件事</a><br><a href="https://wsgzao.github.io/post/git/" target="_blank" rel="noopener">Git 常用命令和 Git 团队使用规范指南</a><br><a href="https://gist.github.com/suziewong/4378434" target="_blank" rel="noopener">Git 的多账号如何处理？</a><br><a href="http://liujin.me/blog/2015/05/25/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/" target="_blank" rel="noopener">Git 常用命令</a><br><a href="http://www.barretlee.com/blog/2014/05/07/cb-git-improve/" target="_blank" rel="noopener">git版本管理策略及相关技巧(A)</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《关键词》读书笔记</title>
      <link href="/keywords-clip/"/>
      <url>/keywords-clip/</url>
      
        <content type="html"><![CDATA[<h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>公知作为一个缩略的名词本身是不会被污名化的行为所玷污的，一个觉得要污名化公共知识分子的社会，正是最需要公共知识分子的社会。</p><h3 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h3><p>当前中国最大的问题不是缺乏常识，而是常识的矛盾；不是价值的虚无，而是价值观念与社会现实之间的断裂。</p><h3 id="冷漠"><a href="#冷漠" class="headerlink" title="冷漠"></a>冷漠</h3><p>有些前苏联和东欧国家的知识分子形容他们当年面对的政体是一种“不道德的政治”，理由是人民的冷漠、互不关怀和良心的虚无，恰恰乃政权所需；他们不是怕你没良知，只怕你太热心。然而吊诡的是，你又不可能长久而稳定地管治一群什么都不相信的人。一个彻底原子化的社会，注定是要瓦解的。所以1987年那一年，苏联媒体上最常见的一句话是“我们不可能再这样子下去了”。</p><h3 id="泄愤杀人"><a href="#泄愤杀人" class="headerlink" title="泄愤杀人"></a>泄愤杀人</h3><p>最叫我震惊和不解的，更是大多数人对近年诸多“泄愤杀人”案之解释的轻易接受。似乎我们都以为杀人不难，生命易损。就像坊间流行的《大秦帝国》那一类书，不只轻描淡写地略过“坑赵卒五十万”背后的残酷血腥，更要歌颂其雄壮“大气”。这么一个把杀人看得很容易很不难理解的国家是可怕的。</p><a id="more"></a><h3 id="无知"><a href="#无知" class="headerlink" title="无知"></a>无知</h3><p>知识分子或者自诩为比较有常识的人常常容易忽略某些基层的处境，甚至讪笑在他们眼中很不可思议的行为。因为我们的眼睛被安定感遮蔽了，使我们看不到这个世界还有太多人活得不像我们这么安稳。</p><h3 id="炫富"><a href="#炫富" class="headerlink" title="炫富"></a>炫富</h3><p>英国流行病学专家理查德·威尔金森（Richard Wilkinson）和凯特·皮克特（Kate Pickett）在他们那本广受好评的《不平等的痛苦》（The Spirit Level）中提到：“伴随着焦虑水平的上升，自恋也随之上升，二者拥有共同的根源。它们都是由所谓的‘社会评价威胁’的增加引起的。”简单地说，“社会评价威胁”是一种身份焦虑，把自己的尊严完全建立在其他人的评价之上，一天到晚就在担心人家瞧不起自己。根据这两位学者的比较研究，他们发现一个社会越是不平等，其成员就越是忧虑他人对自己的看法。在一个极端不平等的社会里面，大家既会用消费来增加自信，想让他人看得起自己；也会因为在炫耀性消费面前自惭形秽，觉得自己被人贬低贱视。</p><h3 id="媚俗"><a href="#媚俗" class="headerlink" title="媚俗"></a>媚俗</h3><p>无论是从字面意义还是引申意义讲，媚俗是把人类生存中根本不予接受的一切都排除在视野之外。”</p><h3 id="个别"><a href="#个别" class="headerlink" title="个别"></a>个别</h3><p>所有从事文艺创作的人都明白，哀鸿遍野还及不上一只孤雁回旋那么动人。想要诱发观者的情绪，你就得掌握一套关于具体的修辞学，因为人类不因普遍与抽象的事物而动情。同样，政客演讲与其大抛数字，还不如说点小故事；与其让我们知道有几十万人活在贫困线下，还不如细致地描绘一个贫困家庭的日常生活。</p><p>“个别事件”在公关修辞学里的唯一作用，就是抽空真实的个别事件。对于一部小说或者一部电影来说，“个别”意味着更具体更丰富，因此也变得更加动人的故事；对于政客而言，“个别”却是抽象和贫血的同义词。</p><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><p>在黑格尔的年代，哲学的问题是它总是来得太迟了；在我们这个年代，哲学的问题却是它总是来得太早。</p><h3 id="国情"><a href="#国情" class="headerlink" title="国情"></a>国情</h3><p>国情既是一国的现实，也是该国国民对这种现实状况的认知和判断。<br>现实和理想本该有所差异，每一个时代的人都会觉得自己身处最坏的时代，每一个社会的成员也都会嫌恶自己的社会不够完美，由是批判，由是改变，人类方有进步可言。<br>总是用国情挡掉一切外来批评，固然有套文化相对论的基础；却也是对理想的否定，因为它同时还挡掉了国民内部的不满。这是以国情的现实面消解了国情的理想面，等于是在告诉人民“这已经是最好的情况，最理想的社会，不可能再好了”；如果有人想要更理想的社会，那他的理想一定是源自外国的舶来品。</p><p>从前我们高扬理想无视现实，深信脚下大地是实现完美蓝图的一张白纸；现在我们标举现实漠视理想，甚至还把现实升华为理想，要大家像拥抱理想般地拥抱现实。近年学术界中种种“中国模式”的论说便颇有这番把现实变成理想的味道，仿佛我们摸着石头过河摸了半天，原来已经一步步走出了之前无人料及的理想天地。而舆论界中最堪代表的例子，则是《环球时报》那篇有名的社论，它宣称“中国腐败无法通过打击或者通过改革来消除……这是一个根植于社会发展整体水平的问题”，所以“适度腐败”也不妨接受。<br>以前大家反腐，是因为大家有一个社会不该腐败的理想；如今我们应该顺从国情，不只承认腐败的现实存在，还要接受它。不努力以理想拉拔现实，反而想把理想拖回现实的泥沼，我不晓得，这是否也是我国的独特国情。</p><h3 id="美国也有"><a href="#美国也有" class="headerlink" title="美国也有"></a>美国也有</h3><p>“美国也有”所诉诸的似乎是种很古怪的“普世价值”：我有喜欢骗人的毛病，他们也有，所以欺骗是很普遍很常见的人类行为；既然普遍，于是正常，欺骗也就因此算不上是坏事了。这种小学生似的逻辑，从前也谈过，不再赘言。但我想指出，相信这类负面“普世价值”的人，恰巧往往也是平日最喜欢用“国情不同”和“文化差异”来说事的人，恰巧也是平日最视普世价值为仇雠的同一群人。当人家物议中国网络和通信监察制度的时候，他们就说个人隐私等西方“普世价值”不能照搬到我们身上，因为我们的国情特殊，对国家安全的理解有自己的特色。等到“斯诺登事件”爆发，他们一方面奇怪地站回捍卫隐私的“普世”角度去抨击美国；另一方面却又反过来标举负面的“普世价值”，告诉大家西方人一样侵犯隐私。他们到底想说什么？又到底相信什么呢？<br>假如你真的认为个人通信隐私不容政府侵犯，那你就应该用同样的标准去要求所有国家，不可动辄高谈国情分别；假如你真的认为个人隐私应该让路给国家安全，那么这时候你就应该大力声援美国政府，夸赞它干得好，而不是反过来加入抨击他们的阵营。</p><p>一个美国人对着一个苏联人炫耀：“我们有言论自由，我可以臭骂美国政府。”那个苏联人听了之后很不屑地回道：“那有什么了不起，我们一样可以臭骂美国政府。”</p><h3 id="“近视”"><a href="#“近视”" class="headerlink" title="“近视”"></a>“近视”</h3><p>我们不得不承认，就算优酷、开心网与新浪微博的功能再强大，使用者的数量再多，也始终不是一个世界性的平台。你可以关起门来在上面玩得不亦乐乎，甚至期盼它们有朝一日会成为真正全球共享的工具；但是这一刻，你却失去了世界，那种知觉的背景，以及资讯流动的真正边界。<br>今天的中国是一个大国，却像一个不知道自己有近视的大个子，人人都怕他，可他看不清其他人一目了然的角落与障碍，也看不见人家的神色。为什么他不能跑去配一副度数合宜的眼镜呢？</p><h3 id="围观"><a href="#围观" class="headerlink" title="围观"></a>围观</h3><p>目光与舆论之所以有效，是因为管治者和被管治的社会就像一具机器和它身处的环境一样，前者总要从后者那里接收反应，然后回馈到既有的机制之中，修正逻辑，再调校自己下一步的行动。我现在最担心的是明明路面越来越坏，满地坑洼，走在上面的汽车却可以不受刺激，继续行驶。这说明那部汽车有自己的强大逻辑，它踩在地上，但不必顾及地面传来的信息和刺激。它和外在环境绝缘，只对内在部件负责，依循自己既定的路线。从某个角度来讲，你也可以说它是辆很有威力的好车。</p><h3 id="大众传播"><a href="#大众传播" class="headerlink" title="大众传播"></a>大众传播</h3><p>传统新闻媒体掌握了定义新闻的权力，它可以判断什么算作新闻，什么不算；而它用以判断的标准往往是很可疑的。比如说同样是死人，为什么我们总是能在国际新闻上头看到一个美国疯汉活活把人咬死之类的故事，却听不到每天甚至每一分钟都发生在南方世界的儿童饿死的消息呢？如果在一些媒体受到威权掌控的国家，官方定夺了新闻的定义和范围，我们大概就会读到连篇累牍的领导人动向，却不晓得社会底层备受压迫折磨的不公遭遇了。所以我们期待每一个人都能做记者的时代，期待每一个人都有能力和权力去发布他们看见的事实，让我们知晓新闻定义之外的新闻。</p><p>在满足民众知情权的前提底下，传统媒体也该慢慢懂得知情权与好奇心之间的差异；民众好奇的东西不一定是他们有权知道的事情，例如一个性侵犯受害者的身份。</p><p>拍摄和上传这些资讯的网民有没有想过这么做的后果？他们有没有发现自己手握便利的电子记录工具，拥有推特、脸书和微博等仿如媒体的大众平台，其实就已经是个公民记者甚至是个独家的新闻社？更重要的是，他们有没有反省过掌握这些工具平台就等于掌握了权力，甚至武器，因此就该负有相应的道德责任？</p><p>任何人都是新闻的供应者，任何人也都是新闻中的角色。这个时代才刚刚开始，要学懂其中的伦理规范和分寸拿捏，恐怕还有很长的一段路。</p><h3 id="专业"><a href="#专业" class="headerlink" title="专业"></a>专业</h3><p>新闻自由不是个体的为所欲为，而是集体的自主能力。真正的新闻自由与专业伦理的自律，根本是不可分割的同一回事。</p><p>当一整个专业都能坚守原则，并以专业操守为傲，社会大众便会逐渐形成共识，知道这个行业的精神与底线。</p><h3 id="脱节"><a href="#脱节" class="headerlink" title="脱节"></a>脱节</h3><p>假如这想象中最坏的官员都还保有最起码的脆弱良知，为什么最普通的官员都还会给人看到他“政绩第一，人命第二”的决策表现？为什么广州一个地方官员会在慰问舍己救人的消防员家属时说“恭喜你们培养出这么优秀的儿子”呢？如果这位官员家中有人不幸殉职，他能接受得了别人对他的恭喜吗？<br>从“你是为党说话，还是为老百姓说话”，一直到“反正我是信了”，这一连串的“雷人”官话最能说明我想讨论的问题。在我看来，关键不在于说这些话的官员真是白痴，就如同一个无恶不作的歹官并非真的灭绝了人性一样。真正的要害是一个智力正常、也和你我一样天天活在社会之中的官员，不知怎么的就在某些场合失去了基本的判断能力，说了常人说不出的话，干了常人干不下的事。</p><h3 id="权力"><a href="#权力" class="headerlink" title="权力"></a>权力</h3><p>所谓权力，在我们这里就是一种能够真正动用的资源与力量，用了才叫有权，不用就不叫权力了。<br>那是一个你永远摸不清底细和边界的范围，既用不着告诉你它的深浅，也用不着向你交代它的大小。当它启动，你只能被动地接受，却不能知悉它如何启动，以及启动的时机与规模。你更加不必追问权力究竟有什么存在的必要。</p><h3 id="盛事"><a href="#盛事" class="headerlink" title="盛事"></a>盛事</h3><p>我们或许可以独裁地宣称“必须不顾一切”，那就是战争了。只有战争才会只追求一个目标，可以为了胜利而不计代价（不过，战争也并非真的能够不计代价。也有些国家会比另一些国家重视战时状态的人权，也有些国家会比另一些国家更担忧人命的损伤）。大家在讨论中国某些政策的制定和施行时往往会提到“动员”这两个字，“动员”岂不就是一种作战的准备？它是我们非常熟悉的决策和施政方式，从水利工程到发展经济，有哪一回不是朝着一个目标动员大家努力前进？“盛事”就像战争，它的问题不只是“扰民”，而是根本没想到除了“盛事”之外，原来人民还有其他的利益诉求以及无论何时也不可剥夺的权利。老百姓为什么怕了“盛事”？因为没有人想天天打仗。</p><h3 id="宏大"><a href="#宏大" class="headerlink" title="宏大"></a>宏大</h3><p>有这么多关于坟墓的故事，好些有心人也顺道提起了美国纽约格兰特总统陵墓的故事了。<br>这故事的重点不在这位南北战争的名将，却在这座陵墓旁一个叫作圣克莱尔·波洛克（St. Clare Pollock）的五岁小男孩身上。<br>这个小孩死在1797年，随后葬身此地，他的父亲太过伤心，便将整块土地卖了出去，唯一条件是要永久保留爱子的坟墓。<br>于是经过一代又一代的转手，每一代卖家都要求下一代买主信守当初的诺言，直到1897年美国政府买下，成了它的主人。<br>照道理讲，百年前的约定对后来的地主没什么约束力了，然而，或者出于信仰，或者受到民意的压力，不管是地产商还是政府，都还是保住了小男孩的墓，并且屡加修葺，使之长伴格兰特总统身侧，至今仍传为佳话。</p><p>有些时候，我们太过崇奉很宏大、很抽象的理念，比如说“为国牺牲”，又比如说为了“经济发展”和为了“消除反动遗迹”。你永远可以找到全新的宏大话语，所以你也永远可以掘毁推平一座座小小的墓地。过去的宏大话语，过去的不朽英名，在今天更伟大的需要之下，就是“我们留着没用”的名字了。</p><h3 id="兴亡"><a href="#兴亡" class="headerlink" title="兴亡"></a>兴亡</h3><p>国家越是扩张，占据的资源和土地越多，贫富差距就变得越大。贫富差距越大，社会就变得更加动荡。要改革，就要伤及既得利益阶层的筋骨，并且手段非常，往往出之一连串不合既存体制法统的惊人举动，最后又以一场又一场的政治暴力告终。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/lpic/s27315794.jpg" alt="《关键词》"><br><a href="https://book.douban.com/subject/25886896/" target="_blank" rel="noopener">《关键词》</a><br>作者：梁文道<br>出版社：中信出版社</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Twidere快速设置教程</title>
      <link href="/Twidere-quick-setup/"/>
      <url>/Twidere-quick-setup/</url>
      
        <content type="html"><![CDATA[<p><a href="https://droid4.us/droid4now/setup-twidere" target="_blank" rel="noopener">如何优雅地刷国际版微博</a>一文介绍了 Twidere 的设置方法，以及如何借助 Heroku 等 PaaS 平台搭建代理，实现 Twidere 能够在刷新时拉取图片的方法。但是繁琐的设置 / 配置方法还是不够友好，虽然一键式操作已经省去了我们对各种 PaaS 平台的命令行操作。随着各类奇技淫巧的出现，我们有了新的方法，快速简单地实现 Twidere 的设置，并能在刷推速度上有极大提升，直接从官方 API 拉取自己的各种 Twitter 信息而无需借助代理平台。</p><p>实现原理很简单，那就是使用 hosts 进行域名重定向。在此推荐 <a href="http://laod.cn/hosts/2016-google-hosts.html" target="_blank" rel="noopener">2016 Google hosts 持续更新</a> 这个网站提供的包含各类站点的 hosts 文件。替换后，你就可以正常地访问 hosts 修改过的网站啦。</p><a id="more"></a><h2 id="hosts-文件的修改"><a href="#hosts-文件的修改" class="headerlink" title="hosts 文件的修改"></a>hosts 文件的修改</h2><p>hosts 文件可以进行直接替换或编辑，不同系统 hosts 文件位置有所不同：</p><ul><li>Windows 系统 hosts 位于 C:\Windows\System32\drivers\etc\hosts</li><li>Android（安卓）系统 hosts 位于 /system/etc/hosts</li><li>Mac（苹果电脑）系统 hosts 位于 /etc/hosts</li><li>iPhone（iOS）系统 hosts 位于 /etc/hosts</li><li>Linux 系统 hosts 位于 /etc/hosts</li></ul><p>PS：由于 hosts 文件属于系统文件，所以修改 hosts 需要对 Android 系统进行 root 操作，对 iOS 系统进行越狱操作。如果你已经完成上述步骤，那么可以自己找一些可用的 hosts 进行修改或替换。如果你的 hosts 设置正确且其重定向的 IP 有效，那么你就可以正常使用官方版本的 Twitter 客户端进行刷推了。</p><hr><h2 id="Bazinga"><a href="#Bazinga" class="headerlink" title="Bazinga"></a>Bazinga</h2><p>如果本文到此结束那真是 too young too simple 了。<span style="color: #ffffff;">你们憋想搞个大新闻，把我批判一番！</span><br>下面介绍未 root 的 Android 如何通过 hosts 实现 Twidere 的正常使用。</p><h3 id="安装-Twidere"><a href="#安装-Twidere" class="headerlink" title="安装 Twidere"></a>安装 Twidere</h3><p>Twidere 的 <a href="https://github.com/TwidereProject/Twidere-Android/releases" target="_blank" rel="noopener">Github 项目发布页</a> 可下载<strong>最新</strong>版本<br>twidere-fdroid-release.apk 为开源软件下载站 fdroid 版本<br>twidere-google-release.apk 为 Google Play 版本<br>你还可以在其 <a href="https://play.google.com/store/apps/details?id=org.mariotaku.twidere" target="_blank" rel="noopener">Google Play</a> 和 <a href="http://www.coolapk.com/apk/org.mariotaku.twidere" target="_blank" rel="noopener">酷安</a> 页面进行下载并安装</p><h3 id="设置-Twidere"><a href="#设置-Twidere" class="headerlink" title="设置 Twidere"></a>设置 Twidere</h3><p>(1) 打开 Twidere，点击右上方的第二个图标编辑 API</p><p style="text-align: justify; align: center;"><img class="alignnone" src="https://i0.wp.com/ww2.sinaimg.cn/large/68f607d1gw1f2mya4u07rj20x71jedky.jpg?resize=360%2C600" alt="Twidere 初始界面" width="360" height="600"><img class="alignnone" src="https://i2.wp.com/ww2.sinaimg.cn/large/68f607d1gw1f2myh81kmfj20x71jetfk.jpg?resize=360%2C600" alt="编辑 API" width="360" height="600"></p><p>(2) 在 API 编辑窗口中进行如下设置，从上到下分别填入：   </p><blockquote><p><a href="https://api.twitter.com/" target="_blank" rel="noopener">https://api.twitter.com/</a><br>3nVuSoBZnx6U4vzUxf5w<br>Bcs59EFbbsdF6Sl9Ng71smgStWEGwXXKSjYvPVt7qys</p></blockquote><p>关于 API 的细节问题，可访问 <a href="https://droid4.us/droid4now/setup-twidere" target="_blank" rel="noopener">如何优雅地刷国际版微博</a> 进行了解。</p><p>(3) 保存修改后点击初始界面右上角最右侧图标进入设置 - 网络 - 高级</p><p><img class="aligncenter" src="https://i1.wp.com/ww4.sinaimg.cn/large/68f607d1gw1f2mysrvooyj20x71jeted.jpg?resize=360%2C600" alt="设置界面" width="360" height="600"></p><p>(4) 开启内置 DNS 解析、TCP DNS 查询方式选项（如图四），并设置 DNS 服务器为 8.8.8.8</p><p style="text-align: justify;"><img class="alignnone" src="https://i0.wp.com/ww4.sinaimg.cn/large/68f607d1gw1f2mz02q1cbj20x71je10d.jpg?resize=360%2C600" alt="修改连接性 API" width="360" height="600"><img class="alignnone" src="https://i2.wp.com/ww4.sinaimg.cn/large/68f607d1gw1f2myt2hr0rj20x71jejww.jpg?resize=360%2C600" alt="修改 DNS 服务器" width="360" height="600"></p><p>(5) 进入自定义主机映射，添加主机名映射：   </p><blockquote><p>主机名为 <code>api.twitter.com</code><br>地址为 <code>185.45.5.54</code></p></blockquote><p style="text-align: justify;"><img class="aligncenter" src="https://i0.wp.com/ww1.sinaimg.cn/large/68f607d1gw1f2n3445ieij20x71jedl4.jpg?resize=360%2C600" alt="自定义主机映射" width="360" height="600"></p><p><strong>依次保存并返回初始界面，输入 Twitter 账号密码，体验飞一般的国际版微博吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Twidere </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/hello-hexo/"/>
      <url>/hello-hexo/</url>
      
        <content type="html"><![CDATA[<p>心血来潮重新搭建了一次 Hexo，过程还算顺利。本想着其实网上教程已经足够多了，随便搜一搜就能找到各种详尽的资料和教程，但是当我想起之前看到那条 <a href="https://twitter.com/ruanyf/status/713323072174948354" target="_blank" rel="noopener">Twitter</a> 的时候，还是抱以分享的态度去试着写点东西。再此引用全文以激励阅读本文的读者和没有习惯更新博客的自己。</p><blockquote><p>ruanyf ‏@ruanyf 3 月 25 日<br>不管你干什么，我都建议经常写作。随便写什么，不一定文辞优美，只需包含对自己领域的一些体会。不要低估写作的力量，它能让你从日常琐事抽身出来，透彻思考心中的问题。最重要的是，写给别人看时，你就成为更广阔世界的一部分。发表文字就是在宣称自己是社会一员，愿意做一些有意义的贡献。# 书摘</p></blockquote><a id="more"></a><h3 id="申请-GitHub-Page"><a href="#申请-GitHub-Page" class="headerlink" title="申请 GitHub Page"></a>申请 GitHub Page</h3><ol><li>申请 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 账号  </li><li>登录 GitHub 后在主页点击 <code>New repository</code>，在 <code>Repository name</code> 中输入前缀与自己 GitHub 用户名一致的仓库名称 <code>[用户名].github.io</code>。例如，你的用户名为 <code>helloworld</code>，则创建仓库名称为 <code>helloworld.github.io</code>   </li><li>勾选 <code>Initialize this repository with a README</code> 并创建仓库</li></ol><p>PS:  </p><ul><li>仓库名称前缀若与用户名不一致则无法成功申请 GitHub Page。  </li><li>仓库属性必须为公开，即必须为 <code>Public</code>。</li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>安装所需的 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git Bash</a> 和 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 程序</li><li>按照 <a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="noopener">Github 官方教程</a> 生成并添加 SSH 密钥到 Github 设置中。</li></ol><h3 id="安装-amp-部署-Hexo"><a href="#安装-amp-部署-Hexo" class="headerlink" title="安装&amp;部署 Hexo"></a>安装&amp;部署 Hexo</h3><ol><li><p>运行 Git Bash，使用如下命令安装 Hexo：</p><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></li><li><p>安装完成后对 Hexo 进行部署，创建一个文件夹作为 Hexo 工作目录。为避免不必要的麻烦，建议使用英文路径。</p></li><li><p>运行 Git Bash 并进入 Hexo 工作目录，使用如下命令对 Hexo 进行初始化：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo init</span><br><span class="line"><span class="variable">$ </span>npm install</span><br></pre></td></tr></table></figure></li><li><p>安装 Hexo 插件，详细信息可以访问<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">插件</a>页面查看相关内容</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save      #首页生成插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save    #归档页生成插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save   #分类页生成插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save        #标签页生成插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-marked <span class="comment">--save      #Markdown 语法渲染插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-stylus <span class="comment">--save      #Stylus 渲染插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-ejs <span class="comment">--save         #ejs 渲染插件</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save               #Hexo 本地服务器插件</span></span><br><span class="line"></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save        #git 部署插件（选装 推荐）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save      #feed 生成插件（选装 推荐）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save   #sitemap 生成插件（选装 推荐）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-hey <span class="comment">--save                 #hey 可视化后台编辑插件（选装 推荐）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-tag-owl <span class="comment">--save             #Owl 多媒体插件（选装）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-ruby-<span class="built_in">character</span> <span class="comment">--save      #萌娘百科注音插件（选装）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">search</span> <span class="comment">--save    #Search 生成插件（选装）</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-git-<span class="keyword">backup</span> <span class="comment">--save          #使用 Github 备份博客（选装）</span></span><br></pre></td></tr></table></figure></li><li><p>执行如下命令，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可本地预览 Hexo 页面</p><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="HEXO-基本操作"><a href="#HEXO-基本操作" class="headerlink" title="HEXO 基本操作"></a>HEXO 基本操作</h3><p>HEXO 命令需要在 Hexo 工作目录内运行。</p><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"My New Post"</span> <span class="meta">#创建一篇新文章，引号内为标题</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h4 id="本地预览-Hexo-页面"><a href="#本地预览-Hexo-页面" class="headerlink" title="本地预览 Hexo 页面"></a>本地预览 Hexo 页面</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s         #命令简写</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span></span><br><span class="line">$ hexo g         #命令简写</span><br></pre></td></tr></table></figure><p>PS：Hexo 是静态播客生成器，故修改博客内容后都需重新生成静态文件</p><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h4 id="部署静态文件到远程站点"><a href="#部署静态文件到远程站点" class="headerlink" title="部署静态文件到远程站点"></a>部署静态文件到远程站点</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo deploy</span><br><span class="line"><span class="variable">$ </span>hexo d         <span class="comment">#命令简写</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h4 id="生成静态文件并部署到远程站点"><a href="#生成静态文件并部署到远程站点" class="headerlink" title="生成静态文件并部署到远程站点"></a>生成静态文件并部署到远程站点</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo g -d</span><br></pre></td></tr></table></figure><h4 id="清除-public-文件夹和数据库"><a href="#清除-public-文件夹和数据库" class="headerlink" title="清除 public 文件夹和数据库"></a>清除 public 文件夹和数据库</h4><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ <span class="keyword">rm</span> <span class="keyword">db</span>.json -<span class="built_in">f</span></span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 官方文档</a></li><li><a href="http://meteoritey.github.io/2015/01/03/hello-world/" target="_blank" rel="noopener">Hello Hexo by MeteoriteY</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
