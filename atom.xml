<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Acuario</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://acuario.xyz/"/>
  <updated>2019-06-05T15:04:43.384Z</updated>
  <id>https://acuario.xyz/</id>
  
  <author>
    <name>Acuario</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《精通正则表达式》学习笔记（二）</title>
    <link href="https://acuario.xyz/mastering-regex-summary-2/"/>
    <id>https://acuario.xyz/mastering-regex-summary-2/</id>
    <published>2019-06-05T13:35:55.000Z</published>
    <updated>2019-06-05T15:04:43.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ch-3-正则表达式的特性和流派概览"><a href="#Ch-3-正则表达式的特性和流派概览" class="headerlink" title="Ch.3 正则表达式的特性和流派概览"></a>Ch.3 正则表达式的特性和流派概览</h1><h2 id="正则表达式的发展历程"><a href="#正则表达式的发展历程" class="headerlink" title="正则表达式的发展历程"></a>正则表达式的发展历程</h2><ul><li><p>1968 年 Ken Thompson 的文章 Regular Expression Search Algorithm 描述了一种正则表达式编译器，该编译器生成了 IBM7094 的 object 代码。由此也诞生了他的 <code>qed</code>，这种编辑器后来成了 Unix 中 <code>ed</code> 编辑器的基础。</p></li><li><p><code>ed</code> 有条命令 <code>g/Regular Expression/p</code>，读作 <em>Gjobal Regular Expression，Print</em>（应用正则表达式的全局输出）。这个功能最终成为独立的工具 <code>grep</code>，之后又产生了 <code>egrep</code>(Extended grep)。</p><ul><li>POSIX（Portable Operating System Interface，可移植操作系统接口）诞生于 1986 年，它是一系列标准，确保操作系统之间的移植性。POSIX 把各种常见的流派分为两大类：<br>Basic Regular Expressions（BREs）和 Extended Regular Expressions（EREs）。POSIX 程序必须支持其中的任意一种。</li></ul></li></ul><p><img src="https://i.loli.net/2019/05/30/5cef9d6eddef290952.png" alt="POSIX 正则表达式流派"></p><ul><li><p>Perl 的特性中值得一提的是，它提供了传统上只有专用工具 <code>sed</code> 和 <code>awk</code> 才提供的正则表达式操作符——这在通用脚本语言中是个首创。正则引擎的代码来自一个早期的项目——Larry 的新闻阅读器 <code>rn</code>（其中的正则表达式代码来自 James Gosling 的 <code>Emacs</code>。（James Gosling 后来去开发他自己的语言 <code>Java</code>，Java 1.4 提供了一个标准的正则表达式包。）</p></li><li><p>1997 年 Philip Hazel 开发了 <code>PCRE</code>，这是一套兼容 Perl 正则表达式的库，全面仿制 Perl 的正则表达式的语法和语义。其他的开发人员可以把 PCRE 整合到自己的工具和语言中，许多流行的软件都使用了 PCRE，例如 <code>PHP</code>、<code>Apache 2</code>、<code>Exim</code>、<code>Postfix</code> 和 <code>Nmap</code>。</p><a id="more"></a></li></ul><h2 id="正则表达式的注意事项和处理方法"><a href="#正则表达式的注意事项和处理方法" class="headerlink" title="正则表达式的注意事项和处理方法"></a>正则表达式的注意事项和处理方法</h2><p><img src="https://i.loli.net/2019/06/03/5cf503b6304ca16665.png" alt="若干常用工具的 Flavor 的简要考察"></p><ul><li><p>一款工具软件能够利用正则表达式实现的功能，通常比它所属的正则流派更重要。</p></li><li><p>程序设计语言有 3 种处理正则表达式的方式：</p><ol><li>集成式（integrated）：直接内建在语言之中，如 Perl。</li><li>程序式（procedural）</li><li>面向对象式（object-oriented）</li></ol><ul><li>程序式和面向对象式，是由普通的函数接收普通的字符串，把它们作为正则表达式进行处理。由不同的函数进行不同的、关系到一个或多个正则表达式的操作。</li></ul></li></ul><h2 id="字符串、字符编码和匹配模式"><a href="#字符串、字符编码和匹配模式" class="headerlink" title="字符串、字符编码和匹配模式"></a>字符串、字符编码和匹配模式</h2><ul><li><p><code>Unicode</code> 是一组字符设定，或者是从数字和字符之间的逻辑映射的<strong>概念编码</strong>。一个 “代码点（code point）”，通常用十六进制来表示，以 “<code>U+</code>” 开头。</p></li><li><p>支持 Unicode 的程序中的正则表达式通常支持 <code>\unum</code> 元序列，用来匹配一个具体的 Unicode 字符。</p></li><li><p>Unicode Version 3.1 诞生于 2001 年中期，增加了 <code>u+FFFF</code> 之后的代码点。例如，代表音乐谱号 <code>C</code>（Clef）的字符对应代码点 <code>U+1D121</code>。之前那些仅支持低于 <code>U+FPPP</code> 字符的程序无法处理这种情况。大多数程序的 <code>\unum</code> 只能支持最多 4 位十六进制数值。</p></li><li><p>能够处理这类新字符的程序通常提供了 <code>\x{nuwm}</code> 序列，<code>num</code> 可以为任意多位数字（这是为了增强只支持 4 位数字的 <code>\unum</code> 表示法）。你可以使用 <code>\x{1D121}</code> 来匹配这类 “谱号 <code>C</code>” 之类的字符。</p></li><li><p>正则模式和匹配模式</p><ul><li>不区分大小写的匹配模式：在匹配过程中会忽略字母的大小写。</li><li>宽松排列和注释模式：忽略字符组外部的所有空白字符。字符组内部的空白字符仍然有效，<code>#</code> 符号和换行符之间的内容视为注释。</li><li>点号通配模式（dot-match-all match mode，也叫 single-line mode “单行模式 “）：点号不受限制，可以匹配任何字符，包括换行符。修改了点号处理换行符的方式，从 “需要特殊处理” 变为 “不需要特殊处理”</li><li>增强的行锚点模式（Enhanced line-anchor match mode，也叫 “多行文本模式 “）：「<code>^</code>」能够匹配字符串中内嵌的文本行的开头位置，「<code>$</code>」能够匹配字符串中内嵌的文本行的换行符。改变了「<code>^</code>」和「<code>$</code>」匹配换行符的方式，从 “不需要特殊处理” 变为 “需要特殊处理”。</li><li>文字文本模式：几乎不识别任何正则表达式元字符。</li></ul></li></ul><h2 id="常用的元字符和特性"><a href="#常用的元字符和特性" class="headerlink" title="常用的元字符和特性"></a>常用的元字符和特性</h2><ul><li><p>字符表示法</p><ul><li>字符缩略表示法：<code>\n</code>、<code>\t</code>、<code>\a</code>、<code>\b</code>、<code>\e</code>、<code>\f</code>、<code>\r</code>、<code>\v</code>…</li><li>八进制转义：<code>\num</code></li><li>十六进制 /Unicode 转义：<code>\xnum</code>、<code>\x{num}</code>、<code>\unum</code>、<code>\Unum</code>…</li><li>控制字符：<code>\cchar</code></li></ul></li><li><p>字符组及相关结构</p><ul><li>普通字符组：<code>[a-z]</code> 和 <code>[*a-z]</code></li><li>几乎能匹配任何字符的元字符：点号</li><li>单个字节：<code>\C</code></li><li>Unicode 组合字符序列：<code>\X</code></li><li>字符组缩略表示法：<code>\w</code>、<code>\d</code>、<code>\s</code>、<code>\W</code>、<code>\D</code>、<code>\S</code></li><li>Unicode 属性、区块和分类：<code>\p{Prop}</code>、<code>\P{Prop}</code></li><li>字符组运算符：<code>[[a-z]&amp;&amp;[^aeiou]]</code></li></ul></li><li><p>锚点及其他 “零长度断言”</p><ul><li>行 / 字符串起点：<code>^</code>、<code>\A</code></li><li>行 / 字符串终点：<code>$</code>、<code>\Z</code>、<code>\z</code></li><li>本次匹配的开始位置（或者上次匹配的结束位置）：<code>\G</code></li><li>单词分界符：<code>\b</code>、<code>\B</code>、<code>\&lt;</code>、<code>\&gt;</code>…</li><li>顺序环视 <code>(?=…)</code>、<code>(?!…)</code>；</li><li>逆序环视 <code>(?&lt;=…)</code>、<code>(?&lt;!…)</code></li></ul></li><li><p>注释和模式修饰词</p><ul><li>模式修饰词：<code>(?modifier)</code>，例如 <code>(?i)</code> 或 <code>(?-i)</code></li><li>模式作用范围：<code>(?modifier:…)</code>，例如 <code>(?i:…)</code></li><li>注释：<code>(?#…)</code> 和 <code>#…</code></li><li>文字文本范围：<code>\Q…\E</code></li></ul></li><li><p>分组，捕获，条件判断和控制：</p><ul><li>捕获 / 分组括号：<code>(…)</code>、<code>\1</code>、<code>\2</code>，…</li><li>仅用于分组的括号：<code>(?:…)</code></li><li>命名捕获：<code>(?&lt;Name&gt;…)</code></li><li>固化分组：<code>(?&gt;…)</code> 永远也不会 “交还” 分组内已经匹配的任何内容。</li><li>多选结构：<code>…|…|…</code></li><li>条件判断：<code>(?if then|else)</code></li><li>匹配优先量词：<code>*</code>、<code>+</code>、<code>?</code>、<code>{num，num}</code> 贪心（greedy）模式，<strong>默认的</strong>量词匹配模式，匹配尽可能多的内容。</li><li>忽略优先量词：<code>*?</code>、<code>+?</code>、<code>??</code>、<code>{num，num)?</code> 懒惰模式，匹配尽可能少的内容，只需要满足下限，匹配就能成功。</li><li>占有优先量词：<code>*+</code>、<code>++</code>、<code>?+</code>、<code>{nuwm，nuwm}+</code> 类似固化分组，一旦匹配某些内容，就不会“交还”。</li></ul></li><li><p>固化分组就是一个<strong>只进不出</strong>的栈，被匹配入栈的内容不会交还，这导致若匹配了更多无关内容，将导致匹配失败（因为之前的匹配无法交还），最终的匹配结果将为空。例如：<code>!.+!</code> 可以匹配 <code>!Hola!</code>，但 <code>!(?&gt;.+)!</code> 无法匹配 <code>!Hola!</code>。其首先匹配尽可能多的内容 <code>Hola!</code>，但是之后的 <code>!</code> 无法匹配，会强迫 <code>.+</code> 释放之前匹配的 <code>!</code>，但固化分组无法释放，最终导致匹配失败。</p></li><li><p>所有的正则引擎都不会对单词进行语意分析：它们认为 “NE14AD8” 是一个单词，而 “M.I.T.” 不是。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ch-3-正则表达式的特性和流派概览&quot;&gt;&lt;a href=&quot;#Ch-3-正则表达式的特性和流派概览&quot; class=&quot;headerlink&quot; title=&quot;Ch.3 正则表达式的特性和流派概览&quot;&gt;&lt;/a&gt;Ch.3 正则表达式的特性和流派概览&lt;/h1&gt;&lt;h2 id=&quot;正则表达式的发展历程&quot;&gt;&lt;a href=&quot;#正则表达式的发展历程&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的发展历程&quot;&gt;&lt;/a&gt;正则表达式的发展历程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1968 年 Ken Thompson 的文章 Regular Expression Search Algorithm 描述了一种正则表达式编译器，该编译器生成了 IBM7094 的 object 代码。由此也诞生了他的 &lt;code&gt;qed&lt;/code&gt;，这种编辑器后来成了 Unix 中 &lt;code&gt;ed&lt;/code&gt; 编辑器的基础。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ed&lt;/code&gt; 有条命令 &lt;code&gt;g/Regular Expression/p&lt;/code&gt;，读作 &lt;em&gt;Gjobal Regular Expression，Print&lt;/em&gt;（应用正则表达式的全局输出）。这个功能最终成为独立的工具 &lt;code&gt;grep&lt;/code&gt;，之后又产生了 &lt;code&gt;egrep&lt;/code&gt;(Extended grep)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;POSIX（Portable Operating System Interface，可移植操作系统接口）诞生于 1986 年，它是一系列标准，确保操作系统之间的移植性。POSIX 把各种常见的流派分为两大类：&lt;br&gt;Basic Regular Expressions（BREs）和 Extended Regular Expressions（EREs）。POSIX 程序必须支持其中的任意一种。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/30/5cef9d6eddef290952.png&quot; alt=&quot;POSIX 正则表达式流派&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Perl 的特性中值得一提的是，它提供了传统上只有专用工具 &lt;code&gt;sed&lt;/code&gt; 和 &lt;code&gt;awk&lt;/code&gt; 才提供的正则表达式操作符——这在通用脚本语言中是个首创。正则引擎的代码来自一个早期的项目——Larry 的新闻阅读器 &lt;code&gt;rn&lt;/code&gt;（其中的正则表达式代码来自 James Gosling 的 &lt;code&gt;Emacs&lt;/code&gt;。（James Gosling 后来去开发他自己的语言 &lt;code&gt;Java&lt;/code&gt;，Java 1.4 提供了一个标准的正则表达式包。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1997 年 Philip Hazel 开发了 &lt;code&gt;PCRE&lt;/code&gt;，这是一套兼容 Perl 正则表达式的库，全面仿制 Perl 的正则表达式的语法和语义。其他的开发人员可以把 PCRE 整合到自己的工具和语言中，许多流行的软件都使用了 PCRE，例如 &lt;code&gt;PHP&lt;/code&gt;、&lt;code&gt;Apache 2&lt;/code&gt;、&lt;code&gt;Exim&lt;/code&gt;、&lt;code&gt;Postfix&lt;/code&gt; 和 &lt;code&gt;Nmap&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://acuario.xyz/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="RegEx" scheme="https://acuario.xyz/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/RegEx/"/>
    
    
      <category term="学习笔记" scheme="https://acuario.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="精通正则表达式" scheme="https://acuario.xyz/tags/%E7%B2%BE%E9%80%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="RegEx" scheme="https://acuario.xyz/tags/RegEx/"/>
    
  </entry>
  
  <entry>
    <title>如何加固Linux服务器[译]</title>
    <link href="https://acuario.xyz/how-to-secure-your-linux-server/"/>
    <id>https://acuario.xyz/how-to-secure-your-linux-server/</id>
    <published>2019-04-27T08:54:32.000Z</published>
    <updated>2019-04-29T14:53:29.810Z</updated>
    
    <content type="html"><![CDATA[<p><em>原文 <a href="https://medium.com/servers-101/how-to-secure-your-linux-server-6026cfcdefd8" target="_blank" rel="noopener">How To Secure Your Linux Server In 7 Easy Steps</a> 由 <a href="https://medium.com/@mutendebrian" target="_blank" rel="noopener">Brian Mutende</a> 发布于 Medium，翻译转载已获作者允许。<br>为配合博客目录系统显示，对原文章节名略有修改。</em></p><hr><p>大多数服务器经常会被黑客攻击。所以我决定写一篇简短的教程，让读者轻松加固自己的 Linux 服务器。</p><p>这并不是一篇完整的安全指南，但是它可以帮你阻断近九成常见的后端攻击，例如<strong>暴力破解</strong>和 <strong>DDoS</strong>。</p><p>最棒的是，你可以在一两个小时内就完成操作。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>你需要一台Linux服务器。</li><li>你需要对命令行有基本的了解。<a href="https://learncodethehardway.org/unix/bash_cheat_sheet.pdf" target="_blank" rel="noopener">这里</a>提供一份 cheet sheet 供你使用。</li></ol><p>如果你已万事俱备，那就开始吧。</p><a id="more"></a><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="配置-SSH-密钥"><a href="#配置-SSH-密钥" class="headerlink" title="配置 SSH 密钥"></a>配置 SSH 密钥</h2><p>要访问远程服务器，你务必使用 SSH 密钥登录而不是使用密码登录。</p><p>密码登录的问题在于其很容易被暴力破解（你将在下文学到如何进一步防止这种情况）。另外，在每次访问服务器时，你都必须输入密码。为避免上述缺点，你必须设置 <strong>SSH 密钥验证</strong>。它比使用密码更安全，因为黑客无法将其暴力破解。除此以外，使用密钥也可以更方便和快速地连接服务器，而无需输入密码。</p><p>下面介绍如何为服务器设置 SSH 身份验证。</p><ul><li><p>在本地计算机上，运行下列命令生成 SSH 密钥对：</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh-keygen</span></span><br></pre></td></tr></table></figure><p>上述命令将引导你在几步之内生成 SSH 密钥。当然别忘了记住你保存密钥文件的位置。</p></li><li><p>使用以下命令将公钥添加到服务器：</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">ssh-<span class="keyword">copy</span>-<span class="built_in">id</span> username@remote_host</span><br></pre></td></tr></table></figure><p>务必使用你的用户名和服务器的 IP 地址替换 <em>username</em> 和 <em>remote_host</em>。系统将提示你输入密码。</p></li><li><p>尝试使用以下命令登录服务器：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span> username<span class="variable">@remote_host</span></span><br></pre></td></tr></table></figure><p>别忘了将 <em>username</em> 和 <em>remote_host</em> 替换为服务器的详细信息。这时你会注意到，本次登录不再提示你输入密码。</p></li></ul><h2 id="保持系统时间最新"><a href="#保持系统时间最新" class="headerlink" title="保持系统时间最新"></a>保持系统时间最新</h2><p>许多安全协议依托于你的系统时间来执行定时任务，生成当天的日志和执行其他关键任务。</p><p>如果你的系统时间有误，可能会对你的服务器造成危害。为防止这种情况发生，你可以安装 NTP 客户端。该程序将使你的系统时间与全球 NTP 服务器保持同步。</p><p>安装 NTP 客户端命令如下：</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> ntp</span><br></pre></td></tr></table></figure><p>之后你再也不用担心设置系统日期。</p><h2 id="查看活动端口"><a href="#查看活动端口" class="headerlink" title="查看活动端口"></a>查看活动端口</h2><p>服务器程序会暴露某些端口，以便于网络中的其他应用程序对其进行访问。黑客也可以在你的服务器上安装后门并暴露端口，从而控制你的服务器。因此，我们不希望服务器上的未知端口被请求侦听。</p><p>要查看活动端口，可以使用以下命令：</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo ss -lntup</span></span><br></pre></td></tr></table></figure><p>查看输出并检查任何你并不熟悉的端口或进程。尝试发现并追踪可能有害的服务和流程。如果你不知从何下手，请可以查看这份<a href="https://www.garykessler.net/library/bad_ports.html" target="_blank" rel="noopener">《「糟糕的」TCP/UDP 端口列表》</a>。</p><h2 id="设置防火墙"><a href="#设置防火墙" class="headerlink" title="设置防火墙"></a>设置防火墙</h2><p>防火墙允许你控制服务器上传入 / 传出特定端口的网络流量。通常我使用 UFW（<em>uncomplicated firewall</em>，简单防火墙）。（译者注：UFW 是 Ubuntu 系统上默认的防火墙组件）</p><p>你可以配置下述规则来控制 UFW 的运行：</p><ul><li>允许 / 禁止</li><li>传入流量 / 传出流量</li><li>流量目的地 / 流量源</li><li>特定端口 / 所有端口</li></ul><p>完成下面的例子，你将阻止白名单之外的所有网络流量。如果之后安装了其他程序，别忘了将运行所需的必要端口加入白名单。</p><h3 id="设置-UFW"><a href="#设置-UFW" class="headerlink" title="设置 UFW"></a>设置 UFW</h3><ul><li>安装ufw。</li></ul><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install ufw</span><br></pre></td></tr></table></figure><ul><li>你可以禁止所有传出流量</li></ul><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="keyword">default</span> deny outgoing <span class="built_in">comment</span> <span class="string">'deny all outgoing traffic'</span></span><br></pre></td></tr></table></figure><ul><li>或者允许所有传出流量</li></ul><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="keyword">default</span> allow outgoing <span class="built_in">comment</span> <span class="string">'allow all outgoing traffic'</span></span><br></pre></td></tr></table></figure><ul><li>接下来，我们要禁止所有传入的流量……</li></ul><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="keyword">default</span> deny incoming <span class="built_in">comment</span> <span class="string">'deny all incoming traffic'</span></span><br></pre></td></tr></table></figure><ul><li>…将 SSH 连接加入例外，以便访问系统。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">limit</span> <span class="keyword">in</span> ssh comment <span class="string">'allow SSH connections in'</span></span><br></pre></td></tr></table></figure><ul><li>如果你将 UFW 配置为禁止所有传出流量，别忘了根据需要允许特定流量。比如：</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#允许端口 53 的流量输出 -  DNS </span></span><br><span class="line">sudo ufw allow out 53 <span class="keyword">comment</span> <span class="string">'allow DNS calls out'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许端口 123 的流量输出 -  NTP </span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> <span class="number">123</span> <span class="keyword">comment</span> <span class="string">'allow NTP out'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许 HTTP，HTTPS 或 FTP 的流量</span></span><br><span class="line"><span class="comment">#根据你使用的 apt 源的不同，apt 可能需要如下设置</span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> <span class="keyword">http</span> <span class="keyword">comment</span> <span class="string">'allow HTTP traffic out'</span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> https <span class="keyword">comment</span> <span class="string">'allow HTTPS traffic out'</span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> <span class="keyword">ftp</span> <span class="keyword">comment</span> <span class="string">'allow FTP traffic out'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许 whois</span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> whois <span class="keyword">comment</span> <span class="string">'allow whois'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许端口 68 的流量输出 -  DHCP 客户端</span></span><br><span class="line"><span class="comment">#如果你正在使用 DHCP，则需要如下设置</span></span><br><span class="line">sudo ufw <span class="keyword">allow</span> <span class="keyword">out</span> <span class="number">68</span> <span class="keyword">comment</span> <span class="string">'allow the DHCP client to update'</span></span><br></pre></td></tr></table></figure><ul><li>如需拒绝端口 99 上的任何流量，可使用以下命令：</li></ul><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="keyword">deny</span> <span class="number">99</span></span><br></pre></td></tr></table></figure><ul><li>最后，使用以下命令启动 UFW：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>你还可以使用以下命令查看 UFW 状态：</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo ufw status</span></span><br></pre></td></tr></table></figure><h2 id="防止自动化攻击"><a href="#防止自动化攻击" class="headerlink" title="防止自动化攻击"></a>防止自动化攻击</h2><p>你可以使用两个程序来阻止大多数自动化攻击：</p><ul><li><a href="http://www.cipherdyne.org/psad/" target="_blank" rel="noopener">PSAD</a></li><li><a href="https://www.fail2ban.org/" target="_blank" rel="noopener">Fail2Ban</a></li></ul><h3 id="PSAD-和-Fail2Ban-之间的区别"><a href="#PSAD-和-Fail2Ban-之间的区别" class="headerlink" title="PSAD 和 Fail2Ban 之间的区别"></a>PSAD 和 Fail2Ban 之间的区别</h3><p>我们知道，端口可以提供给服务器上的应用程序进行访问。攻击者为了访问你的服务器，也许会扫描你的服务器目前开放的端口。</p><p><strong>PSAD</strong> 监视网络活动，以检测并自定义阻止端口扫描和其他类型的可疑流量，如 DDoS 攻击或操作系统指纹识别尝试。</p><p><strong>Fail2Ban</strong> 扫描各种应用程序（如 FTP）的日志文件，并自动封禁有明显恶意行为（如自动登录尝试）的 IP。</p><p>以下指南将向你展示如何安装和配置 PSAD 和 Fail2Ban，以便它们与 UFW 一起使用。</p><ul><li><a href="https://zaiste.net/intro_fail2ban_with_ufw/" target="_blank" rel="noopener">安装 Fail2Ban</a></li><li><a href="https://gist.github.com/netson/c45b2dc4e835761fbccc" target="_blank" rel="noopener">安装 PSAD</a></li></ul><h2 id="安装-logwatch"><a href="#安装-logwatch" class="headerlink" title="安装 logwatch"></a>安装 logwatch</h2><p>服务器上的应用程序通常会将日志消息保存到日志文件中。除非你要手动监控日志文件，否则需要安装 logwatch。logwatch 将扫描系统日志文件并对其进行汇总。</p><p>你可以直接从命令行或计划任务运行 logwatch。例如，你可以配置 logwatch 将日志文件的每日摘要以电子邮件的形式发送给你。注意确保你的服务器可以正常发送电子邮件。</p><p>logwatch 通过 service 文件来获取读取和汇总日志文件的方式。你可以在 <code>/usr/share/logwatch/scripts/services</code> 中查看所有 service 文件。</p><p>logwatch 默认配置文件是 <code>/usr/share/logwatch/default.conf/logwatch.conf</code>。你可以通过使用命令行参数更改配置。</p><p>在 Ubuntu 或 Debian 上安装 logwatch，可运行以下命令：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> install logwatch</span><br></pre></td></tr></table></figure><p>对于其他 Linux 发行版的用户，请查看 Linode 的<a href="https://www.linode.com/docs/uptime/monitoring/monitor-systems-logwatch/" target="_blank" rel="noopener">这篇指南</a>。</p><p>如果你需要查看 logwatch 收集的日志样本，你可以尝试直接运行 logwatch。</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">sudo <span class="string">/usr/sbin/logwatch</span> <span class="params">--output</span> stdout <span class="params">--format</span> text <span class="params">--range</span> yesterday <span class="params">--service</span> all</span><br></pre></td></tr></table></figure><p>最后，然后 logwatch 每天发送一封电子邮件，其中包含我们日志文件的摘要。为实现此需求，可以打开文件 <em>/etc/cron.daily/00logwatch</em> 并找到 <em>execute</em> 行，然后将其更改为以下内容：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">/usr/sbin/logwatch</span> <span class="params">--output</span> mail <span class="params">--format</span> html <span class="params">--mailto</span> root <span class="params">--range</span> yesterday <span class="params">--service</span> all</span><br></pre></td></tr></table></figure><h2 id="执行安全审计"><a href="#执行安全审计" class="headerlink" title="执行安全审计"></a>执行安全审计</h2><p>在加固 Linux 服务器后，你应该进行安全审计，以便排查任何可能被忽视的安全漏洞。为此，你可以使用 Lynis，这是一个可以实现以下功能的开源软件：</p><ul><li>安全审计。</li><li>一致性测试（例如 PCI，HIPAA，SOx）。</li><li>渗透测试。</li><li>漏洞检测。</li><li>系统强化。</li></ul><h3 id="如何使用-Lynis"><a href="#如何使用-Lynis" class="headerlink" title="如何使用 Lynis"></a>如何使用 Lynis</h3><p>首先，通过克隆其 Github 仓库来安装 Lynis。这可确保安装的是最新版本的 Lynis。</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/CISOfy/lynis</span><br></pre></td></tr></table></figure><p>切换到我们克隆 Lynis 的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> lynis</span><br></pre></td></tr></table></figure><p>最后，使用以下命令运行第一次安全审计：</p><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">lynis audit <span class="keyword">system</span></span><br></pre></td></tr></table></figure><p>你可以在 Lynis 的<a href="https://cisofy.com/lynis/" target="_blank" rel="noopener">官方网站</a>上了解更多相关信息。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>很高兴你能阅读这篇有关加固 Linux 服务器的 how-to 指南。希望你能从中获益。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;原文 &lt;a href=&quot;https://medium.com/servers-101/how-to-secure-your-linux-server-6026cfcdefd8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How To Secure Your Linux Server In 7 Easy Steps&lt;/a&gt; 由 &lt;a href=&quot;https://medium.com/@mutendebrian&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Brian Mutende&lt;/a&gt; 发布于 Medium，翻译转载已获作者允许。&lt;br&gt;为配合博客目录系统显示，对原文章节名略有修改。&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;大多数服务器经常会被黑客攻击。所以我决定写一篇简短的教程，让读者轻松加固自己的 Linux 服务器。&lt;/p&gt;
&lt;p&gt;这并不是一篇完整的安全指南，但是它可以帮你阻断近九成常见的后端攻击，例如&lt;strong&gt;暴力破解&lt;/strong&gt;和 &lt;strong&gt;DDoS&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;最棒的是，你可以在一两个小时内就完成操作。&lt;/p&gt;
&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;你需要一台Linux服务器。&lt;/li&gt;
&lt;li&gt;你需要对命令行有基本的了解。&lt;a href=&quot;https://learncodethehardway.org/unix/bash_cheat_sheet.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;提供一份 cheet sheet 供你使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你已万事俱备，那就开始吧。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/Linux/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/tags/Linux/"/>
    
      <category term="命令行" scheme="https://acuario.xyz/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="服务器安全" scheme="https://acuario.xyz/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>播客札记（二）</title>
    <link href="https://acuario.xyz/podcast-note-2/"/>
    <id>https://acuario.xyz/podcast-note-2/</id>
    <published>2019-04-24T16:00:00.000Z</published>
    <updated>2019-04-28T09:23:43.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="翻电-Special-VOL04-996-不仅是道德问题"><a href="#翻电-Special-VOL04-996-不仅是道德问题" class="headerlink" title="翻电 Special VOL04 | 996 不仅是道德问题"></a>翻电 Special VOL04 | 996 不仅是道德问题</h1><p><a href="https://overcast.fm/+GsFgwEus4" target="_blank" rel="noopener">Episode Archive</a></p><h2 id="996-的现状和成因"><a href="#996-的现状和成因" class="headerlink" title="996 的现状和成因"></a>996 的现状和成因</h2><ul><li>超时工作 / 加班最多的工作往往处于社会两端：高收入者（高管、投行）和低收入者（工厂工人、出租车司机、快递员、外卖员）。</li><li>高收入者超时工作的原因：由于社会分工程度有上限，具有创造性的工作实际难以再被细节分工。而此类工作大多是无法分工的高产出单人项目。</li><li>低收入者超时工作的原因：此类工作是计件工资制度，多劳多得。</li><li>正常工作是固定工资模式，其处于高收入者和低收入者之间，涉及的创造性的工作和计件工作不多。</li><li>996 运动的爆发来源于高收入者工作模式对正常工作，即固定工资模式的侵入。</li><li>互联网行业的军备竞赛导致了对 996 工作制的需求。</li><li>不患寡而患不均，996 的出现往往是企业文化的整体问题，而非个别部门的个别现象。</li></ul><h2 id="商业模式与-996-的关系"><a href="#商业模式与-996-的关系" class="headerlink" title="商业模式与 996 的关系"></a>商业模式与 996 的关系</h2><ul><li>普通企业的盈利是基于商品的利润。工作量增多带来的投入产出比相对较低。</li><li>互联网行业的盈利是基于股本的增值。估值方法为公司的产品能力、用户数等因素。</li><li>劳动与劳动的区分不在于脑体，而在于资本密集程度。资本市场的存在催生互联网行业和投行等领域的高薪 996。</li><li>八小时工作制最早由英国空想社会主义者罗伯特・欧文于 1817 年 8 月提出。其后由于欧美资本家对劳工的剥削不断加剧，1886 年 5 月 1 日美国芝加哥爆发了历史最大的罢工，倡导实行八小时工作制。</li><li>经济下行期强调、诉求加班文化的企业将会越来越多。在经济下行期，加班将不再只是劳资问题，而将是企业与企业之间军备竞赛的问题。企业主认为在经济下行期控制支出成本的同时提高工作产出，形成企业与企业之间的重商主义。为合理化这一观念，将会出现越来越多提倡奋斗、勤劳文化的论调。</li></ul><a id="more"></a><hr><h1 id="翻转问答-VOL19-应该成为多才多艺的人吗？"><a href="#翻转问答-VOL19-应该成为多才多艺的人吗？" class="headerlink" title="翻转问答 VOL19 | 应该成为多才多艺的人吗？"></a>翻转问答 VOL19 | 应该成为多才多艺的人吗？</h1><p><a href="https://overcast.fm/+GsFiolXRY" target="_blank" rel="noopener">Episode Archive</a></p><h2 id="多样的人生有什么样的假设基础"><a href="#多样的人生有什么样的假设基础" class="headerlink" title="多样的人生有什么样的假设基础"></a>多样的人生有什么样的假设基础</h2><ul><li>假设基础：世间的很多禀赋没有高下之分，各种的才能之间都是平等的。</li><li>上述假设是多元主义的，同时也具有平民主义的特点。</li></ul><h2 id="过去的年代人们有什么样的生活重心"><a href="#过去的年代人们有什么样的生活重心" class="headerlink" title="过去的年代人们有什么样的生活重心"></a>过去的年代人们有什么样的生活重心</h2><ul><li>中世纪社会认为人寻求救赎、追求彼岸最重要，所以僧侣的地位最高。</li><li>法国大革命将第一阶级和第三阶级平等化，不因不同社会分工而地位不同。</li><li>古希腊没有社会分工，专业化只存在于奴隶中。但依然有依据城邦的存续而发展出来的作为人的第一要务——成为伟大的战士、成为关心城邦政事的自由民。eg.埃斯库罗斯的墓志铭</li><li>儒家的承礼启仁是古时的时代精神。</li><li>现代社会多才多艺的精英来自于文艺复兴时期的知识分子。</li></ul><h2 id="今天为何生活失去重心"><a href="#今天为何生活失去重心" class="headerlink" title="今天为何生活失去重心"></a>今天为何生活失去重心</h2><ul><li>今天的时代失去重心，一切问题没有被化解和体认，而是被掩盖起来，最终导致了现代社会推崇多元精英。</li><li>我们不应宣扬没有实指的东西（eg. 优秀、厉害），而应该宣扬找到自己的使命和重心。</li></ul><h2 id="技术化生活的起点和有效性"><a href="#技术化生活的起点和有效性" class="headerlink" title="技术化生活的起点和有效性"></a>技术化生活的起点和有效性</h2><ul><li>一切多元精英论调的滥觞——《高效人士的 7 个习惯》。</li><li>网络上充斥的技术化指导实际难有成效，如：<ol><li><em>有效时间内提高产出</em>；</li><li><em>如何面临抉择</em>。</li></ol></li><li>上述技术化指导有效的前提假设是：一个人只要改变想法就可以改变行为，改变行为就可以改变生活。但是改变想法、改变行为和改变生活之间并未有很强的联系。</li></ul><h2 id="每一个时代都有唯一重要的事"><a href="#每一个时代都有唯一重要的事" class="headerlink" title="每一个时代都有唯一重要的事"></a>每一个时代都有唯一重要的事</h2><ul><li>每一个时代都有唯一重要和可欲的事，不代表所有人必须做同样的事。根据人的理解不同，切入点可以不同。</li><li>可欲的事非常少，每个人都应以自己的方式体认这个时代的时代精神，并以自己的特殊性和个体性切入行事当中。</li></ul><h2 id="面向真相敞开"><a href="#面向真相敞开" class="headerlink" title="面向真相敞开"></a>面向真相敞开</h2><ul><li>如果要接近时代症结，就需要面向真相敞开。由于现代社会语言已经弱化和腐化，从语言的方向接近真相已经比较困难，所以可以尝试回到身体感受，从具有个体性的身体感受开始找回自己的重心，不要被人为的概念和方法影响。</li><li>我们不应该要求自己成为一个比别人更优秀和厉害的人，因为在任何领域毫无止境的比较将把人拉入没有赢面的游戏之中。</li><li>不仅仅接受哲学道理，而是感悟其人的经历和经历对其道理带来的影响。eg. 维特根斯坦</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;翻电-Special-VOL04-996-不仅是道德问题&quot;&gt;&lt;a href=&quot;#翻电-Special-VOL04-996-不仅是道德问题&quot; class=&quot;headerlink&quot; title=&quot;翻电 Special VOL04 | 996 不仅是道德问题&quot;&gt;&lt;/a&gt;翻电 Special VOL04 | 996 不仅是道德问题&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+GsFgwEus4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Episode Archive&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;996-的现状和成因&quot;&gt;&lt;a href=&quot;#996-的现状和成因&quot; class=&quot;headerlink&quot; title=&quot;996 的现状和成因&quot;&gt;&lt;/a&gt;996 的现状和成因&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;超时工作 / 加班最多的工作往往处于社会两端：高收入者（高管、投行）和低收入者（工厂工人、出租车司机、快递员、外卖员）。&lt;/li&gt;
&lt;li&gt;高收入者超时工作的原因：由于社会分工程度有上限，具有创造性的工作实际难以再被细节分工。而此类工作大多是无法分工的高产出单人项目。&lt;/li&gt;
&lt;li&gt;低收入者超时工作的原因：此类工作是计件工资制度，多劳多得。&lt;/li&gt;
&lt;li&gt;正常工作是固定工资模式，其处于高收入者和低收入者之间，涉及的创造性的工作和计件工作不多。&lt;/li&gt;
&lt;li&gt;996 运动的爆发来源于高收入者工作模式对正常工作，即固定工资模式的侵入。&lt;/li&gt;
&lt;li&gt;互联网行业的军备竞赛导致了对 996 工作制的需求。&lt;/li&gt;
&lt;li&gt;不患寡而患不均，996 的出现往往是企业文化的整体问题，而非个别部门的个别现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;商业模式与-996-的关系&quot;&gt;&lt;a href=&quot;#商业模式与-996-的关系&quot; class=&quot;headerlink&quot; title=&quot;商业模式与 996 的关系&quot;&gt;&lt;/a&gt;商业模式与 996 的关系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;普通企业的盈利是基于商品的利润。工作量增多带来的投入产出比相对较低。&lt;/li&gt;
&lt;li&gt;互联网行业的盈利是基于股本的增值。估值方法为公司的产品能力、用户数等因素。&lt;/li&gt;
&lt;li&gt;劳动与劳动的区分不在于脑体，而在于资本密集程度。资本市场的存在催生互联网行业和投行等领域的高薪 996。&lt;/li&gt;
&lt;li&gt;八小时工作制最早由英国空想社会主义者罗伯特・欧文于 1817 年 8 月提出。其后由于欧美资本家对劳工的剥削不断加剧，1886 年 5 月 1 日美国芝加哥爆发了历史最大的罢工，倡导实行八小时工作制。&lt;/li&gt;
&lt;li&gt;经济下行期强调、诉求加班文化的企业将会越来越多。在经济下行期，加班将不再只是劳资问题，而将是企业与企业之间军备竞赛的问题。企业主认为在经济下行期控制支出成本的同时提高工作产出，形成企业与企业之间的重商主义。为合理化这一观念，将会出现越来越多提倡奋斗、勤劳文化的论调。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="播客札记" scheme="https://acuario.xyz/categories/%E6%92%AD%E5%AE%A2%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Podcast" scheme="https://acuario.xyz/tags/Podcast/"/>
    
      <category term="播客" scheme="https://acuario.xyz/tags/%E6%92%AD%E5%AE%A2/"/>
    
      <category term="翻转电台" scheme="https://acuario.xyz/tags/%E7%BF%BB%E8%BD%AC%E7%94%B5%E5%8F%B0/"/>
    
      <category term="996" scheme="https://acuario.xyz/tags/996/"/>
    
      <category term="加班文化" scheme="https://acuario.xyz/tags/%E5%8A%A0%E7%8F%AD%E6%96%87%E5%8C%96/"/>
    
      <category term="多才多艺的人生" scheme="https://acuario.xyz/tags/%E5%A4%9A%E6%89%8D%E5%A4%9A%E8%89%BA%E7%9A%84%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>InnoDB 与 MyISAM 的区别</title>
    <link href="https://acuario.xyz/differences-between-innodb-and-myisam/"/>
    <id>https://acuario.xyz/differences-between-innodb-and-myisam/</id>
    <published>2019-04-21T09:24:56.000Z</published>
    <updated>2019-04-21T10:12:49.618Z</updated>
    
    <content type="html"><![CDATA[<p>目前 MySQL 的数据库引擎一般使用 InnoDB 和 MyISAM，但两者存在一些差别。网上零零散散的文章看起来比较麻烦，这里以表格汇总对比二者区别。如有纰漏，还望读者在评论区指正。</p><table><thead><tr><th></th><th>InnoDB</th><th>MyISAM</th></tr></thead><tbody><tr><td>MySQL 默认引擎</td><td>✅</td><td>❌</td></tr><tr><td>事务</td><td>✅</td><td>❌</td></tr><tr><td>并发</td><td>表级锁 ✅<br>行级锁 ✅，采用 MVCC 来支持高并发，有可能死锁</td><td>表级锁 ✅<br>行级锁 ❌</td></tr><tr><td>外键</td><td>✅</td><td>❌</td></tr><tr><td>在线热备份</td><td>✅</td><td>❌</td></tr><tr><td>COUNT (*)</td><td>无 meta-data 缓存，查全表获取</td><td>有 meta-data 缓存，直接获取</td></tr><tr><td>崩溃恢复</td><td>通过事务日志来恢复数据库</td><td>损坏率高，恢复速度慢，不能安全恢复</td></tr><tr><td>其他</td><td>默认隔离级别是可重复读（REPEATABLE READ），通过多版本并发控制（MVCC）+ 间隙锁（Next-Key Locking）防止幻影读</td><td>设计简单，数据以紧密格式存储</td></tr><tr><td>索引特性</td><td>主索引是聚簇索引，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。</td><td>DELAY_KEY_WRITE 选项：修改后，新索引数据写入内存中的键缓冲区，清理键缓冲区或者关闭表时才写入磁盘。极大提升写入性能，但崩溃时会造成索引损坏</td></tr><tr><td>全文索引</td><td>>= MySQL 5.6.4 ✅<br>  &lt; MySQL 5.6.4 ❌</td><td>✅<br>支持 BLOB 和 TEXT 的前 500 个字符索引</td></tr><tr><td>自有特性</td><td>内部优化：<br>1. 可预测性读加快读操作<br>2. 自适应哈希索引加速插入操作的插入缓冲区</td><td>1. 支持压缩表和空间数据索引<br>2.并发插入（CONCURRENT INSERT）：在表有读取操作的同时，也可以往表中插入新的记录</td></tr></tbody></table><hr><p>参考链接：<br><a href="https://github.com/CyC2018/CS-Notes/blob/master/docs/notes/MySQL.md#%E4%B8%89%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E" target="_blank" rel="noopener">技术面试必备基础知识：MySQL</a><br><a href="http://cxymrzero.github.io/blog/2015/08/17/myisam-innodb/" target="_blank" rel="noopener">MyISAM 与 InnoDB 区别</a><br><a href="https://juejin.im/post/5b1685bef265da6e5c3c1c34" target="_blank" rel="noopener">MySQL 常见的两种存储引擎：MyISAM 与 InnoDB 的爱恨情仇</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前 MySQL 的数据库引擎一般使用 InnoDB 和 MyISAM，但两者存在一些差别。网上零零散散的文章看起来比较麻烦，这里以表格汇总对比二者区别。如有纰漏，还望读者在评论区指正。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Inno
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://acuario.xyz/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://acuario.xyz/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://acuario.xyz/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://acuario.xyz/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="学习笔记" scheme="https://acuario.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>播客札记（一）</title>
    <link href="https://acuario.xyz/podcast-note-1/"/>
    <id>https://acuario.xyz/podcast-note-1/</id>
    <published>2019-04-11T16:00:00.000Z</published>
    <updated>2019-04-28T09:22:12.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="翻转问答-VOL8-亲密关系"><a href="#翻转问答-VOL8-亲密关系" class="headerlink" title="翻转问答 VOL8 | 亲密关系"></a>翻转问答 VOL8 | 亲密关系</h1><p><a href="https://overcast.fm/+GsFgR-JZI" target="_blank" rel="noopener">Episode Archive</a></p><h2 id="亲密关系的特点"><a href="#亲密关系的特点" class="headerlink" title="亲密关系的特点"></a>亲密关系的特点</h2><ul><li>个人主义社会——代表排除共同体、排除外部主张的合理性，关注自我的合理性，且自我合理性不与所处共同体相关，是一种纯粹的根本的自我。</li><li>亲密关系是一种纯粹关系，与个人主义的自我产生关联，过去的亲密关系属于共同体（家庭、集体），如今属于自我。</li><li>现代自我拥有物理和心理意义上更多的私人空间，亲密关系与私人空间的冲突恰是其特殊性。</li><li>亲密关系可以充分满足自我认可。因为：<ol><li>亲密关系是自信心和基础安全感的来源；</li><li>亲密关系是制度化社会中几乎唯一的非制度要素的情景，用以释放制度压抑（福柯提出性和药物释放制度压抑）；</li><li>荣格心理学认为，亲密关系是人与自身异性人格（anima 和 animus）达成和解的要素，即是自身自信。</li></ol></li></ul><h2 id="亲密关系为何脆弱"><a href="#亲密关系为何脆弱" class="headerlink" title="亲密关系为何脆弱"></a>亲密关系为何脆弱</h2><ul><li>现代生活中，维系亲密关系的外部必然性消失，促使人反思自身的亲密关系，但亲密关系本身禁不起反思。</li><li>社会流动性越来越大，增加了更多亲密关系的选择。</li><li>亲密关系博弈成为囚徒困境博弈，结合亲密关系边际效应使人更愿意考虑成本和收益而做出选择。</li><li>开放式关系看似消解了亲密关系的囚徒困境，但依旧无法达成 anima 和 animus 和解，且个人主义的本质下，亲密关系是一对一的。</li></ul><a id="more"></a><h2 id="现代知识异化中对亲密关系的-5-种关键隐喻"><a href="#现代知识异化中对亲密关系的-5-种关键隐喻" class="headerlink" title="现代知识异化中对亲密关系的 5 种关键隐喻"></a>现代知识异化中对亲密关系的 5 种关键隐喻</h2><ol><li>健康——感情健康。根本原因是纯粹的亲密关系失去了基础。难免被套用到客观评判体系，引入制度和技术对亲密关系进行调和。</li><li>企业——如何「经营」感情。</li><li>镜像神经元——充分了解对方、完全换位思考理解对方。</li><li>信仰——亲密关系是心诚则灵的东西。信仰在宗教中只照顾生活中与自我存在相关的绝对要素，如救赎——而不是现实功利主义在乎的东西。</li><li>自我——爱别人首先要爱自己。这是纯粹个人主义对亲密关系的排除。但除了自恋之外的「爱」本身就是否定自我的过程，要爱自己，不得不承认宾我与主我的存在，并反对接受宾我的反思。能够做到彻底的自爱的人，定是一个绝对自私的人。</li></ol><h2 id="如何保卫亲密关系"><a href="#如何保卫亲密关系" class="headerlink" title="如何保卫亲密关系"></a>如何保卫亲密关系</h2><ol><li>不仅保卫亲密关系，也要保卫其他真正的关系——如亲情关系、友情关系。</li><li>通过其他真正的关系来锻炼自己承担人际风险的能力，从而减弱自己的胆怯和容易在亲密关系中收到的伤害。</li></ol><hr><h1 id="翻转问答-VOL9-如何看待中医和西医的对比"><a href="#翻转问答-VOL9-如何看待中医和西医的对比" class="headerlink" title="翻转问答 VOL9 | 如何看待中医和西医的对比"></a>翻转问答 VOL9 | 如何看待中医和西医的对比</h1><p><a href="https://overcast.fm/+GsFjiSGOA" target="_blank" rel="noopener">Episode Archive</a></p><ul><li>伪科学是指任何经宣称为科学，或描述方式看起来像科学，但实际上并不符合科学方法基本要求的知识、缺乏支持证据，经不起可信性测试，或缺乏科学形式，伪科学常常使用模糊的、自相矛盾的、夸张的或无法证明的主张，过度依赖确认而不是严格的反驳，缺乏其它专家的公开确认，缺乏系统化、理性化的理论过程。</li><li>中医是“伪科学”还是“非科学”？</li><li>科学还原论试图将各种领域完全祛魅，进行彻底的科学化。中医是否需要像艺术、宗教一样进行科学化？人的身体和医学一定要“科学化”吗？</li></ul><h2 id="物理世界是否必须科学化？"><a href="#物理世界是否必须科学化？" class="headerlink" title="物理世界是否必须科学化？"></a>物理世界是否必须科学化？</h2><ul><li>物理世界的分类：<ol><li>真实感受建构的世界：食物-味觉，按摩-触觉；</li><li>目的建构的世界：与目的高度相关——交通、建筑；</li><li>数学建构的世界：完全的抽象世界。</li></ol></li><li>真实感受的物理世界的语汇与科学的语汇存在范式差异：如味觉「鲜」（厨师烹饪时加糖提鲜）实际并非用科学语境下的「鲜味」。所以并非所有场景都要用科学语汇来替代真实感受的物理世界的语汇。</li><li>目的的物理世界由于存在理论与实践的差异，但并非所有实践都需要确切的理论认识：如鸟的飞行行为本身并不依赖于理论认识；部分尖端科技的发现（认识）是实践（实验）中的偶然，并非现有认识才有实践。</li><li>数学（及其相关）的物理世界由于完全抽象而进行了科学化：如天文学的观测结果、基因层面的理论等。</li></ul><h2 id="医学是否应该属于数学的物理世界？"><a href="#医学是否应该属于数学的物理世界？" class="headerlink" title="医学是否应该属于数学的物理世界？"></a>医学是否应该属于数学的物理世界？</h2><ul><li>基础假设：科学构筑了现象世界以外的不能被感官感知的现象，这些东西是比被感官感知的东西更本质的原因。即如果能找到非无感现象的原因，则五感现象基本都是偏见和错误。</li><li>相信科学即相信上述基础假设。</li><li>现代医学的专业化细分使其可以属于数学的物理世界这一范畴。西医对细节化学现象的分析、对人体化学还原的做法是逻辑自洽的。</li><li>医学自洽是对细节化学现象的自洽，而非对人整体的自洽。</li><li>副作用的存在没有证伪任何化学理论，而是提出了更多难以解释的现象。</li></ul><h2 id="证伪是什么意思？证伪很重要吗？"><a href="#证伪是什么意思？证伪很重要吗？" class="headerlink" title="证伪是什么意思？证伪很重要吗？"></a>证伪是什么意思？证伪很重要吗？</h2><ul><li>「证伪 = 求真」是语言误用。</li><li>被证伪不代表因果性不存在。</li><li>只有科学可以被证伪，但日常医学实践并未以证伪的方式推进科学。</li><li>证伪、实证并非最重要的方法论。</li></ul><h2 id="西医的现状和逻辑问题"><a href="#西医的现状和逻辑问题" class="headerlink" title="西医的现状和逻辑问题"></a>西医的现状和逻辑问题</h2><ul><li>西医治疗的是微观的现象（症状），而非整个人体本身。</li><li>人体的健康状况不是细节现象，而整体宏观秩序。</li><li>西医的统计学基础决定了受众是社会整体，而非单个个体，西医以社会工程学为基础，而非个体研究为基础。临床检验流程，是从社会工程学角度确定药物对社会的安全性，而非对独立个体的安全性。同时，统计样本的选取，也左右着西医实际参考价值。个体差异的复杂性导致个体参与医学治疗的差异性。</li></ul><h2 id="中医有没有理论？"><a href="#中医有没有理论？" class="headerlink" title="中医有没有理论？"></a>中医有没有理论？</h2><ul><li>专家崇拜是现代性的一大问题。以信托的方式相信专家，是存在实际风险和问题的。</li><li>中医并非没有理论，而是非科学理论。</li><li>中医的理论前提是阴阳五行的信念，西医的理论前提是数学理论的实在。</li><li>实用主义角度来看，阴阳五行理论在某种程度上阐释了身体的现象和关系。我们承认其有理，但为何我们否认其「真」？</li></ul><h2 id="我们需要的一种“本体论”清醒"><a href="#我们需要的一种“本体论”清醒" class="headerlink" title="我们需要的一种“本体论”清醒"></a>我们需要的一种“本体论”清醒</h2><ul><li>认为科学发展可以一往无前，将有科学宗教和科学迷信的风险。</li><li>大多数科学的发现是应用领域的新应用，而非原理领域的新发现。</li><li>科学意义的「存在」和我们五感的「存在」并非相同意义，我们虽未以五感方式认知其科学「存在」，但我们对其有信任。这与阴阳五行理论的「存在」并无本质差异。</li><li>真理掌握我们，而非我们掌握真理。</li></ul><h2 id="为何中医话题敏感？"><a href="#为何中医话题敏感？" class="headerlink" title="为何中医话题敏感？"></a>为何中医话题敏感？</h2><ul><li>以公共说理和公共舆论为重要基础，科学的公共话题变得比较敏感。</li><li>人被隔绝的日常实践，通过口头表达和表达被人承认获得自我认知和实现。</li><li>随着互联网发展，公共言论和公共舆论与权力高度相关。</li><li>在公共说理领域，面对多变的环境和不确定性的受众，我们需要一种货币一样的硬通货来说理——普遍主义。</li><li>启蒙理性和科学，诞生于对神学的批判，但在批驳的同时继承了神学的确定性和普遍主义。</li><li>科学无法争取的普遍主义的领域，将被权力斥为不重要和无意义。如艺术、形而上学、人生价值。</li><li>认为「一个领域必须留给其专业的、有其实践经验的人」的想法，是十分傲慢、不负责任、导致社会进一步切割的观念。专家崇拜是现代性涌现的巨大问题，它带来社会盲目和个体自信心和安全感的丧失。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;翻转问答-VOL8-亲密关系&quot;&gt;&lt;a href=&quot;#翻转问答-VOL8-亲密关系&quot; class=&quot;headerlink&quot; title=&quot;翻转问答 VOL8 | 亲密关系&quot;&gt;&lt;/a&gt;翻转问答 VOL8 | 亲密关系&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+GsFgR-JZI&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Episode Archive&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;亲密关系的特点&quot;&gt;&lt;a href=&quot;#亲密关系的特点&quot; class=&quot;headerlink&quot; title=&quot;亲密关系的特点&quot;&gt;&lt;/a&gt;亲密关系的特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;个人主义社会——代表排除共同体、排除外部主张的合理性，关注自我的合理性，且自我合理性不与所处共同体相关，是一种纯粹的根本的自我。&lt;/li&gt;
&lt;li&gt;亲密关系是一种纯粹关系，与个人主义的自我产生关联，过去的亲密关系属于共同体（家庭、集体），如今属于自我。&lt;/li&gt;
&lt;li&gt;现代自我拥有物理和心理意义上更多的私人空间，亲密关系与私人空间的冲突恰是其特殊性。&lt;/li&gt;
&lt;li&gt;亲密关系可以充分满足自我认可。因为：&lt;ol&gt;
&lt;li&gt;亲密关系是自信心和基础安全感的来源；&lt;/li&gt;
&lt;li&gt;亲密关系是制度化社会中几乎唯一的非制度要素的情景，用以释放制度压抑（福柯提出性和药物释放制度压抑）；&lt;/li&gt;
&lt;li&gt;荣格心理学认为，亲密关系是人与自身异性人格（anima 和 animus）达成和解的要素，即是自身自信。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;亲密关系为何脆弱&quot;&gt;&lt;a href=&quot;#亲密关系为何脆弱&quot; class=&quot;headerlink&quot; title=&quot;亲密关系为何脆弱&quot;&gt;&lt;/a&gt;亲密关系为何脆弱&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;现代生活中，维系亲密关系的外部必然性消失，促使人反思自身的亲密关系，但亲密关系本身禁不起反思。&lt;/li&gt;
&lt;li&gt;社会流动性越来越大，增加了更多亲密关系的选择。&lt;/li&gt;
&lt;li&gt;亲密关系博弈成为囚徒困境博弈，结合亲密关系边际效应使人更愿意考虑成本和收益而做出选择。&lt;/li&gt;
&lt;li&gt;开放式关系看似消解了亲密关系的囚徒困境，但依旧无法达成 anima 和 animus 和解，且个人主义的本质下，亲密关系是一对一的。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="播客札记" scheme="https://acuario.xyz/categories/%E6%92%AD%E5%AE%A2%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="Podcast" scheme="https://acuario.xyz/tags/Podcast/"/>
    
      <category term="播客" scheme="https://acuario.xyz/tags/%E6%92%AD%E5%AE%A2/"/>
    
      <category term="翻转电台" scheme="https://acuario.xyz/tags/%E7%BF%BB%E8%BD%AC%E7%94%B5%E5%8F%B0/"/>
    
      <category term="亲密关系" scheme="https://acuario.xyz/tags/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/"/>
    
      <category term="中医" scheme="https://acuario.xyz/tags/%E4%B8%AD%E5%8C%BB/"/>
    
  </entry>
  
  <entry>
    <title>SS/SSR中转V2ray起飞教程</title>
    <link href="https://acuario.xyz/delegate-v2ray-traffic-to-ss-or-ssr/"/>
    <id>https://acuario.xyz/delegate-v2ray-traffic-to-ss-or-ssr/</id>
    <published>2019-04-01T07:58:18.000Z</published>
    <updated>2019-04-01T08:46:51.826Z</updated>
    
    <content type="html"><![CDATA[<p>本文目标读者：</p><ul><li>拥有自建 V2Ray 代理</li><li>有机场使用经验</li><li>没钱买高价机场 / 乐于使(bái)用(piáo)公益机场</li><li>使用机场服务，但忌惮流量安全</li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前市面上已经有很多机场（提供 SS/SSR 服务的网站），且不乏众多公益机场，这些机场因为拥有一些好线路的服务器，所以在使用的时候可以获得较好的突破网络封锁的体验。比起自己购买一个垃圾服务器，使用时的龟速；以及购买一个优质线路服务器，承受每月高额费用；更不用说还要担心自己服务器被 GFW 认证的风险——使用机场真是省钱省心。但是隐私问题也不容小觑，支付时的隐私泄露按下不表，本文的初衷是规避使用机场时流量隐私泄露的问题——如何使用机场服务的同时不暴露自己的流量隐私。</p><p>V2Ray 除了支持自有协议 VMess 之外，还支持 Socks、Shadowsocks 等协议，配合自带的流量中转功能，可以在保护流量隐私的同时，借助机场起飞，最大程度上提升代理使用体验。</p><p>前面说这么多，说人话就是——花最少的钱，用最好的线路，让偷窥流量 / 监控流量的机场见鬼去吧。</p><h1 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h1><p><img src="https://i.loli.net/2019/04/01/5ca1b95248225.png" alt="无标题.png"></p><a id="more"></a><p>基本原理大致如下：</p><ol><li>V2Ray 客户端先将流量使用 VMess 协议加密</li><li>按照不同的加密方法：<br> SS 中转：V2Ray 客户端再使用 SS 协议加密，把两次加密后的流量发送到机场服务器进行中转<br> SSR 中转：V2Ray 客户端把 VMess 加密流量发给 SSR 客户端，SSR 客户端再使用 SSR 协议加密，把两次加密后的流量发送到机场服务器进行中转</li><li>机场服务器对流量进行 SS/SSR 解密后再把流量（VMess 协议加密流量）发往我们自建的 V2Ray 服务器</li><li>V2Ray 服务器正常访问网站</li><li>网站返回的数据按上述步骤和处理方式原路返回</li></ol><p>由于机场服务器收到的是 VMess 协议加密后的流量，加密方法又是我们自定义的，所以机场几无可能掌握我们的真实流量。下面动手实操。</p><h1 id="SS-中转-V2Ray-流量"><a href="#SS-中转-V2Ray-流量" class="headerlink" title="SS 中转 V2Ray 流量"></a>SS 中转 V2Ray 流量</h1><p>V2Ray 自身支持 Shadowsocks 协议，所以 SS 中转 V2Ray 流量按照官方的<a href="[https://toutyrater.github.io/advanced/outboundproxy.html](https://toutyrater.github.io/advanced/outboundproxy.html">白话文教程</a>来操作就行了。简单来说就是把配置文件中的 <code>outbounds</code> 部分设置为这样：<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处根据自己的V2Ray设置修改</span><br><span class="line">        <span class="string">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"1.1.1.1"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">8888</span>,</span><br><span class="line">            <span class="string">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="string">"id"</span>: <span class="string">"b12614c5-5ca4-4eba-a215-c61d642116ce"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"proxySettings"</span>: &#123;</span><br><span class="line">          <span class="string">"tag"</span>: <span class="string">"transit"</span>  // 把 V2Ray 流量发给 tag 名为 transit 的代理进行转发</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"shadowsocks"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处填上机场某个 SS 服务器的配置</span><br><span class="line">        <span class="string">"servers"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"2.2.2.2"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"aes-256-cfb"</span>,</span><br><span class="line">            <span class="string">"ota"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"password"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">1024</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"tag"</span>: <span class="string">"transit"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></p><h1 id="SSR-中转-V2Ray-流量"><a href="#SSR-中转-V2Ray-流量" class="headerlink" title="SSR 中转 V2Ray 流量"></a>SSR 中转 V2Ray 流量</h1><p>但是很多机场都是 SSR 机场，没有提供 SS 配置，那岂不是就不能用上面的骚操作了？既然 SSR 支持监听本地的 Socks 流量，V2Ray 又支持 Socks 协议传出，那我们只需要在本地同时打开 V2Ray 和 SSR 客户端，然后用 Socks 协议连接二者通信即可，相当于把上一节中 V2Ray 传出目标从服务器改为本地 SSR。那么配置文件中的 <code>outbounds</code> 部分就设置为这样：<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123; // 此处根据自己的V2Ray设置修改</span><br><span class="line">        <span class="string">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"address"</span>: <span class="string">"1.1.1.1"</span>,</span><br><span class="line">            <span class="string">"port"</span>: <span class="number">8888</span>,</span><br><span class="line">            <span class="string">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="string">"id"</span>: <span class="string">"b12614c5-5ca4-4eba-a215-c61d642116ce"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"proxySettings"</span>: &#123;</span><br><span class="line">          <span class="string">"tag"</span>: <span class="string">"transit"</span>  // 把 V2Ray 流量发给 tag 名为 transit 的代理进行转发</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;</span><br><span class="line">        <span class="string">"servers"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">          <span class="string">"address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">          <span class="string">"port"</span>: <span class="number">1080</span>  // 此处填写 SSR 客户端监听的本地端口</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"tag"</span>: <span class="string">"transit"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></p><p>以 Windows 平台为例，我们可以在客户端的「选项设置」中「允许来自局域网的连接」，并且设置 SSR 客户端监听的本地端口：</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95b997fe.png" alt="SSR设置"></p><p>完成设置后，在 SSR 客户端中选择想要使用的服务器节点，并且打开 V2Ray，需要代理的流量全部访问 <strong>V2Ray 客户端监听的端口</strong>即可。</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95d2597b.png" alt="选择SSR服务器节点"></p><p>如果设置正确，访问不存在的网站时，可以在 V2Ray 服务端日志中看到流量全部来自于我们选择机场服务器节点。</p><p><img src="https://i.loli.net/2019/04/01/5ca1b95e30487.png" alt="V2Ray服务端日志"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="V2Ray-配置文件"><a href="#V2Ray-配置文件" class="headerlink" title="V2Ray 配置文件"></a>V2Ray 配置文件</h2><p>刚开始使用 V2Ray 的人可能会困惑于 V2Ray 配置文件的繁琐，下面提供几个与本文相关的，本人目前正在使用的 V2Ray 完整配置文件，其中客户端配置文件集成了基本的广告屏蔽和大陆直连，本地监听端口为 <code>1082</code>，可根据自己需要进行修改。同时也提供了最简单的服务端配置文件，仅供参考：</p><ul><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/ss-vmess-config.json" target="_blank" rel="noopener">SS 中转 V2Ray 客户端配置文件</a></li><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/ssr-vmess-config.json" target="_blank" rel="noopener">SSR 中转 V2Ray 客户端配置文件</a></li><li><a href="https://gist.github.com/yhyy135/667251599e3e762ca6d86517d39554c8/raw/ba48ac317c5b658b55b4834516d897a4a201a473/server-config.json" target="_blank" rel="noopener">V2Ray 服务端配置文件</a></li></ul><p>另外，由于 SSR 中转 V2Ray 流量需要同时使用 SSR 客户端和 V2Ray 客户端，所以目前暂时无法在移动设备上实现，略有遗憾。但是既然都可以如此白嫖机场了，还是知足吧。如果你有什么好想法，不妨在评论区交流。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文目标读者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拥有自建 V2Ray 代理&lt;/li&gt;
&lt;li&gt;有机场使用经验&lt;/li&gt;
&lt;li&gt;没钱买高价机场 / 乐于使(bái)用(piáo)公益机场&lt;/li&gt;
&lt;li&gt;使用机场服务，但忌惮流量安全&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;目前市面上已经有很多机场（提供 SS/SSR 服务的网站），且不乏众多公益机场，这些机场因为拥有一些好线路的服务器，所以在使用的时候可以获得较好的突破网络封锁的体验。比起自己购买一个垃圾服务器，使用时的龟速；以及购买一个优质线路服务器，承受每月高额费用；更不用说还要担心自己服务器被 GFW 认证的风险——使用机场真是省钱省心。但是隐私问题也不容小觑，支付时的隐私泄露按下不表，本文的初衷是规避使用机场时流量隐私泄露的问题——如何使用机场服务的同时不暴露自己的流量隐私。&lt;/p&gt;
&lt;p&gt;V2Ray 除了支持自有协议 VMess 之外，还支持 Socks、Shadowsocks 等协议，配合自带的流量中转功能，可以在保护流量隐私的同时，借助机场起飞，最大程度上提升代理使用体验。&lt;/p&gt;
&lt;p&gt;前面说这么多，说人话就是——花最少的钱，用最好的线路，让偷窥流量 / 监控流量的机场见鬼去吧。&lt;/p&gt;
&lt;h1 id=&quot;基本原理&quot;&gt;&lt;a href=&quot;#基本原理&quot; class=&quot;headerlink&quot; title=&quot;基本原理&quot;&gt;&lt;/a&gt;基本原理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/01/5ca1b95248225.png&quot; alt=&quot;无标题.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="软件使用" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="VPS" scheme="https://acuario.xyz/tags/VPS/"/>
    
      <category term="ShadowsocksR" scheme="https://acuario.xyz/tags/ShadowsocksR/"/>
    
      <category term="v2ray" scheme="https://acuario.xyz/tags/v2ray/"/>
    
      <category term="Shadowsocks" scheme="https://acuario.xyz/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>使用HyperApp搭建Tiny Tiny RSS</title>
    <link href="https://acuario.xyz/set-up-tiny-tiny-rss-with-hyperapp/"/>
    <id>https://acuario.xyz/set-up-tiny-tiny-rss-with-hyperapp/</id>
    <published>2019-02-26T07:22:31.000Z</published>
    <updated>2019-04-29T14:16:35.001Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>VPS 需要先安装好 <code>docker-ce</code></li><li><a href="https://itunes.apple.com/app/apple-store/id1179750280?pt=118260435&amp;ct=guide&amp;mt=8" target="_blank" rel="noopener">HyperApp</a></li><li>一个已经解析正确的域名（ping 验证）</li><li>耐心。仔细。认真</li></ul><h1 id="HyperApp-服务端配置"><a href="#HyperApp-服务端配置" class="headerlink" title="HyperApp 服务端配置"></a>HyperApp 服务端配置</h1><h2 id="安装-PostgreSQL"><a href="#安装-PostgreSQL" class="headerlink" title="安装 PostgreSQL"></a>安装 PostgreSQL</h2><p>虽然 HyperApp 提供了相应的 PostgreSQL 应用一键安装，但是由于安装 Tiny Tiny RSS 时无法与其衔接，所以一并使用 <code>Docker Image</code> 方法进行安装。</p><a id="more"></a><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>sameersbn/postgresql:latest</td></tr><tr><td>Options</td><td><code>--restart=always -v /srv/docker/postgres/data/:/var/lib/postgresql/ -e PG_PASSWORD=mydbpass -e DB_EXTENSION=pg_trgm -p 5432:5432</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>其他</td><td>所有其他设置均为空</td></tr></tbody></table><h2 id="安装-Tiny-Tiny-RSS"><a href="#安装-Tiny-Tiny-RSS" class="headerlink" title="安装 Tiny Tiny RSS"></a>安装 Tiny Tiny RSS</h2><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>wangqiru/ttrss</td></tr><tr><td>Options</td><td><code>--restart=always -e SELF_URL_PATH=https://你要给镜像站点的域名 -e DB_HOST=postgres -e DB_PORT=5432 -e DB_NAME=myttrss -e DB_USER=postgres -e DB_PASS=mydbpass</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>Nginx 设置名称</td><td>内容</td></tr><tr><td>域名</td><td>你要给镜像站点的域名</td></tr><tr><td>应用端口</td><td></td></tr><tr><td>Https</td><td>不重定向 HTTP 请求</td></tr><tr><td>域名</td><td>你要给镜像站点的域名（自动填写）</td></tr><tr><td>邮箱</td><td>域名所对应的邮箱</td></tr></tbody></table><ul><li>保存并且进行安装。请确保这时候 <code>Nginx Proxy</code> 以及 <code>Nginx SSL Support</code> 正常默认安装并且启动了</li></ul><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><p>安装 PostgreSQL 和 Tiny Tiny RSS 后还不能正常使用，还需要将两者连接起来。进入 VPS 的 SSH 窗口执行命令：</p><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">docker network create ttrss_network</span><br><span class="line">docker container ls | <span class="type">grep</span> wangqiru/ttrss | <span class="type">awk</span> '&#123;print $<span class="number">1</span>&#125;' | <span class="type">xargs</span> docker network connect ttrss_network</span><br><span class="line">docker container ls | <span class="type">grep</span> sameersbn/postgresql | <span class="type">awk</span> '&#123;print $<span class="number">1</span>&#125;' | <span class="type">xargs</span> docker network connect ttrss_network</span><br><span class="line">docker container ls | <span class="type">grep</span> wangqiru/ttrss | <span class="type">awk</span> '&#123;print $<span class="number">1</span>&#125;' | <span class="type">xargs</span> docker restart</span><br></pre></td></tr></table></figure><p>上述命令建立了一个名为 <code>ttrss_network</code> 的 docker 通讯网络，并将 <code>ttrss</code> 容器和 <code>postgres</code> 容器都连接到这个网络内部。最后重启 Tiny Tiny RSS 容器。</p><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><ul><li><p>CentOS</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=80/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --add-port=443/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></li><li><p>Ubuntu</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">sudo ufw allow <span class="number">80</span></span><br><span class="line">sudo ufw allow <span class="number">443</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="配置使用-Tiny-Tiny-RSS"><a href="#配置使用-Tiny-Tiny-RSS" class="headerlink" title="配置使用 Tiny Tiny RSS"></a>配置使用 Tiny Tiny RSS</h1><h2 id="登录使用"><a href="#登录使用" class="headerlink" title="登录使用"></a>登录使用</h2><p><img src="https://i.loli.net/2019/02/26/5c74e8c180d1d.png" alt="Tiny Tiny RSS"></p><p>安装完成后，访问你给镜像站点设置的域名即可进入 Tiny Tiny RSS 登陆页面。默认账号是 <code>admin</code>，密码是 <code>password</code>。登录后务必修改密码。Tiny Tiny RSS 的其他设置技巧，可以参阅少数派的<a href="https://sspai.com/post/41302" target="_blank" rel="noopener">这篇文章</a>。</p><h2 id="全文输出"><a href="#全文输出" class="headerlink" title="全文输出"></a>全文输出</h2><p>一些网站并未提供完整的全文 RSS 源，而只提供了文章的摘要内容，阅读起来十分不便。作为 RSS 的重度用户，跳转到网站进行阅读实在是浪费时间。遇到这样的 RSS 源，除了可以使用内置了 Mercury 全文输出功能的客户端（iOS 平台 Reeder、Unread 等主流 RSS 阅读器支持）以外，还可以为自己搭建的 Tiny Tiny RSS 安装插件以支持 Mercury 功能。<br>下面还是使用 HyperApp 来操作，一步到位。</p><h3 id="安装-Mercury"><a href="#安装-Mercury" class="headerlink" title="安装 Mercury"></a>安装 Mercury</h3><ol><li>转到商店页面。找到 <code>Docker Image</code> 然后选择服务器并且保存进入配置界面</li><li>请完全按照下图配置进行填写！</li></ol><table><thead><tr><th>应用设置名称</th><th>内容</th></tr></thead><tbody><tr><td>Image</td><td>wangqiru/mercury-parser-api</td></tr><tr><td>Options</td><td><code>-p 3000:3000</code></td></tr><tr><td>Command</td><td></td></tr><tr><td>Args</td><td></td></tr><tr><td>其他</td><td>所有其他设置均为空</td></tr></tbody></table><h3 id="防火墙设置-1"><a href="#防火墙设置-1" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><ul><li><p>CentOS</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=3000/tcp --permanent</span></span><br><span class="line"><span class="bash">firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></li><li><p>Ubuntu</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">sudo ufw allow <span class="number">3000</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="配置-Mercury-插件"><a href="#配置-Mercury-插件" class="headerlink" title="配置 Mercury 插件"></a>配置 Mercury 插件</h3><ol><li>登陆 Tiny Tiny RSS，进入偏好设置（Preferences） - 插件（Plugins），启用 mercury_fulltext 的插件</li><li>登陆 Tiny Tiny RSS，进入偏好设置（Preferences） - 信息源（Feeds） -  Mercury_fulltext settings (mercury_fulltext) 选项卡。填入 <code>http://你要给镜像站点的域名或IP地址:3000</code> ，保存配置</li></ol><h3 id="开始使用-Mercury"><a href="#开始使用-Mercury" class="headerlink" title="开始使用 Mercury"></a>开始使用 Mercury</h3><ol><li>首先正常订阅一个 RSS 源</li><li>在首页左侧导航或订阅源管理中找到需要获取全文的订阅源，点击编辑订阅源（Edit Feed）</li><li>进入编辑订阅源（Edit Feed）窗口中的插件（Plugins）选项卡，勾选 <code>Get fulltext via Mercury Parser</code></li></ol><p>设置完成后，Tiny Tiny RSS 将根据你的自定义设定，对特殊 RSS 源使用 Mercury 拉取全文内容后再生成 RSS 内容。这样可以摆脱客户端的限制，在任何客户端上都能直接浏览全文 RSS 的文章。</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><ol><li><p>为何连接数据库的命令这么长？<br>之所以命令这么长是因为在使用 HyperApp 安装 <code>ttrss</code> 容器和 <code>postgres</code> 容器时没有为其指定容器的 name，所以必须通过查找其容器 ID 后再进行绑定。</p></li><li><p>为什么安装时不指定容器的 name？<br>指定容器的 name 可以方便连接数据库，但由于 HyperApp 是通过一定规则生成容器 name 从而对已安装的应用进行管理的，如果自定义了容器的 name，HyperApp 将无法正常识别到容器，安装应用后也会显示尚未安装。</p></li></ol><hr><p>参考链接：<br><a href="https://github.com/HenryQW/docker-ttrss-plugins" target="_blank" rel="noopener">Tiny Tiny RSS 容器镜像</a><br><a href="https://henry.wang/2018/04/25/ttrss-docker-plugins-guide.html" target="_blank" rel="noopener">A ttrss setup guide - Start your own RSS aggregator today</a><br><a href="https://sspai.com/post/41302" target="_blank" rel="noopener">如何搭建属于自己的 RSS 服务，高效精准获取信息</a><br><a href="https://www.hyperapp.fun/zh/advanced/docker-image-introduction.html" target="_blank" rel="noopener">Docker-image 介绍</a><br><a href="https://www.hyperapp.fun/zh/mirror.html" target="_blank" rel="noopener">超简单搭建常见 404 站点镜像</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;VPS 需要先安装好 &lt;code&gt;docker-ce&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/app/apple-store/id1179750280?pt=118260435&amp;amp;ct=guide&amp;amp;mt=8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HyperApp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一个已经解析正确的域名（ping 验证）&lt;/li&gt;
&lt;li&gt;耐心。仔细。认真&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;HyperApp-服务端配置&quot;&gt;&lt;a href=&quot;#HyperApp-服务端配置&quot; class=&quot;headerlink&quot; title=&quot;HyperApp 服务端配置&quot;&gt;&lt;/a&gt;HyperApp 服务端配置&lt;/h1&gt;&lt;h2 id=&quot;安装-PostgreSQL&quot;&gt;&lt;a href=&quot;#安装-PostgreSQL&quot; class=&quot;headerlink&quot; title=&quot;安装 PostgreSQL&quot;&gt;&lt;/a&gt;安装 PostgreSQL&lt;/h2&gt;&lt;p&gt;虽然 HyperApp 提供了相应的 PostgreSQL 应用一键安装，但是由于安装 Tiny Tiny RSS 时无法与其衔接，所以一并使用 &lt;code&gt;Docker Image&lt;/code&gt; 方法进行安装。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="软件使用" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/tags/Linux/"/>
    
      <category term="docker" scheme="https://acuario.xyz/tags/docker/"/>
    
      <category term="HyperApp" scheme="https://acuario.xyz/tags/HyperApp/"/>
    
      <category term="Tiny Tiny RSS" scheme="https://acuario.xyz/tags/Tiny-Tiny-RSS/"/>
    
  </entry>
  
  <entry>
    <title>非常简单的Python3 HTTP服务</title>
    <link href="https://acuario.xyz/create-simple-http-server-with-python3/"/>
    <id>https://acuario.xyz/create-simple-http-server-with-python3/</id>
    <published>2019-02-26T06:35:09.000Z</published>
    <updated>2019-02-26T06:41:15.749Z</updated>
    
    <content type="html"><![CDATA[<p>多年前在<a href="http://weibo.com/haoel?s=6cm7D0" title="左耳朵耗子" target="_blank" rel="noopener">左耳朵耗子</a>的博客上看到<a href="https://coolshell.cn/articles/1480.html" target="_blank" rel="noopener">《非常简单的 PYTHON HTTP 服务》</a>一文，在急需建立 HTTP Server 的场合十分有用，比如临时分享文件之类。在 HTTP Server 访问的根目录下只需执行一行命令就能搞定：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure></p><p>但是随着 Python 2 逐渐被 Python 3 取代，上述命令无法继续使用。在 Python3 中没有 <code>SimpleHTTPServer</code>，而是直接使用<code>http.server</code> 即可。所以对应的 Python 3 命令是：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 -m http.server</span><br></pre></td></tr></table></figure></p><p>默认开启的 HTTP Server 服务监听的是 8000 端口，使用时注意系统防火墙是否放行。如需使用其他端口，只需在命令末尾加上端口号即可，如使用端口 1234：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 -m http.server 1234</span><br></pre></td></tr></table></figure></p><h1 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h1><p>上述 Python 运行的 HTTP 服务器必须前台运行命令，并实时输出 log，断开终端后自动停止服务。这时可以借助 <code>nohup</code> 命令使其后台运行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nohup python3 -m http.server &gt;&gt;/dev/null &amp;</span><br></pre></td></tr></table></figure></p><p>当然你也可以使用其他方法如 <code>screen</code> 等工具实现后台运行，再此就不赘述了。不过既然有更复杂的需要，那还是老老实实用 Nginx 吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;多年前在&lt;a href=&quot;http://weibo.com/haoel?s=6cm7D0&quot; title=&quot;左耳朵耗子&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;左耳朵耗子&lt;/a&gt;的博客上看到&lt;a href=&quot;https://coolshell.cn/a
      
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/Linux/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/tags/Linux/"/>
    
      <category term="Python3" scheme="https://acuario.xyz/tags/Python3/"/>
    
      <category term="Python" scheme="https://acuario.xyz/tags/Python/"/>
    
      <category term="HTTP" scheme="https://acuario.xyz/tags/HTTP/"/>
    
      <category term="HTTP Server" scheme="https://acuario.xyz/tags/HTTP-Server/"/>
    
      <category term="Web服务器" scheme="https://acuario.xyz/tags/Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="运维" scheme="https://acuario.xyz/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Linux各种包管理换国内源</title>
    <link href="https://acuario.xyz/replace-package-source-to-china-mirror/"/>
    <id>https://acuario.xyz/replace-package-source-to-china-mirror/</id>
    <published>2019-01-18T13:48:40.000Z</published>
    <updated>2019-01-18T14:11:07.734Z</updated>
    
    <content type="html"><![CDATA[<p>在国外的机器上开发倒是没什么麻烦事，也不用操心这么多。但是由于众所周知的原因，在天朝可就麻烦多了，不想点法子的话下载依赖就够摸鱼一下午了。这么多包管理，不碰不要紧，一碰要狗命（单押x1 XD<br>干脆把手头用的这几个记一下，免得以后查来查去麻烦。</p><h1 id="一键换源脚本"><a href="#一键换源脚本" class="headerlink" title="一键换源脚本"></a>一键换源脚本</h1><p>写完 yum 和 apt 的部分才想起来，这种常见的东西应该是有脚本可以搞定的吧。找了下果然有<a href="https://www.oldking.net/697.html" target="_blank" rel="noopener">大佬</a>写好了的。<br>如果只是 Linux 软件包的话就用一个脚本搞定：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -qO- git.io/superupdate.sh | bash</span><br></pre></td></tr></table></figure></p><p>其他包管理的换源反正也不复杂，就手动弄一下。</p><a id="more"></a><hr><h1 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h1><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源</p><ol><li>备份原配置文件 <code>$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</code></li><li><p>换源（注意 OS Version）</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS 6</span></span><br><span class="line"><span class="comment"># wget 方式获取</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line"><span class="comment"># curl 方式获取</span></span><br><span class="line">$ curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo    </span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line"><span class="comment"># wget 方式获取</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="comment"># curl 方式获取</span></span><br><span class="line">$ curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure></li><li><p>刷新 cache 生效 <code>$ yum makecache</code></p></li></ol><h1 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h1><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源</p><ol><li>备份原配置文件 <code>$ cp /etc/apt/sources.list /etc/apt/sources.list_backup</code></li><li>清空配置 <code>$ echo &quot;&quot; &gt; /etc/apt/sources.list</code></li><li>换源（注意按 OS Version 进行添加） <code>$ vim /etc/apt/sources.list</code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ubuntu 14.04.5 LTS</span></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 16.04</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 18.04(bionic)</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 7.x (wheezy)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ wheezy main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ wheezy-proposed-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ wheezy main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 8.x (jessie)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 9.x (stretch)</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br></pre></td></tr></table></figure></li></ol><h1 id="pip-pip3"><a href="#pip-pip3" class="headerlink" title="pip/pip3"></a>pip/pip3</h1><h2 id="永久换源"><a href="#永久换源" class="headerlink" title="永久换源"></a>永久换源</h2><p>使用 <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">阿里镜像</a> 作镜像源<br>在配置文件中添加配置项 <code>vim ~/.pip/pip.conf</code><br><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span>=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></p><h2 id="临时换源"><a href="#临时换源" class="headerlink" title="临时换源"></a>临时换源</h2><p>在使用 pip/pip3 命令安装软件时，在命令中添加参数 <code>-i https://mirrors.aliyun.com/pypi/simple/</code><br>例如升级 pip 的命令为：<code>pip install -U pip -i https://mirrors.aliyun.com/pypi/simple/</code></p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>使用 <a href="http://www.docker-cn.com/registry-mirror" target="_blank" rel="noopener">Docker 中国</a> 作镜像源<br>一般情况下修改配置文件<code>$ vim /etc/docker/daemon.json</code></p><p>添加下面配置项：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com/"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后重启 docker deamon 即可<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl restart docker</span><br></pre></td></tr></table></figure></p><p>如果是通过 snappy（Ubuntu 16.04+）安装的 docker 的话，配置文件路径和重启命令都不同，配置内容一样：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /var/snap/docker/current/config/daemon.json</span><br><span class="line">$ snap restart docker</span><br></pre></td></tr></table></figure></p><p>运行命令<code>$ docker info</code>，查看其中的配置项是否正确：<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Registry Mirror<span class="variable">s:</span></span><br><span class="line"> http<span class="variable">s:</span>//registry.docker-<span class="keyword">cn</span>.<span class="keyword">com</span>/</span><br></pre></td></tr></table></figure></p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker" target="_blank" rel="noopener">Docker 镜像使用帮助 [LUG@USTC]</a></p><h1 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h1><p>使用 <a href="https://pkg.phpcomposer.com/" target="_blank" rel="noopener">Packagist</a> 作镜像源</p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>任意目录下执行下例命令即可：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><h2 id="单个项目配置"><a href="#单个项目配置" class="headerlink" title="单个项目配置"></a>单个项目配置</h2><p>进入项目目录 <code>dir</code> 执行命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ composer config repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><p>使用 <a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝 NPM 镜像</a> 作镜像源<br>使用淘宝 NPM 定制的 <a href="https://github.com/cnpm/cnpm" target="_blank" rel="noopener">cnpm</a> (gzip 压缩支持) 命令行工具代替默认的 <code>npm</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>或者通过添加 <code>npm</code> 参数 <code>alias</code> 一个新命令:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or alias it in .bashrc or .zshrc</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'\n#alias for cnpm\nalias cnpm="npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">  --cache=$HOME/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">  --disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">  --userconfig=$HOME/.cnpmrc"'</span> &gt;&gt; ~/.zshrc &amp;&amp; <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在国外的机器上开发倒是没什么麻烦事，也不用操心这么多。但是由于众所周知的原因，在天朝可就麻烦多了，不想点法子的话下载依赖就够摸鱼一下午了。这么多包管理，不碰不要紧，一碰要狗命（单押x1 XD&lt;br&gt;干脆把手头用的这几个记一下，免得以后查来查去麻烦。&lt;/p&gt;
&lt;h1 id=&quot;一键换源脚本&quot;&gt;&lt;a href=&quot;#一键换源脚本&quot; class=&quot;headerlink&quot; title=&quot;一键换源脚本&quot;&gt;&lt;/a&gt;一键换源脚本&lt;/h1&gt;&lt;p&gt;写完 yum 和 apt 的部分才想起来，这种常见的东西应该是有脚本可以搞定的吧。找了下果然有&lt;a href=&quot;https://www.oldking.net/697.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;大佬&lt;/a&gt;写好了的。&lt;br&gt;如果只是 Linux 软件包的话就用一个脚本搞定：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget -qO- git.io/superupdate.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其他包管理的换源反正也不复杂，就手动弄一下。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/Linux/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/tags/Linux/"/>
    
      <category term="包管理" scheme="https://acuario.xyz/tags/%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
      <category term="换源" scheme="https://acuario.xyz/tags/%E6%8D%A2%E6%BA%90/"/>
    
      <category term="国内源" scheme="https://acuario.xyz/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"/>
    
      <category term="镜像源" scheme="https://acuario.xyz/tags/%E9%95%9C%E5%83%8F%E6%BA%90/"/>
    
      <category term="npm" scheme="https://acuario.xyz/tags/npm/"/>
    
      <category term="docker" scheme="https://acuario.xyz/tags/docker/"/>
    
      <category term="composer" scheme="https://acuario.xyz/tags/composer/"/>
    
      <category term="yum" scheme="https://acuario.xyz/tags/yum/"/>
    
      <category term="apt-get" scheme="https://acuario.xyz/tags/apt-get/"/>
    
      <category term="pip" scheme="https://acuario.xyz/tags/pip/"/>
    
      <category term="pip3" scheme="https://acuario.xyz/tags/pip3/"/>
    
      <category term="一键换源" scheme="https://acuario.xyz/tags/%E4%B8%80%E9%94%AE%E6%8D%A2%E6%BA%90/"/>
    
      <category term="脚本" scheme="https://acuario.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅地找资源</title>
    <link href="https://acuario.xyz/how-to-get-source/"/>
    <id>https://acuario.xyz/how-to-get-source/</id>
    <published>2018-11-09T17:16:52.000Z</published>
    <updated>2019-02-26T05:43:38.666Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/11/10/5be5c84f8f10e.jpg" alt=""></p><p>其实在网络上需要查找一些什么资源并不像我们想象的那样难。如果学会利用搜索引擎，再加上几个好用的、值得信赖的网站，基本上可以事半功倍。所以对于普通人来说，做一个「资源帝」其实只是需要一个手册和方法论的指导而已。<br>著名的资源帝<a href="http://shedingkong.lofter.com/tag/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90" target="_blank" rel="noopener">设定控</a>提供的各类手册当然十分完美，但是我们实际用不到如此多的网站。除非你是松鼠症患者，有收集整理的心理刚需，否则资源手册的噪音大过实际效益。</p><p>这篇水分满满的文章也仅仅只是梳理一下笔者的资源搜索路径，按照几个主要的资源类型进行展开，顺便配上一些评（fei）论（hua），以供各位参考，基本上能搞定 80% 的书、影、音需求。</p><p>p.s. 关于文中的软件推荐，均以 Windows 为平台，暂未收录 macOS 相关软件。</p><a id="more"></a><h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><ul><li><p><a href="http://www.mlook.mobi/" target="_blank" rel="noopener">mLook</a><br>mLook 可以应付绝大多数的电子书需求，但是<strong>已经关闭开放注册</strong>。</p></li><li><p><a href="https://sk.kindleshare.cn/" target="_blank" rel="noopener">KindleShare</a><br>电子书搜索引擎 KindleShare 也还是不错的。</p></li><li><p><a href="http://readfree.me" target="_blank" rel="noopener">readfree</a><br>readfree 是我在众多书签中发掘到的质量上乘的付费下载网站，充值 10￥可以下载 1k 次，或者靠自己上传书籍的下载量来获取下载次数。我搜了几本书都有资源，当作备用网站不妨一试。</p></li><li><p><a href="https://www.easysearch.com.tw/" target="_blank" rel="noopener">EasySearch</a><br>EasySearch 是<a href="https://www.ymdie.com/archives/32219" target="_blank" rel="noopener">港台电子书</a>的搜索引擎，支持搜索博客來、<a href="https://www.kobo.com/tw/zh" target="_blank" rel="noopener">乐天 Kobo</a>、<a href="https://readmoo.com/" target="_blank" rel="noopener">读墨 Readmoo</a>、Taaze、Google Play 的电子书商品信息，你可以在上述网站购买电子书，使用各平台的客户端进行阅读。如果你想在 Kindle 上阅读 Kobo 商城购买的电子书，你可以按照<a href="https://twitter.com/yhyy135/status/1028389615730917376" target="_blank" rel="noopener">这个教程</a>进行操作。</p></li><li><p>Telegram 频道<br>如果你使用 <a href="https://telegram.org/" target="_blank" rel="noopener">Telegram</a> 的话（已被封锁），这里提供几个分享电子书的 Telegram 频道：<br><a href="https://t.me/zebookpush" target="_blank" rel="noopener">kindle电子书读书会</a>：频道每天据群友请求推书。只推原版无损高质 kindle 电子书。需要书时，直接前往<a href="https://t.me/zebook" target="_blank" rel="noopener">Telegram 群组</a>求书即可。<br><a href="https://t.me/booksforeverybody" target="_blank" rel="noopener">书籍分享</a><br><a href="https://t.me/free_programming_books" target="_blank" rel="noopener">电子书支援计划_技术分享</a>：分享技术类书籍为主</p></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://calibre-ebook.com/" target="_blank" rel="noopener">Calibre</a><br>Calibre 是使用 Kindle 的人必备的软件，可以把 mobi、epub、awz3、txt、pdf 等各种格式的电子书进行转换。</p></li><li><p><a href="https://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="noopener">SumatraPDF</a><br>SumatraPDF 是我在 Windows 上主要使用的电子阅读器，软件体积很小，而且可以打开 mobi、epub、azw3，满足了我日常所需。使用时，建议将<code>菜单 - 设置 - 高级选项</code>内的 <code>EbookUI - UseFixedPageUI</code> 值设为 <code>true</code>，否则无法在阅读时选中文本。</p></li></ul><h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><p>好像已经毫无疑问地迈入流媒体时代了，很久没有再下载过 mp3 文件，然后耐心维护本地曲库了。除非实在喜欢的音乐不妨下载一份在本地备用。</p><h2 id="网站-1"><a href="#网站-1" class="headerlink" title="网站"></a>网站</h2><ul><li><p><a href="https://zaihua.io/music/" target="_blank" rel="noopener">在花音乐搜索神器</a><br>该音乐搜索引擎支持网易、QQ、酷狗、酷我、虾米、百度、一听、咪咕、荔枝、蜻蜓、喜马拉雅、全民 K 歌、5sing。搜索后可试听、下载。音乐品质未知。</p></li><li><p><a href="https://lai.yuweining.cn/music" target="_blank" rel="noopener">音乐搜索神器</a><br>看样式应该和上面那个网站差不多。该音乐搜索引擎支持网易、QQ、酷狗、虾米、百度、咪咕。搜索后可试听、下载。音乐品质未知。</p></li><li><p><a href="https://pan.baidu.com/" target="_blank" rel="noopener">百度云</a><br>百度云依旧是文件分享的聚集地，利用<a href="http://www.xilinjie.com/" target="_blank" rel="noopener">西林街</a>和<a href="http://www.panc.cc/" target="_blank" rel="noopener">胖次</a>进行资源搜索以后，多半可以找到自己需要的资源。当然这两个网盘搜索引擎<strong>不仅限于查找音乐资源</strong>。</p></li><li><p><a href="http://www.mlook.mobi/" target="_blank" rel="noopener">OppsU!</a><br>站内有大量网友分享的正版专辑文件，多以 iTunes 的专辑文件为主。当然也由于版权和一些众所周知的原因，该网站注册门槛非常高，只有每年特定时间才会开放注册。</p></li></ul><h2 id="软件-1"><a href="#软件-1" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a><br>在民谣、电音、翻唱方面，网易云的资源还是比较丰富的，免费流播，付费下载，可备不时之需。想要下载网易云的音乐拷贝到其他设备上听，但是现在网易云的音乐有自己的 NCM 格式怎么办？不妨试试<a href="https://github.com/yoki123/ncmdump" target="_blank" rel="noopener">这个项目</a>的工具来去除音乐文件的保护，还原成正常的 mp3。</p></li><li><p><a href="https://www.spotify.com/" target="_blank" rel="noopener">Spotify</a><br>这是笔者目前主力使用的流媒体音乐平台。需付费（按区域选择不同，<a href="http://mts.io/projects/spotify-pricing/" target="_blank" rel="noopener">价格不同</a>），跨平台，曲库以非华语音乐为主，当然主流的华语音乐也够应付大多数需求。</p></li></ul><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="网站-2"><a href="#网站-2" class="headerlink" title="网站"></a>网站</h2><h3 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h3><ul><li><p><a href="http://yyets.com/" target="_blank" rel="noopener">人人字幕组</a><br>人人字幕组毫无疑问是国内数一数二的字幕组。字幕样式和翻译功底都算上乘。官网提供了各平台客户端的下载链接，以及相关网站的链接。</p></li><li><p><a href="http://www.zimuzu.io/" target="_blank" rel="noopener">人人影视资源下载站</a><br>下载站的网址非常好记：<code>zimuzu.io</code>。免费注册会员，每日签到进行升级，除特殊影片可能会有等级限制查看，其他正常资源一律免费提供下载链接，登录后即可查看下载链接。</p></li><li><p><a href="http://cili001.com/" target="_blank" rel="noopener">磁力站</a><br>由于众所周知的原因，一部分资源不能在人人影视资源下载站提供下载，甚至不能提供下载链接，所以磁力站作为第三方搜索引擎，其数据基本涵盖了所有人人影视新旧资源的下载链接。你可以在这里找到几乎所有在人人影视字幕组发布过的资源链接。</p></li><li><p><a href="http://www.dysfz.cc/" target="_blank" rel="noopener">电影首发站</a><br>该站提供大量电影下载链接，无需注册，完全免费，使用迅雷等下载工具即可正常下载。笔者主要用来下载国产电影，该站也提供其他影视资源。</p></li></ul><h3 id="美剧"><a href="#美剧" class="headerlink" title="美剧"></a>美剧</h3><ul><li><a href="http://www.zimuzu.io/" target="_blank" rel="noopener">人人影视资源下载站</a><br>人人字幕组除了提供含有中文字幕的电影下载之外，还有丰富的美剧资源。</li></ul><h3 id="纪录片"><a href="#纪录片" class="headerlink" title="纪录片"></a>纪录片</h3><p><a href="https://space.bilibili.com/22121599/#/" target="_blank" rel="noopener">哔哩哔哩-纪录片之家</a><br>哔哩哔哩站内有很多纪录片，而且很多视频的弹幕已经有野生翻译君助力。你可以在纪录片之家的 B 站首页进行查找，然后在线观看。</p><ul><li><p><a href="http://www.daolan.net/index.php" target="_blank" rel="noopener">道兰同好会</a><br>该站是一个纪录片译制论坛，主要译制 NHK 纪录片。</p></li><li><p><a href="https://kamonka.blogspot.com/" target="_blank" rel="noopener">NHK纪录片精选</a><br>NHK（日本放送协会）制作和播放的纪录片，由国内爱好者翻译制作，可直接下载，无需注册。P.S. 该网站已被审查封锁</p></li></ul><h3 id="动漫"><a href="#动漫" class="headerlink" title="动漫"></a>动漫</h3><ul><li><a href="http://share.dmhy.org/" target="_blank" rel="noopener">动漫花园</a><br>一个朋友介绍给我的追番站点。不过如果你是 ACG 人士，应该也不需要我过多介绍。</li></ul><h2 id="软件-2"><a href="#软件-2" class="headerlink" title="软件"></a>软件</h2><ul><li><p><a href="https://potplayer.daum.net/" target="_blank" rel="noopener">PotPlayer</a><br>万能播放器。没有它打不开的视频文件，如果有，那多半是文件坏了。笔者有且只用它作为视频播放工具。</p></li><li><p>百度云文件下载软件<br>众所周知百度云非 VIP 会员有下载限速。这里提供三款不限速的下载软件。为了避免怀孕，建议以自己的小号登录使用。笔者使用的是 PanDownload，非常好用，下载速度非常快，首推。<br><a href="http://pandownload.com/" target="_blank" rel="noopener">PanDownload</a><br><a href="http://www.speedpan.com/" target="_blank" rel="noopener">速盘</a><br><a href="https://github.com/proxyee-down-org/proxyee-down" target="_blank" rel="noopener">Proxyee Down</a></p></li></ul><p>暂时写这么多，如果你有什么好的推荐不妨在评论区留言交流。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/11/10/5be5c84f8f10e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其实在网络上需要查找一些什么资源并不像我们想象的那样难。如果学会利用搜索引擎，再加上几个好用的、值得信赖的网站，基本上可以事半功倍。所以对于普通人来说，做一个「资源帝」其实只是需要一个手册和方法论的指导而已。&lt;br&gt;著名的资源帝&lt;a href=&quot;http://shedingkong.lofter.com/tag/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;设定控&lt;/a&gt;提供的各类手册当然十分完美，但是我们实际用不到如此多的网站。除非你是松鼠症患者，有收集整理的心理刚需，否则资源手册的噪音大过实际效益。&lt;/p&gt;
&lt;p&gt;这篇水分满满的文章也仅仅只是梳理一下笔者的资源搜索路径，按照几个主要的资源类型进行展开，顺便配上一些评（fei）论（hua），以供各位参考，基本上能搞定 80% 的书、影、音需求。&lt;/p&gt;
&lt;p&gt;p.s. 关于文中的软件推荐，均以 Windows 为平台，暂未收录 macOS 相关软件。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="mp3" scheme="https://acuario.xyz/tags/mp3/"/>
    
      <category term="资源" scheme="https://acuario.xyz/tags/%E8%B5%84%E6%BA%90/"/>
    
      <category term="美剧" scheme="https://acuario.xyz/tags/%E7%BE%8E%E5%89%A7/"/>
    
      <category term="电影" scheme="https://acuario.xyz/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="资源帝" scheme="https://acuario.xyz/tags/%E8%B5%84%E6%BA%90%E5%B8%9D/"/>
    
      <category term="找资源" scheme="https://acuario.xyz/tags/%E6%89%BE%E8%B5%84%E6%BA%90/"/>
    
      <category term="电子书" scheme="https://acuario.xyz/tags/%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>回忆就像衣柜里的春夏秋冬</title>
    <link href="https://acuario.xyz/memory-of-Aug/"/>
    <id>https://acuario.xyz/memory-of-Aug/</id>
    <published>2018-09-06T14:33:56.000Z</published>
    <updated>2018-09-06T20:24:48.081Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/09/07/5b9159755c82a.png" alt="Electric July"></p><p>特别喜欢这张<a href="https://movie.douban.com/subject/26312156/" target="_blank" rel="noopener">电影</a>画面，或许是因为正好自己的经历和电影如此的相映成趣，好像自己就站在那个田野里，静静地看着远方。因为自己心里的那个人或许已经再没有办法陪伴在自己的身边，而自己也无力去攀上通向远方的断桥。</p><a id="more"></a><p>当阳光洒在脸颊和手臂上的时候，当雨水淋湿衣袖的时候，增添的有可能是温暖和冰冷的回忆，也有可能只是在博客文章里寥寥的几笔。温度的差异，提醒自己的不是谁喜欢着谁，而是那个当下，你真真切切地和谁在一起。因为有了不一样的经历，所以它才能够像是收在柜子里的衣服那样，任着自己的性子取出那些让自己喜欢的和不喜欢的，然后花点心思慢慢更衣。最后在别人眼里，看到的其实是自己想要让人看到的衣冠，而那些丑陋的行迹，终究只能自己一个人去思考与犹豫。</p><p>回忆就像衣柜里的春夏秋冬，那些久久没有临幸的外衣，渐渐生出了令人厌恶的霉点。因为家乡四季如春，没有令人难受的湿气，所以面对发了霉的东西慌了阵脚、不知所措，索性把它们一件一件摊开来，检视它们的每一个细节，然后一声叹息。挑三拣四后的思绪一团乱麻，索性全都扔进洗衣机，好好洗涤一番。</p><p>亦或是长了教训，把它们一件一件展开来，找个衣架挨个挂起来晾晒一番。却在这时候才发现那些经不住时间考验的回忆，已经开始泛黄，任凭我怎么漂白，依旧褪不去历史的影子。最怕的应该是心爱的那件回忆上，不知什么时候破了洞，已经再也没有办法补齐，只能任由它这样下去，或者再一声叹息，就这样将其丢弃。</p><p>朋友戏谑我说：</p><blockquote><p>你已经可以写“八月，又溜走了”</p></blockquote><p>我什么也没有说，多半不是因为我没法正面回应自己的拖延，而是因为自己心里的八月还没有结束。</p><blockquote><p>这个八月，我到底在做什么？</p></blockquote><p>我一遍遍这样问自己，发现其实心里的答案早就如此明晰，只是我不愿承认与接受而已。如果要认真解释的话，那多半是因为夏日初秋时分，我拥有了和电影里如出一辙的悸动与情愫。在这段感情里，我试着在探寻「自我」的意识与定义，就像听到的那期<a href="http://cxks.in/16?t=720" target="_blank" rel="noopener">播客</a>里说，<code>理解某一刻的情绪，或许不像解题目一样可以获得确定的答案；对某一个情绪的理解，最后可能是对情绪状态中对自我的关注，是一整幅拼图中的一个碎片。当我们关注到越来越多的碎片，我们就会越来越感受到自我</code>。我好像越发明白在感情中成长所指的意义——我们总是感谢一些人一些事，教会我们了什么道理，实际上在人与人的互动关系中，更多的是自我的体察与反思，最终得出或利己或利他的选择。当自己真真切切地失去的时候，才会比得到的时候更加透彻地领悟某些老生常谈的道理。于是说到底，<strong>有些道理，毕竟还是需要自己经历过的才会明白。在自己亲历之前，别人说再多次也不以为意。</strong></p><p>一个人的夜晚，身体已经十分疲惫，却还是不愿睡去。不同于以往的无聊与烦躁，现时最不愿面对的，是睡眠带来的安稳——平日渴求的安逸，没什么值得被记忆和记录的；而现在的我却如此害怕闭上双眼进入梦乡的时候，回忆的气泡慢慢破碎，等我醒来的时候一个也不剩。在我拼命想要去写下些什么东西的时候，思来想去的结果，除了矫情，好像也难以道出什么心情。在旁人看来无所谓的事情，终究只有自己才知道它放在心里的什么位置。经常想起马伊俐在<a href="https://v.youku.com/v_show/id_XMjkxODg4MDM1Ng==.html" target="_blank" rel="noopener">《圆桌派》</a>里对「作」的举例，于是在自己身上发现了印证——<em>永不安分，永不知足，永远折腾，永远没完</em>。也许是自己还没长大吧，不过又有谁心甘情愿地承认自己是巨婴罢？</p><p>九月已经过去了几个白昼，可对于我来说，八月才刚刚结束。</p><p>八月，与其说是溜走了，不如说，是我还没来得及告别，就只能眼睁睁看着他的背影渐渐远去。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/09/07/5b9159755c82a.png&quot; alt=&quot;Electric July&quot;&gt;&lt;/p&gt;
&lt;p&gt;特别喜欢这张&lt;a href=&quot;https://movie.douban.com/subject/26312156/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;电影&lt;/a&gt;画面，或许是因为正好自己的经历和电影如此的相映成趣，好像自己就站在那个田野里，静静地看着远方。因为自己心里的那个人或许已经再没有办法陪伴在自己的身边，而自己也无力去攀上通向远方的断桥。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://acuario.xyz/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://acuario.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>V2ray配置Telegram的MTProto协议</title>
    <link href="https://acuario.xyz/set-mtproto-for-telegram-via-v2ray/"/>
    <id>https://acuario.xyz/set-mtproto-for-telegram-via-v2ray/</id>
    <published>2018-08-15T22:58:28.000Z</published>
    <updated>2019-01-18T13:32:34.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>V2ray 是继 ShadowSocks 后又一个蓬勃发展、欣欣向荣的代理利器，目前支持多种传输协议。现在可以使用它设置 MTProto 协议，搭建 Telegram 的内部代理服务器，实现无需打开其他突破网络封锁的客户端即可正常通讯的目的。</p><h1 id="V2ray-的代理原理"><a href="#V2ray-的代理原理" class="headerlink" title="V2ray 的代理原理"></a>V2ray 的代理原理</h1><p>v2ray 的代理原理和配置项的关系如下图：<br><img src="https://i.loli.net/2018/08/15/5b73c180d5ef0.png" alt="v2ray原理图及配置关系"></p><p>p.s.上图为 v2ray v4.0 之前的代理原理图。v2ray v4.1+ 合并了输入输出配置项：</p><ul><li><code>inbounds = inbound + inboundDetour</code></li><li><code>outbounds = outbound + outboundDetour</code></li><li>为便于理解，你可以将上图 <code>inbound</code>、<code>inboundDetour</code> 视为各种不同的代理方式，全部定义在新版配置文件的 <code>inbounds</code> 配置项中，<code>outbounds</code> 亦同理。</li></ul><a id="more"></a><p>v2ray 的的配置格式都是相同的，理论上不区分客户端和服务端，<code>客户端和服务器通用一种形式，只是实际的配置不一样。</code>v2ray 配置文件的配置项有以下几个部分：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"api"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"dns"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"stats"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"policy"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"reverse"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [],</span><br><span class="line">  <span class="attr">"transport"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们重点关注其中传入、传出和路由配置，即：<code>inbounds</code>、<code>outbounds</code>、<code>routing</code>。</p><ul><li><code>inbounds</code> 和 <code>outbounds</code> 定义多种不同的传入、传出方式。</li><li>自定义不同的传入和传出方式，然后用路由（<code>routing</code>）进行绑定，就可以实现定制化代理。</li></ul><p>下面举几个栗子：</p><ol><li>仅用来突破网络封锁：客户端 <code>outbounds</code> 设置一个 VMess 协议传出、服务端 <code>inbounds</code> 设置一个 VMess 协议传入，服务端 <code>outbounds</code> 设置一个 freedom 方式传出。这样，客户端与服务端将使用 VMess 协议加密流量突破网络封锁，而服务端访问被封锁网站没有特殊加密，使用正常网络传输协议。</li><li>服务端配置其他的传入、传出协议实现不同于的传输需求。比如服务端添加一组 MTProto 协议对应的传入、传出方式，即可以使用 Telegram 内部代理。或者使用 shadowsocks 协议传入，再用 vmess 协议传出给下一个服务端，实现多级代理等等。</li><li>多种传入、传出方式可以共存，打上标签（<code>tag</code>）以后，用路由（<code>routing</code>）实现自由绑定，所以仅使用 v2ray 就可实现多种方式的传输需求，比如同时支持 VMess、Shadowsocks、MTProto、Socks 协议进行通讯。v2ray 支持<a href="https://www.v2ray.com/chapter_02/02_protocols.html" target="_blank" rel="noopener">多种协议</a>，发挥你的创造性去使用吧。</li></ol><h1 id="MTProto-的配置"><a href="#MTProto-的配置" class="headerlink" title="MTProto 的配置"></a>MTProto 的配置</h1><p>v2ray 的<a href="https://www.v2ray.com/chapter_02/protocols/mtproto.html" target="_blank" rel="noopener">官方手册</a>提供了不完整的样例配置</p><h2 id="传入代理"><a href="#传入代理" class="headerlink" title="传入代理"></a>传入代理</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"inbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"tg-in"</span>,</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">443</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"users"</span>: [&#123;<span class="attr">"secret"</span>: <span class="string">"b0cbcef5a486d9636472ac27f8e11a9d"</span>&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>传出代理：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"outbounds": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"tg-out"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>路由：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"routing": &#123;</span><br><span class="line">  "rules": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">      <span class="attr">"inboundTag"</span>: [</span><br><span class="line">        <span class="string">"tg-in"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"outboundTag"</span>: <span class="string">"tg-out"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="配置文件示例"><a href="#配置文件示例" class="headerlink" title="配置文件示例"></a>配置文件示例</h1><p>这里提供一个主要使用 VMess 协议突破网络封锁，额外支持 MTProto 协议实现 Telegram 内部代理的配置文件，其中：</p><ul><li>服务端设置的端口务必加入服务器防火墙例外，否则可能无法正常连接</li><li>UUID 可以在 <a href="https://www.uuidgenerator.net/" target="_blank" rel="noopener">Online UUID Generator</a> 网站生成</li><li>用户密钥可以使用命令 <code>openssl rand -hex 16</code> 生成</li></ul><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: 填写 VMess 协议监听端口,</span><br><span class="line">      ,</span><br><span class="line">      "protocol": "vmess",</span><br><span class="line">      "settings": &#123;</span><br><span class="line">        "clients": [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"填写UUID，不要去掉引号"</span>,</span><br><span class="line">            <span class="attr">"level"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">64</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"tg-in"</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">      <span class="attr">"port"</span>: 填写 MTProto 协议监听端口,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"users"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"secret"</span>: <span class="string">"填写用户密钥，不要去掉引号"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "outbounds": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"tg-out"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"mtproto"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "rules": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:private"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"inboundTag"</span>: [</span><br><span class="line">          <span class="string">"tg-in"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"tg-out"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Telegram-内部代理设置"><a href="#Telegram-内部代理设置" class="headerlink" title="Telegram 内部代理设置"></a>Telegram 内部代理设置</h2><p>将服务器的 IP 地址、配置的 MTProto 协议监听端口、用户密钥填入 Telegram 的代理设置中即可使用。或者使用构造链接在 Telegram 内部打开进行自动设置：</p><p><code>https://t.me/proxy?server=服务器IP地址&amp;port=服务器MTProto协议监听端口&amp;secret=用户密钥</code></p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">1082</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"socks"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"auth"</span>: <span class="string">"noauth"</span>,</span><br><span class="line">        <span class="attr">"udp"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"alterId"</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="attr">"security"</span>: <span class="string">"auto"</span>,</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"填写 UUID 与服务端一致，不要去掉引号"</span></span><br><span class="line">              &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"port"</span>: 服务端 VMess 协议监听端口,</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"服务端 IP 地址，可以去掉引号"</span>,</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:private"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"domain"</span>: [</span><br><span class="line">          <span class="string">"geosite:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>参考链接：<br><a href="https://www.v2ray.com/chapter_02/01_overview.html" target="_blank" rel="noopener">v2ray 配置文件格式</a><br><a href="https://ntgeralt.blogspot.com/2018/08/telegramv2raymtproxy.html" target="_blank" rel="noopener">让 Telegram 连接 V2ray 服务端 mtproxy 协议</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;V2ray 是继 ShadowSocks 后又一个蓬勃发展、欣欣向荣的代理利器，目前支持多种传输协议。现在可以使用它设置 MTProto 协议，搭建 Telegram 的内部代理服务器，实现无需打开其他突破网络封锁的客户端即可正常通讯的目的。&lt;/p&gt;
&lt;h1 id=&quot;V2ray-的代理原理&quot;&gt;&lt;a href=&quot;#V2ray-的代理原理&quot; class=&quot;headerlink&quot; title=&quot;V2ray 的代理原理&quot;&gt;&lt;/a&gt;V2ray 的代理原理&lt;/h1&gt;&lt;p&gt;v2ray 的代理原理和配置项的关系如下图：&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2018/08/15/5b73c180d5ef0.png&quot; alt=&quot;v2ray原理图及配置关系&quot;&gt;&lt;/p&gt;
&lt;p&gt;p.s.上图为 v2ray v4.0 之前的代理原理图。v2ray v4.1+ 合并了输入输出配置项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inbounds = inbound + inboundDetour&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;outbounds = outbound + outboundDetour&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为便于理解，你可以将上图 &lt;code&gt;inbound&lt;/code&gt;、&lt;code&gt;inboundDetour&lt;/code&gt; 视为各种不同的代理方式，全部定义在新版配置文件的 &lt;code&gt;inbounds&lt;/code&gt; 配置项中，&lt;code&gt;outbounds&lt;/code&gt; 亦同理。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="软件使用" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="VPS" scheme="https://acuario.xyz/tags/VPS/"/>
    
      <category term="v2ray" scheme="https://acuario.xyz/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>七月，已经溜走了</title>
    <link href="https://acuario.xyz/july-is-gone/"/>
    <id>https://acuario.xyz/july-is-gone/</id>
    <published>2018-07-31T15:51:12.000Z</published>
    <updated>2018-07-31T16:01:20.716Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/07/31/5b608698e9572.jpg" alt="joined-screenshot4.jpg"><br>(IMG Source: <a href="https://en.wikiquote.org/wiki/Fight_Club_%28film%29" target="_blank" rel="noopener">Fight Club</a>)</p><p>我好像已经忘了这个月是怎么开始的了。我试着从屏幕右下角的几个数字向前回溯，然后试图写下点什么无病呻吟的东西，用来给「时间」这把尺子多加一个叫做七月的刻度。</p><a id="more"></a><p>一直不愿意在自己的博客上写一些日记随笔类的东西，心想着这些胡思乱想被人看到那会是一件多么羞耻的事情。就像微信里的朋友圈，满足的不过是 Peeping Tom 们内心的窥私欲——在通讯录里上下滑动，看到某个叫做 A 的家伙，想起他对于自己的身份，想起自己是在何时何地因为什么机缘巧合与其相识，然后点开他的朋友圈。如果他没有使用那个叫做「仅显示最近三日的状态」的奇技淫巧的话，他一点一滴想被我窥视的东西，便毫不掩饰地冲入我的视野——哎哟喂，这兔崽子活得也还不错哦。哦哟，这龟孙子也不过如此嘛……<br>可能会感慨一下谁谁谁的人模狗样，或者某某某的人生轨迹。但这不过是给自己一个「这世界不过如此」的充分条件罢了，看似充满信息的摄入，不过只能留下转身便忘了的回忆罢了。</p><p>把过去一个月的经历写出来，然后琢磨着能有什么联系和想法，慢慢想到了几个关于「改变」的印记：</p><ul><li>人生第二次搬家——明显的空间尺度上的「改变」</li><li>看了一场城市历史摄影展——明显的时间尺度上的「改变」</li><li>闲逛了一场动漫展——不同次元间的「改变」</li><li>一本<a href="https://books.google.com.hk/books?id=QGw7DwAAQBAJ&amp;dq=%E5%87%BA%E8%B3%A3%E4%B8%AD%E5%9C%8B&amp;hl=zh-CN" target="_blank" rel="noopener">政治类书籍</a>，但是写读书笔记时又在考虑要不要做自我审查——在言论身份上的「改变」</li><li>一本<a href="https://book.douban.com/subject/30217599/" target="_blank" rel="noopener">推理小说</a>——虚构与现实间的「改变」</li></ul><p>在此之前，从没有用这样的视角去观察过周遭的事情，也就想到了关于「时间」的概念。一次和 <a href="https://twitter.com/ibingfei" target="_blank" rel="noopener">Andy</a> 聊天提及<a href="https://zh.wikipedia.org/zh/%E7%8F%BE%E4%BB%A3%E6%80%A7" target="_blank" rel="noopener">现代性</a>中时间概念对人类社会和自我的影响，自然地顺着这条思维路径去反思自身行为方式和目的。<br>也就是最近一段时间的事情，突然想买一个卡片相机拍 vlog，至少「拥有一个 DV 去记录动态的生活和经历」是几年前代购清单上的一笔，只是取代 DV 位置的已不再是新款的 DV，而是一个又一个样貌趋同的被称之为 smart phone 的 stupid phone。<br>「你到底是为了什么想去拍？是为你自己，还是为了分享？」<br>「你留恋的，是那时那人那地的瞬间，还是春夏交替间的变换？」<br>若不是因为「时间」这人类社会定义的概念，若不是我们每个人拥有的时间观念，我们又怎会产生种种臆想？<br>我很难坚定地去说做的事情完完全全为了自己，因为如此廉价的分享渠道和人类自身的社会性，在冥冥中促使我们更想把自己的所思所想所记录传达出去，让自己的文字和思想通过如此低效的方式转移到另外的地方去。</p><p>尼采在《查拉图斯特拉如是说》里这样写道：</p><blockquote><p><strong><strong>我教你们超人</strong></strong>。人是应该被超越的东西。你们做了什么来超越他呢？<br>一切生物至今都创造了超越自己的东西：你们要做这大潮中的落潮，宁可回到动物那里去，也不愿意超越人类？<br>对人类来说，猿猴是什么？一个笑柄或是一个痛苦的耻辱。对超人来说，人也一样：一个笑柄或是一个痛苦的耻辱。<br>你们完成了由虫到人的过程，你们身上许多东西仍然是虫。你们曾经是猿猴，现在人比任何一只猿猴更是猿猴。<br>但是你们当中的最聪明者，也不过是植物与幽灵的矛盾体与共同体。但是我吩咐你们变成幽灵还是植物？<br>瞧，我教你们超人！</p></blockquote><p>如果说，hack myself 也算是一种趋近「超人」的行径的话，那么我相信<a href="https://zh.wikipedia.org/wiki/%E5%BE%B7%E7%88%BE%E6%96%90%E7%AE%B4%E8%A8%80" target="_blank" rel="noopener">德尔斐箴言</a>里那句 <code>Be Yourself or Know Yourself. （认识你自己。）</code> 也许会是我一辈子值得探索和作答的考题。</p><p>我还没落笔，七月，已经溜走了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/07/31/5b608698e9572.jpg&quot; alt=&quot;joined-screenshot4.jpg&quot;&gt;&lt;br&gt;(IMG Source: &lt;a href=&quot;https://en.wikiquote.org/wiki/Fight_Club_%28film%29&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fight Club&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我好像已经忘了这个月是怎么开始的了。我试着从屏幕右下角的几个数字向前回溯，然后试图写下点什么无病呻吟的东西，用来给「时间」这把尺子多加一个叫做七月的刻度。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://acuario.xyz/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://acuario.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>《拜訪革命》读书笔记</title>
    <link href="https://acuario.xyz/the-portrait-of-revolution-clip/"/>
    <id>https://acuario.xyz/the-portrait-of-revolution-clip/</id>
    <published>2018-06-06T14:04:25.000Z</published>
    <updated>2018-06-06T14:11:58.781Z</updated>
    
    <content type="html"><![CDATA[<p>第 11 頁<br>似曾相識的開端，踏出截然不同的路徑，兩厢對照，變革的命運更加清晰。對當權者而言，如果開放可以延續權力，他便鬆手，如果鐵腕能夠穩固執政，他便握拳。然覆手雲雨之間，時機、地理、民意、外力，多少偶然互相撞擊，革命的軌道像雲霄飛車一樣不知道下一秒的起落。</p><hr><p>第 12 頁<br>許多美國人不關心世界，連護照都沒有，但這並不妨礙美國成為頭號自由之邦。但是否正因如此，以強烈排外為面貌的右翼風潮，近些年在美國、在歐洲急速抬頭？外交政策的制訂雖是精英之事，若大眾與精英之間嚴重脫節，英國脫歐、川普上台之類的事情就會一再震驚世界。</p><a id="more"></a><hr><p>第 13 頁<br>「走到某處邊界，總想看看，邊界背後是什麼，於是一路走下去。」</p><hr><p>第 20 頁<br>我好奇地追問篤信神明的尼泊爾人，為何支持不信宗教的「毛澤東主義」。「哦，不，這沒有關係，他們為國家做好事。」私營旅行社的庫馬拉說，毛派改變了窮苦大眾的命運，他押寶毛派主導的政府將帶來新的穩定、新的生意。</p><hr><p>第 21 頁<br>紅色到來之前，尼泊爾經歷了血色。<br>一九九六年起，普拉昌達領導毛派武裝與政府展開長達十年的內戰，造成約一萬三千人死亡，兩萬多人逃離家園，超過八百人失蹤。<br>有西方記者稱毛派武裝曾在加德滿都街頭射殺不服從命令的計程車司機，而他們雇傭十六歲以下的娃娃兵，也不是什麼秘密。萬幸，毛派最後放棄武力進占加德滿都， 一紙協議，國人止血。</p><hr><p>第 36 頁<br>整個尼泊爾百分之八十以上的人務農，其中一半人口掙扎在聯合國劃定的貧困線以下。土地掌握在極少數世襲地主手中，耕者衹賺取微薄的酬勞。</p><hr><p>第 42 頁<br>「兩伊戰爭對伊朗，相當於中國的朝鮮戰爭。」一名常駐當地的中國記者分析說，都是新生政權第一次遭遇對外戰爭，必傾性命一搏。何梅尼曾經流亡伊拉克宗教聖地納吉夫。迫於伊朗國王壓力，伊拉克總統薩達姆·海珊(Saddam Hussein)逐他出境。雖轉投巴黎，如魚得水，但革命成功後，何梅尼沒有忘記海珊落井下石，而海珊更惦記著在鄰國政權更迭時乘虛而入。</p><hr><p>第 44 頁<br>巴勒維國王的父親禮薩廢除了面紗。這位騎兵出身的將軍不以伊斯蘭教為生活準則，相信伊朗的出路在於全面西化。二十世紀初，東方文明國度或主動或被動，認可現代化道路的面貌就是西方化告別面紗，就是告別過去與落後。<br>二十世紀七〇年代，在反對巴勒維國王的抗議中，許多城市婦女主動包上頭巾——不是因為贊同伊斯蘭生活方式，而是表達對王權的不滿和對宗教女性的同情。但是她們沒有料到，推翻王權之後戴不戴面紗不再是一個選項——底層宗教熱情釋放出來，鋪天蓋地呼應何梅尼政教合一的設想。</p><hr><p>第 45 頁<br>我在伊朗的時候，趕上巴西世界盃半決賽。伊朗人酷愛足球，但是政府有令，不得聚眾圍觀。二〇〇九年事件以來，「人多」是個敏感詞，足球也變得政治起來。二〇一〇年南非世界盃，伊朗國家隊球員手腕上纏著綠絲帶上場，表達對穆薩維的支持。但既然政府有令，大部分伊朗人就在家關起門看電視。</p><hr><p>第 48 頁<br>艾哈邁迪內賈德借助打擊社會自由風氣，擴大了革命衛隊和巴斯基的權力，著裝要求更嚴，言論受到空前壓制。愛國主義也被用來挑釁反對者。他積極尋回兩伊戰爭遺骸，特別安置在青年男女偷偷約會的公園和大學校園，多次引發抗議。德黑蘭人說，別人「種樹」，艾哈邁迪內賈德「種烈士」。</p><hr><p>第 49 頁<br>「死亡、監禁、抓捕、毆打，所有這些耗盡了我們的能量。」達拉說。即便是二〇一一年阿拉伯抗議風潮驟起，伊朗也沒有重演綠色革命。桌上其他人紛紛點頭。人心疲累，現在學生們在一起不大談論政治。</p><hr><p>第 50 頁<br>紮小辮的舞台劇導演，為這過時的藝術家髮型蹲過幾天監獄。最近他排了一齣劇，按達拉的說法，「分明是舞蹈」，但不能叫「舞蹈」，因為伊斯蘭政府嚴禁跳舞。小辮改了名字叫「韻律活動」，希望掩人耳目通過審查。當他們議論政府管制的愚蠢時，臉上會露出興奮，你可以感受到他們的苦悶和無奈，但也夾雜一絲遊戲的快樂。</p><hr><p>第 51 頁<br>美國人介紹達拉時愛說：「這個姑娘為了信仰勇敢鬥爭，終於抵達美利堅。」可是達拉並不認同自己是什麼「英雄」，只是「出現在錯誤的地點（被便衣聽到電話）」。以美國公民身分出入德黑蘭並非難事，她說，好多伊朗毛拉（mullah）政客、富商的孩子都持有美國護照，國籍不會成為不能入境的理由，只要你「不惹事」。</p><ul><li>毛拉泛指精通伊斯蘭神學與律法的學者。</li></ul><hr><p>第 51 頁<br>玫瑰園正式竣工還是在兩伊戰爭之後，但「商場」概念的引入者，卻是末代國王巴勒維。他希望借此打擊巴札商人與伊斯蘭教士的勢力。「巴札」指的是中世紀以來中亞、北非的集市，不僅僅是貿易場所，更是當地商人、手工製造者和銀行（或借貸者）的一張關係網。在伊朗，巴札控制著國內三分之二的批發銷售，也把持著本地毯子和堅果的出口。巴札商人自然不喜歡外國商品進來競爭。國際封鎖傷害了伊朗産品外銷，但實際效果又保護了巴札商人在國內的壟斷。<br>幾個世紀以來，巴札商人捐錢給教士，教士們負責將伊斯蘭教義解釋得有利於他們的生意和生活模式。很多清真寺就建在巴札裡面。「金錢與教義」結盟，在一八九一年發起「菸草抗議」，抵制吸食英國商人專營的水菸，在一九〇五年參與立憲革命，削弱國王特權。而一九七九年反對國王的革命中，這種聯盟的效果更是決定性的。</p><hr><p>第 53 頁<br>走私在今天伊朗經濟的比重難以計算。後來我漸漸發現， iPhone 手機在德黑蘭很普遍，街上還有蘋果專賣店，彷彿整個從美國加州鑽地道大搖大擺地走了進來。店員穿的也是藍色 T 恤，胸前懸掛白色卡片。但誰都知道，蘋果和伊朗尚未「建交」。倒賣外國産品的走私生意，經手者很可能是掌握特權的革命衛隊，也可能跟巴札商人有關。錢，令政治界線模糊，利益圖譜變得複雜。</p><hr><p>第 54 頁<br>「你想不到他們會託我從美國帶什麼。」達拉每次回國，朋友們點名要的是「真的星巴克紙杯、原裝可口可樂」。玫瑰園商場有店鋪賣仿製的星巴克馬克杯，被當作高檔工藝品擺在黑絲絨軟墊上展出。而伊朗的可口可樂，來自一九七九年美國人落跑時留下的配方和工廠。「見過世面」的米夏講了一個更好笑的故事：他在義大利的時候，接待過父親的同事和他的兒子。這對伊朗父子每天都點名要吃麥當勞。「我勸他們義大利菜好吃，但他們只想吃麥當勞。」一次去鄉村，沒有麥當勞，不得不吃了一回當地餐。伊朗父子承認非常美味，可是第二天回到城裡，他們又要求吃麥當勞。米夏很生氣，當真實世界攤開在眼前，伊朗老鄉竟執著尋找臆想中的那一個。他們對那個世界的想像相當狹隘，縮小到美國，縮小到美國流行文化，縮小到起士漢堡。</p><hr><p>第 55 頁<br>現在，商場二樓正對何梅尼和哈米尼畫像的地方，貼著「免費無線上網」。幾乎所有人都能嫻熟地使用捷克產的翻牆軟體，越過政府在網際網路上設置的障礙，連最高領袖本人都在「被遮罩」的海外社交媒體上開了帳號。技術的發展似乎站在了反抗者這一邊，但當局並不打算放棄。如果沒有特殊軟體，直接在伊朗網際網路上搜索西方歌曲、電影或敏感政治，都會被立即連結到「伊斯蘭政府網站」的主頁。有時你覺得伊朗人與外面的世界就隔了一層紙，但那層紙是鐵打的。</p><hr><p>第 57 頁<br>何梅尼的學生和長期追隨者拉夫桑賈尼（Akbar Hashemi Rafsanjani），成了哈米尼的第一任總統，被稱為「伊朗鄧小平」。在許多發展中國家，「鄧小平」是「市場經濟啟動者」的代名詞。兩伊戰後百廢待興，拉夫桑賈尼推出兩個「五年計劃」，對超過一千家國營企業實行私有化。伊朗出現了股票市場、自由貿易區，農業國家開始向工業化轉變。</p><hr><p>第 62 頁<br>達拉鬥爭經驗不足，米夏更像是在抗議洗禮中長大。在德黑蘭藝術大學念書時，他崇拜一個高大壯實的學長——差不多有兩公尺高。米夏說起來的時候，還要向上仰望。學長是政治活躍分子。一天午餐，學長突然來到食堂，說不要吃今天的肉，那是國王時代就存在冰箱裡的。肉怎麼可能保存三十年？學長拿出從食堂偷來的一條牛後腿， 一看印章，真是巴勒維時代的。不管怎麼說，大家發現那天午餐的味道確實古怪。學長號召絕食，敲盤子繞著校園遊行。堅持三天，校方道歉承諾改善伙食。那一次，米夏看到了反抗的力量。</p><hr><p>第 69 頁<br>在他記憶中，綠色革命的結束，不僅僅因為政府的鐵腕鎮壓，還因為「抗議者和政府都懼怕國家動盪，上下一起停了」。<br>也許我流露了出些許驚訝，他接著說：「伊朗人和中國人一樣害怕國家動盪。」雷拉茲曾經是一家國有企業廠長，很早就到廣州考察過，對中國這些年的情況很熟悉。他仰慕中國經濟成就，十年前就預言中國應該在國際關係中領頭。</p><hr><p>第 77 頁<br>賈維爾笑了：「這真得怪他們。」他在我的筆記本上畫了一個「馬斯洛需求層次金字塔」，頂層是「自我成就」，最底層是「呼吸、食物、性、住房、健康」。他在「性」上劃了個叉：「我們的政權非常聰明，管住人最基本的需求，於是我們滿腦子就剩下這些，其他什麼都不想了。」<br>伊朗禁止公開戀愛。儘管女人戴面紗、男女授受不親等伊斯蘭習俗，在一九七九年革命之前就在伊朗社會存在，但是革命之後才寫進法律，出動風紀警察監管。性禁忌還常常與政治聯繫在一起。異議者不管做了什麼，對他們的譴責首先跟性醜聞扯上關係，並迫使他們向公眾懺悔。「我們的傳統文化還是比較保守， 一提『性醜聞』，大家馬上覺得這是個壞人。」賈維爾說。<br>性有時還比政治更危險。賈維爾有一本喬治·歐威爾《一九八四》——這本書刻畫了一個處處受到監管的虛擬社會，在伊朗翻譯並出版的波斯文版，刪去了幾處溫斯頓與茱麗葉溫存的性描寫，其他都保留了下來。</p><hr><p>第 80 頁<br>當地朋友說反美標語不只我看到的這些，還有直白樸實些的，比如「我們把美國踩在腳下」等等。但終究沒有我想像中滿街「反美話語的海洋」。十多年前伊朗學者搞過一次民意調查，百分之七十四受訪者願意跟美國談判，百分之六十四支持跟美國復交。結果，組織調查的人被關起來了。<br>伊朗的「性禁忌」常跟「西方文化滲透」聯繫在一起。何梅尼說：「公共場合男女混雜，是外國人的陰謀，用來瓦解穆斯林青年的意志。」「外國」很多時候單指美國。</p><hr><p>第 82 頁<br>賈維爾始終沒找到「百分之三十五的性壓抑」數據的出處。倒是伊朗議會在二〇一四年夏天，發佈一份八十二頁正式調查報告，承認百分之八十伊朗未婚女性有男友，中學生談戀愛都十分普遍。受訪的一萬四千兩百名學生中，百分之十七承認同性取向。本地媒體對這份報告不做討論，我是在英國《經濟學人》雜誌網站上讀到的。</p><hr><p>第 83 頁<br>地鐵隧道又深又廣，戰時也可作防空洞。末代國王時期做了規劃，承包給一家法國公司，可還沒動工，革命就爆發了，於是被迫擱置下來，直到伊斯蘭共和國也生出現代交通的煩惱，國王時代的地鐵設計圖才被翻出來，請中國長春和上海的公司來參與建設。</p><hr><p>第 97 頁<br>什葉派與遜尼派的分歧，概括來說，就是先知穆罕默德歸真之後，誰有資格成為繼任者。什葉派推崇先知的女婿阿里。阿里遇刺，他的兒子胡笙全家也遭主流派伏擊，慘遭滅門。此後什葉派無論從人數還是影響力，一直處於弱勢，演化出一套自己的信仰與智慧，與遜尼派有共識，也有差異。「胡笙的血」、千年的冤屈和復仇，構建了什葉派的情感共同體。薩法維王朝立什葉為國教， 一個原因是為了對抗強大的鄂圖曼帝國，與那裡的遜尼派切割。但立教之初，伊朗國內教法學家不夠，要從敘利亞、黎巴嫩借來，填充清真寺和學校。</p><hr><p>第 117 頁<br>第納爾是目前世界上許多國家的貨幣名稱，但幣值各不相同。此稱呼源自古羅馬帝國的銀幣Denarius。</p><hr><p>第 118 頁<br>一九二〇年，英國人取得對伊拉克的委任統治，預見到統治成本太高，只要了十年委任期（美軍或許早該料到自己的駐紮期限）。英國人臨走前劃定伊拉克、科威特邊境，以各自的椰棗林終點為界。結果當天夜裡，伊拉克、科威特兩邊都開始瘋狂補種椰棗樹。邊界爭議，正是海珊後來入侵科威特的理據。</p><hr><p>第 123 頁<br>伊拉克軍警打算驅散抗議者，不是因為集會內容，而是因為事先沒有申請。伊拉克新憲法賦予公民「集會、抗議的自由」，但必須提前向內政部申請，以便佈置警力，維持秩序。我向薩拉丁求證這件事，他說審批程序不是特別複雜，如今，抗議議員、抗議政府，上街遊行喊口號，理論上並不困難，但有些行動註定不會被批准，比如二〇一一年受到「阿拉伯之春」影響，伊拉克當地遜尼派抗議馬利基政府，還是遭到了軍警拘捕打壓。<br>「跟我說說，言論自由了有什麼好處？」<br>沒想到，這一問薩拉丁竟哀傷起來：「我們說什麼都行，但解決不了問題。」<br>「那沒有行嗎？」<br>「我想只會更糟。重要的是，今天每個伊拉克人看待自己不同了。」</p><hr><p>第 126 頁<br>美軍已經撤走，再不見灰綠色迷彩。十年治後，巴格達地面上看不出明顯的美國痕跡。雖然美式速食在中東非常普遍，但巴格達沒有麥當勞。所有人相信，它開張的第一天會被炸成「ground zero」（核爆點，亦指「九一一 」廢墟） 。一般餐館裡依舊沒有咖啡，只提供「伊拉克茶」，阿拉伯人愛喝的紅茶。<br>但是你也會看到，很多伊拉克人用最新款蘋果手機。由於免稅（或者走私），這裡的售價跟美國本土幾乎一樣。初次見面，我問美聯社攝影師穆罕默德，能不能找張巴格達全圖。「誰還用紙質地圖，用 Google 地圖吧。」他邊說邊在蘋果手機上給我示範，「伊拉克用的全是美國衛星，上美國網站快著呢。」</p><hr><p>第 132 頁<br>在東方，強權仍然受到推崇。而那些憎恨強權的，往往只是憎恨自己沒有成為強權。</p><hr><p>第 134 頁<br>西元8世紀阿拔斯王朝的「外文翻譯局」智慧宮，據說遺址仍在，但參觀要事先向文化部申請，拿著鑰匙開門進去。當時，在阿拉伯人主持下，外族人和新進穆斯林把無數希臘著作翻譯成阿拉伯文，無意中為後來的歐洲文藝復興留存了火種。但是，阿拉伯人對希臘著作的翻譯有選擇，取捨標準是教育性，或者說實用性。所以，他們孜孜不倦地在哲學和科學書籍中尋找真理，卻懶得理會希臘詩歌、戲劇和歷史。最遭忽視的，是地理和政治。有學者認為，就在這裡，伊斯蘭與西方現代文明的分野出現了：亞里斯多德的大部分作品都被翻譯，但巴格達的阿拉伯人禁止引進他的《政治學》。這本書論述了國家的性質，統治者與被統治者的關係。這個概念沒有釐清，導致伊斯蘭至今沒有做到政教分離。<br>一本書的缺失，阻礙了中東民主化進程，這個說法未免誇張。曾經向歐洲輸出文明的伊拉克。如今迎來了美國人的 nightclub，卻還沒有真正的民主。「現代性孕育穩定，但現代化過程卻滋生動亂」，杭廷頓的後半句，恰恰是今日中東、今日伊拉克的現實。</p><hr><p>第 139 頁<br>中國在伊拉克的大型計畫很難招到本地工程師。高級技工集中在巴格達，不願離開家人去外省。而中國工人們，無一不是跋涉兩萬多公里，把家人留在身後。<br>在伊拉克的中國人，幾乎人人背負這樣的故事，無論使館官員，還是建築工人。中國駐伊拉克使館，全館上下衹有大使夫人一名異性。常駐當地的一對中國記者夫婦，辦公室擺著兒子一歲時的全家福，而他現在已經兩歲，由親戚照料。<br>人人都以暫時犧牲換個好一點的將來。為了將來，眼前什麼是可以犧牲的呢——自由？歡樂？親情？愛情？青春？矛盾的是，這些犧牲，往往是為了家庭的共同未來，而放棄的，首先是與家人共處的歡愉。中國人的幸福，似乎不在眼前。<br>外國媒體常常感慨，中國人好像「怪物」，不惜抛家捨命。我向一名在伊拉克工作三年的中國企業領導提起這種評論，他不否認：「我也認為這樣不好，因為是被迫的。但是，過去三十年，中國能夠實現超常發展，必定因為有人付出了代價。」</p><hr><p>第 154 頁<br>跟這裡的中國人交談，發現他們大多喜歡杜拜，而吸引他們留下來的，首先是免稅、物質豐富，其次是不談政治。淑容結合中西醫之長，在這裡已行醫九年。問她在杜拜找到了什麼，答：「自由。她的前半生在希臘和美國度過，這個回答令我疑惑：「美國和希臘沒有自由嗎？」「不一樣，在美國，病人走進我的診所，我都得考慮一下他是民主黨還是共和黨，話別說錯了，而杜拜的政治氣氛太弱了。」在她看來，遠離政治，才是自由。</p><hr><p>第 195 頁<br>艾明大學畢業時打定主意不在政府系統工作，「因為沒有『關係』」。他說，在國家部委或國營企業找份好工作，首先要在複雜的資格考試中獲得高分。但他認識一些「不知道怎麼可能考及格」的同齡人，捧到金飯碗。「『背景』比能力更重要，進去之後也要憑關係上去。」所以他選擇留在民營企業——爸爸工作的醫藥公司。<br>「國家富裕了，但錢都到了執政黨口袋裡。」艾明抱怨正義發展黨的「關係網」把持經濟利益。<br>眼下他打算跟幾個朋友創業，做電信資料服務，儘管這跟他的化工系學位不搭界。土耳其電信被國營資本和大財團壟斷，我小心翼翼問艾明，涉足這個領域是不是得「認識什麼人」？他難為情地笑了：「哈哈，當然。」他的「關係」來自反對黨。我也笑了，人們跟「關係」的關係常常很複雜。</p><hr><p>第 197 頁<br>父親說話平和。他認為每個家庭成員的看法因記憶而不同。六十八歲的外婆經歷過土耳其最動盪的時期，上世紀九〇年代庫德人四處製造恐怖襲擊，二十多年來造成四萬人死亡。七、八〇年代，土耳其左右兩派政黨爭權，街頭每天發生劫掠、燒殺。自凱末爾的政黨一九五〇年輸掉選舉以來，土耳其一直由不同黨派組成的聯合政府經營，分分合合，風波不止，直到正義發展黨拿下議會半數以上席位， 一黨包攬政府，才穩定下來。外婆這般年紀的人，自然珍惜這十來年的好日子。<br>這讓我想起，母親是土耳其人的英國女記者阿勒夫·斯科特（Alev Scott）寫過一個細節：今天伊斯坦堡治安很好，但土耳其人對「亂」的恐懼根深蒂固。她看見房東執意把木製百葉窗換成鋁合金的，忍不住笑出來，「好像夏天裹著棉被」。但是只有經歷過動盪的人，才能理解這份恐懼。<br>父親親歷了一九八〇年政變，確切來說，是軍隊鎮壓學生反政府行動，傳言數萬名大學生慘死，但這在土耳其仍是個禁忌話題，確切數字不詳。所以當艾明走向蓋齊公園，父親就知道政府不會忌憚動武，跟上去保護兒子，卻終究沒有讓女兒去現場。博拉薩到現在都生爸爸的氣。<br>艾明和妹妹打記事起，大部分時間生活在厄多安時代。他們經歷的土耳其，既沒有亂過，也沒有窮過，通過衛星頻道網際網路，他們的生活跟歐洲年輕人零距離。艾明幾個月後要去奧地利，跟我的那位朋友周遊。二〇〇一年的經濟危機只是小插曲，博拉薩說「根本不記得」。她無法感念厄多安的好處，衹討厭他侵犯「個人自由」——比照歐洲各國， 一個政府搞好經濟不是理所應當嗎？「這個老傢伙怎麼不明白，我們是不一樣的人？」如果說厄多安開創了富強的土耳其，他卻認不出富強起來的土耳其人。</p><hr><p>第 199 頁<br>土耳其三十年來的經濟發展，成就了人們對命運的不同選擇。即便是一家人，有的到大城市發展，有的留在農村。整個國家在進步，不同人群的物質差異在縮小，但生活方式和精神世界的差異並沒有消失，當他們見面時，這種差異就更明顯。</p><hr><p>第 206 頁<br>道別艾明一家，我深感不安，外婆可能會反感這個外來者挑起家庭爭論。沒想到，合影的時候，她一隻手暖暖圈住我後腰，歡迎我下次再來。爸爸說，家裡經常爭論，「才是民主」。<br>「看來你家裡，外婆是唯一會投票給厄多安當總統的人了？」我問艾明。他開「爸爸公司的車」送我回酒店。「不見得。」小夥子狡黠一笑。上次地方選舉時，他身在外地不能投票，外婆替他去了投票站，以自己的名義投給反對黨。外婆說，未來不是她的，是外孫的，要聽從他的選擇。</p><hr><p>第 217 頁<br>托克維爾在《舊制度與大革命》中有這麼一句結論：「對一個糟糕的政府來說，最危險的時刻，是它開始了改革。」他認為，路易十六時期的法國實際上比之前更富裕、更開明，可是革命發生的時候，往往不在人民生活越來越壞的年頭，相反，是在人們發現暴政壓力減少、鐵鉗慢慢鬆開的契機——他們開始相信，自己有能力推翻暴政。</p><hr><p>第 260 頁<br>我眼前出現了更大的圖景：沙烏地阿拉伯給塞西政府十倍於美國的援助，拉攏埃及。卡達與沙烏地阿拉伯是對頭，接收與埃及現政權勢不兩立的穆兄會青年。這兩個國家都坐在從天而降的巨大能源財富上，隱隱的不安敦促著它們尋求長久的政治影響力。上一次，阿巴斯和瓦利德相逢在國家內部融合的舞台上，眼下，他們又出現在地區角力的棋盤上。這盤棋上所謂的「外來勢力」，主角不再是西方，而是同為阿拉伯族裔的鄰居們。從這個意義上說，大概有邊界有競爭，「外部勢力」就不會消亡吧。</p><hr><p>第 274 頁<br>革命沒有發生在埃及經濟陷入困難的時候，相反，恰恰是在埃及人經濟條件改善、對自身權利也愈加關注的階段。陳舊的統治結構遭遇新的變化時，如摧枯折腐。<br>二〇一一年二月十一日傍晚，我在拉姆西斯酒店房間傳稿，窗外傳來潮水般的掌聲和歡呼——不像是抗議。打開電視一看：穆巴拉克下台了！我和攝影師趕緊奔出去，立刻被歡慶的隊伍裹挾，我對著鏡頭說話時，竟被旁邊的人拉起手跳舞， 一面埃及國旗覆蓋了鏡頭。我們搭車去穆巴拉克總統府，司機居然不收錢：「為了革命！」他打了個勝利的手勢後，消失在狂歡的夜裡。沒有人到拉姆西斯酒店鬧事。人們主動清理垃圾，維持交通。十天後，在我離開時，沒有聽說任何打砸事件。<br>持續動盪打擊了旅遊、出口、外資幾乎所有行業，二〇一一年以來，埃及經濟發展急劇減緩，與革命爆發的前一年相比，多了一百三十萬失業者，其中近七成是持有高校畢業證的年輕人。各種街頭運動中的死亡人數，超過了二〇一一年的「倒穆」運動。</p><hr><p>第 279 頁<br>卡薩姆的妻子原本默默坐在牆角，這時開始高聲譴責穆兄會禍亂國家，她斬釘截鐵地說：「『一二五』不是真正的民眾革命，『六三〇』才是！」過去三年，兩個日子對埃及人尤為重要：二〇一一年一月二十五日，要求穆巴拉克下台的遊行爆發；二〇一二年六月三十日，軍方出手鎮壓穆斯林兄弟會， 一星期後逮捕了第一位民選總統莫爾西。然而，埃及人對這兩個日子的定義卻迥然不同：前一天，另外一個埃及人告訴我，「六三〇」是假民眾之名的兵變，「一二五」才是「純潔的革命」。不同定義，未必出自對穆兄會的好惡，而是每個人對錯綜局面的不同解讀。</p><hr><p>第 284 頁<br>波蘭歷史學家亞當·米奇尼克（Adana Michnik）說過，革命有兩個階段，第一為了自由，第二為了權力。第一階段煥發出人性最好最純潔的一面，第二階段卻釋放出壞的一面。</p><hr><p>第 291 頁<br>自一七九八年拿破崙在埃及登陸以來，歐美影響像一把利刃，不斷地塑造著中東，打磨出一個現代社會的模樣，但也留下不少硬傷（如殖民者不合理的邊界劃分） 、更不用說揮之不去的心靈創痛至今縈繞阿拉伯人、伊朗人、土耳其人的問題還是， 一種曾經燦爛的文明如何面對強盛的西方？</p><hr><p>第 292 頁<br>幾百年來，各種「主義」試圖為伊斯蘭文明復興找到一條出路。但二〇一一年發生的變革，卻沒有意識形態主宰。它也不像是關於「哪一種制度更適合」的嚴密論證，而是一聲樸素的生活要求：「別人有的，我也要：自由、公正、尊嚴。」</p><hr><p>第 302 頁<br>滿眼領導人畫像這道風景線，利比亞有，突尼西亞、埃及、巴林、敘利亞、葉門……最近如多米諾骨牌一樣發生騷亂的國家都有。畫中領導人或微笑或沉思，只是眼睛都不會平視地上的民眾。目光高於觀看者的角度，令他們顯得深邃，總是知道民眾不知道的事情。只可惜那些密佈的畫像，更像是江湖術士的符咒，關鍵時刻竟然失靈，埃及人只用了十八天，就扳倒了穆巴拉克，貼了三十多年的畫像一夜隨風去。從街道，從教室，從餐廳，從超市，從藥房，他都剛剛離去，「穆巴拉克橋」、「穆巴拉克地鐵站」立時換了名字。<br>二〇〇八年金融海嘯的時候，有人半開玩笑地提出「星巴克理論」——星巴克咖啡館越多的地方，遭受這輪危機衝擊的情況越嚴重。理由是，星巴克分店往往靠近金融街、房産交易中心，而銀行倒閉、房產泡沫正是這次危機的導火線。如此說來二〇一一年刮起的中東變革海嘯，是否也見到了一個「畫像理論」？領導人畫像頻密的地方，局勢註定不穩。因為通街畫像的本質是「少數人統治多數人」的模式，正是此番民間怒潮所指。<br>伊斯蘭教本來不容忍「畫像」、「造像」等一切有形的裝飾。清真寺裡絕對見不到人形圖案。教義認為，真主無形，因此無所不在。<br>但利比亞人向領袖致敬，有一句特別用語：「真主、格達費、利比亞，其他什麼都不是。」把領導人與真主並論，在穆斯林世界非常罕見，更何況「格達費」排名真主之後，國家之前。在一些虔誠的宗教人士眼中，格達費甚至是一個狂妄的異教徒。的黎波里一場足球賽後，離開賽場的人們曾湧上街頭，拍手高歌「格達費不是穆斯林」。滿眼領導人畫像，看似一個又一個神話，其實無關宗教，強調的是凡人在地上的統治。</p><hr><p>第 305 頁<br>比利時攝影師布魯諾告訴同行們，他無意中進入過穆薩新聞團隊辦公室，裡面沒人，辦公桌上攤著格達費畫像，還有寫了一半的遊行標語。同一天下午，新聞部組織記者去市中心廣場採訪示威民眾，布魯諾見過的畫像和標語就出現在那裡。不僅如此，「示威民眾」都是可携式的，可以出現在記者團所到的任何地方。新聞部大巴載著記者去往二百公里外的米蘇拉塔（Misrata）， 一輛小型巴士如影隨形，玻璃窗背後是標語、綠旗，乘客正是多名市中心「民眾」，準備出現在米蘇拉塔。中途休息，記者與他們相逢一笑，荒謬到極點，反成娛樂。</p><hr><p>第 309 頁<br>獨裁政權特徵之一，是給維護統治的「體制內」人員支付高於體制外民眾的收入，以此維繫忠誠。一旦這種好處喪失，就可能瓦解維護獨裁的體系。看似銅牆鐵壁的舊制，放大看來漏洞百出，崩潰起來也是一朝之事。</p><hr><p>第 313 頁<br>利比亞全稱為「大阿拉伯利比亞人民社會主義民眾國」（The Great Socialist People’s Libyan Arab Jamahiriya）。「民眾國」（Al-Jamahiriyyah）是格達費上校憑空造出來的一個阿拉伯詞彙，他認為百分之五十一壓倒百分之四十九的民主選舉最不合理，利比亞只能搞全民主政。根據中國社科院西亞非洲所研究員殷罡的考察，全民主政是這樣實施的：全國數千「人民委員會」構成地方管理機構，牽頭人不是選舉産生，而是「推舉」出來的，「遇有不同意見，不能決定時，要深入討論，直至達成一致」。偏偏湊巧的是，「一致達成的意見」，每次都把重要部門歸於格達費的心腹掌控。<br>二十世紀八〇年代，格達費武力鎮壓班加西起義。一九九六年，阿布·薩利姆監獄抗爭，三小時內一千兩百七十名政治犯被殺。所謂「協商達成一致」，不過是獨裁者「用一批聽話的人民換掉另一批不聽話的人民」而已。<br>「全民主政」的招牌下，組建政黨會以「叛國罪」論處。沒有政治光譜可以安放異議，民眾的訴求只剩下了擁戴或憎惡格達費統治。於是，推翻格達費的革命， 一上來也成了一群民眾壓倒另一群民眾。</p><hr><p>第 322 頁<br>歷史學家認為， 一個國家政治與經濟的運作效率，往往與掌權者在位時間呈反比。體系內若有超越個人的制度，可以減少「時間」的影響，但是如果沒有約束個人或集體長期把持利益的行為，終究會產生負面效應。石油大國利比亞，腐敗指數遠高於非洲鄰國。首都街道坑坑窪窪，統治者無心治理。<br>真正維繫「卡里斯馬」統治的是什麼呢？秘密警察、武裝鎮壓。有數據說，利比亞百分之十至十五的人負責向政府彙報百姓言行——全民噤聲顯而易見，當政府發言人安排記者到某地採訪，幾次有人在我們耳邊飛快扔下一句「格達費不好」後，即刻走遠。對待反對者，格達費絕不手軟，公開處刑或在電視上直播血淋淋的畫面。另一邊，親格達費派別、部落又往往得到莫大的好處，比如利比亞中部格達費家鄉地區，人們感念政府福利周全，口口聲聲喊效忠上校。「卡里斯馬」有兩隻手， 一隻是神一般的感召，另一隻則是魔一般的恐嚇。<br>答案也許稍嫌諷刺。突尼西亞與埃及恰恰因為統治者留下一線公共空間，令怒火有管道表達，而不致走火。穆巴拉克統治時期，民眾有權在可控範圍內和平示威。換句話說，透過非暴力手段表達訴求，埃及人並不陌生。<br>相反，格達費統治下的利比亞，不存在表達公共意見的平台。他對異議者鐵腕鎮壓，反對派銘記的只有「血債血償」。更壞的消息是，世界「理性抗爭」組織統計一九四〇年至二〇〇六年全球暴力及非暴力鬥爭，結果顯示，暴力革命即便成功，五年內達至民主的先例只有百务之五，但百分之四十一的非暴力鬥爭最終過渡到民主政治，而「十年內再爆發內戰的可能」，前者高出一倍。格達費身亡之後，利比亞境內暴力不止，令人擔憂理論成讖。</p><hr><p>第 332 頁<br>《後美國時代》（The Post American World）作者法里德·札卡瑞亞（Fareed Zakaria）、在早年另一本書《自由的未來》（The Future of Freedom）中，首先把這種現象稱作「不自由的民主」（illiberal democracy）。真正的民主是個套餐，不僅有顯而易見的選舉，還得有配套的司法獨立、權力監督、言論自由、集會自由、信仰自由、私產保護等等。這些總稱為「自由」（liberty）的護航措施有比較隱蔽的彈性，不像選舉那樣，「有還是沒有」一望便知。<br>中文裡的「自由」，常讓人想起「無拘無束」，甚至「無法無天」、「隨心所欲」，而札卡瑞亞在這裡講的「自由」恰恰相反，是一套細緻縝密的法律保障。有了這番保障，選票才有價值。可惜的是，札卡瑞亞慨歎，「以選舉為特徵的民主」橫掃全球，「自由」卻還只在西方徘徊。</p><hr><p>第 346 頁<br>飛機降落，全體乘客鼓掌，慶賀平安抵達。這似乎是非常西方的習慣。</p><hr><p>第 349 頁<br>「看，俄羅斯的源頭。」伊萬指了指廣場中心雕像，拍拍心口，「基輔是俄羅斯的母親。」雕像是傳說中建立基輔的四兄妹，名字首字連在一起拼成「基輔」的拉丁寫法。<br>古代俄羅斯人的第一個政治活動中心在基輔。十三世紀蒙古入侵，俄羅斯人棄守基輔一路向北。先是 Vladmimir-na-Klaizarn，然後是莫斯科，十八世紀終於落腳在聖彼得堡。<br>烏克蘭與俄羅斯的歷史，就是歷史學家打架的歷史。在俄羅斯看來，烏克蘭沒有歷史，它是十九世紀德國、奧地利為了削弱俄羅斯搗鼓出來的一個「概念」。可是俄羅斯又把基輔當作自己的「母親」，說自己的祖先是最早在基輔建都的羅斯國王。羅斯統治的地區也叫瓦良格，就是烏克蘭賣給中國那艘航母的名字。</p><hr><p>第 353 頁<br>「你要是有孩子，希望他們在哪裡接受教育呢？」「當然是俄羅斯。我們的考試叫考試，美國那種只能叫測驗，太簡單了……聽我說，俄羅斯有油，中國有錢，我們應該聯合起來，西方就不敢這麼橫了。」<br>「告訴我，到底什麼是俄羅斯的靈魂？」<br>「就是誰也壓不垮我們，誰也不能叫我們屈服。」<br>跟伊萬道別後，我邊往地鐵走，邊試圖梳理他的思路：在烏克蘭長大的半個俄羅斯人，對烏克蘭有感情，但歸根結底又把烏克蘭與俄羅斯看作一個共同體：個體的價值，必須依靠強大的共同體去實現。</p><hr><p>第 354 頁<br>英雄。民主。自由。獨立。解放。祖國。吃飽穿暖以後，細小的詞語滿足不了我們，而這些宏大的，又面目模糊、含義不清。</p><hr><p>第 386 頁<br>邊界初開，東西柏林經歷了巨大的經濟落差。二十年後，西柏林漸漸變為高檔住宅區，東柏林則因為房租低廉，成為整個歐洲年輕藝術家的天堂。東柏林咖啡館的早餐以豐盛和漫長著稱，這裡無人早起，半數人口都是藝術家。藝術家提供不了太多稅收，柏林欠下很多外債，靠借貸發展。柏林圍牆倒下之初，世界為之興奮，跨國企業摩拳擦掌，但是這裡不具備商業城市的氛圍。十五年後，索尼影視中心（Sony Center）黯然出售。西門子盤算了很久，終於也沒有來。</p><hr><p>第 396 頁<br>世界驚訝，但並不反感。希特勒完結，柏林圍牆倒塌，德國人不斷道歉和自省——「整個國家從對『強大』的渴求，轉為正常。沒什麼比正常更美好的了。」毛斯巴赫愉快地笑起來。他有一種舉重若輕的天分，在任何極端的集體情緒中，都要努力回到心裡那個平衡點。</p><hr><p>第 399 頁<br>德國墨卡托智庫（Mercator Institute for China Studies）統計過歐洲人在 Google 上搜索關於「中國」的熱門詞彙：「長城」、「創新」、「統治世界」、「中國菜」、「吃狗肉」等等，各國不一而足。他們也列出中國網民在百度上想知道的歐洲：「雅思」、「屠猶」、「足球」……但有一個詞是中國人對歐洲各國必搜的，出現頻率非常高：「買什麼便宜」。<br>二十年前，柏林圍牆西邊的資本主義，理直氣壯用物質去誘惑東邊的人。而今天，在中國人面前，這種誘惑僅僅是為他們的旅途增添「帝王般的享受」。中國護照仍然處處需要簽證，但中國錢包早已全球通用。那晚，在梅克爾發願吃生蠔的凱賓斯基酒店對面，我見到一個中國人。因為言論無忌，他無法回去。世界在中國遊客面前暢通無礙，但祖國本身，有時正是一道牆。</p><hr><p>第 400 頁<br>在柏林居住另一個十三年後，她給自己的生活做了個總結，創作成《東西相遇》，用漫畫對照德國人與中國人思維舉止細微處的差異。德國人用眼睛旅行，中國人離不開相機。德國人直面問題，中國人繞道而行。德國人安靜小聲，中國人熱熱鬧鬧。</p><hr><p>第 402 頁<br>東西德人本是一家。二戰結束後，德國被蘇聯和西方分而占之， 一九四九年東德、西德分別建國， 一九六一年柏林圍牆豎起。四十年間，兩邊的人變得不再是一個模子裡刻出來的。圍牆倒塌後二十多年，彼此還是立刻能從舉止言談裡辨認出差異。這是何等的驚人和悲哀。</p><hr><p>第 403 頁<br>一名同行激動地拉我去看另一塊展板：<br>（正面寫著：）<br>德意志民主共和國憲法第二條第一段：「德意志民主共和國所有權力由工人行使。」<br>（反面）<br>人民代表在工人階級政黨的領導下，行使工人農民的權力。<br>（正面）<br>德意志民主共和國憲法第二十七條第二段：「保障報紙、電台和電視台的自由。」<br>（反面）<br>如果新聞傷害社會主義意識形態，它的自由就可能被剝奪。<br>正面，是堂皇的說詞。反面，是實際發生的事情。</p><hr><p>第 408 頁<br>三年前，我在瑞士聽說列支敦斯登準備公投，立刻來了興趣：列國雖小，人可是全世界最富裕的居民——查一下世界銀行、聯合國及美國中情局發佈的資料，列支敦斯登人均國內生產總值（GDP per capital）或人均國民收入，幾乎年年進三甲。二○一二年人均國內生產總值世界第一，是那一年中國的二十三倍。我向來以為，揭竿而起是因為活不下去，這群「天堂裡的人民」怎麼也鬧起來了？</p><hr><p>第 409 頁<br>在君主制次第灰飛煙滅的歐洲，列支敦斯登大公百年實權在握，其中一個原因——國是他家買的。四百多年前，列支敦斯登家族買下兩塊直屬德意志神聖羅馬帝國的小莊園，合併為小型公國， 一轉身，地主有了政治身分，頂著大公頭銜翩然坐上帝國議會。今天這個小公國的國名，仍然是列支敦斯登家族姓氏。國民的身分意識，與王室家族不可分割。<br>二戰後公國也曾拮据困頓。後來，在現任大公的父親弗朗茨·約瑟夫二世（Franz Joseph II）治下，通過比瑞士更低的稅賦，更開放的銀行制度，吸引源源資金，再加上製造業沒有鬆懈， 一躍成為首富。</p><hr><p>第 409 頁<br>漢斯·亞當二世的公開形象更接近學者，花白頭髮，西服翩翩，熱衷著書傳播執政理念。列支敦斯登街道上看不見他的畫像，旅遊紀念品上也沒有。從大公的父親開始，列支敦斯登王室就以低調、親民為人稱道。珍妮說，列支敦斯登年輕人出國，最終大多選擇回來，哪裡都不如祖國的福利好。</p><hr><p>第 412 頁<br>P 先生曾提到一個細節，令我驚奇。他反大公否決權的立場眾所周知，但作為議會黨派代表，每週進宮面見大公。<br>「你每星期都見到你反對的人？」<br>「是的，作為黨派代表，我隨時可以打電話到王宮，要求會面，通常第二、第三天就可以見到大公或他的兒子王儲。」<br>電影裡進宮面聖的情形浮現腦海，我試著問：「你得下跪嗎？吻手嗎？」面見列支敦斯登大公，一般禮節性地稱呼「殿下」。P 是大公特權的反對者，拒絕行禮。第一次進宮，他問大公：「我的名字是畢伯·佛里克，請問我該如何稱呼您？」「叫我列支敦斯登先生。」大公答道。從此，會面代表中只有他不用口呼「殿下」。 「父母從小教導，別人如何對待你，取決於你是否允許他們那樣做。如果列支敦斯登大公變成獨裁者，那是人民縱容他那樣做。」</p><hr><p>第 414 頁<br>「世界上無數人會對你們說，這是最富裕的地方，宛如天堂，還有什麼不滿意？廢除了大公的否決權，你們的明天會更好嗎？」<br>賈妮往椅子上靠了靠，緩緩說：「廢除否決權，對我們的日常生活沒什麼影響，早晨起來太陽不會更亮。但重要的是，我們不想有個人坐在那裡『允許』改變發生，人民應該自行決定。大公的權力，是我們脖子上的一根繩索。」</p><hr><p>第 416 頁<br>通常而言，經濟發展到一定程度，人們會要求更加透明、更多參與感的政治體制，列支敦斯登已經沒有「絕對意義上的窮人」，就連收入相對較低的百分之十人群，都獲得國家補貼，有車有房。P 先生說，粗略一分，百分之六十列支敦斯登國民為中產階級，百分之三十高收入者大多從事金融業。但反對大公否決權的人，很難以收入、年齡、性別劃分，「只是一群思想超群的人」。<br>然而，這群人太少了。列支敦斯登屢次公投失敗，展現了一種令人困惑的景象：當經濟達到一定水準時，人們對改變上層建築的要求減弱。又如，另一個國民最富裕的國家卡達，實行的是絕對君主制，超然穩定。新加坡有繁榮無自由，也證明了經濟非政治變革的充分條件，甚至不是必要條件。</p><hr><p>第 416 頁<br>千百年來，奧地利大地上的王朝公國，此起彼伏，盛極一時，奥匈帝國半個世紀的榮光與傳奇似乎從未遠離，往事沉澱在血液裡，封建意識遊蕩在現代國家的呼吸中。今日實行代議制民主制度的奥地利，早就不見了王室，但人際關係中身分等級依然分明，個體不習慣做決定，遇事第一反應必是「問我的長官」。瑞士建築師在列支敦斯登人身上，同樣看到個體精神的缺乏。</p><hr><p>第 426 頁<br>眾院大廳裡，潔西嘉請大家傳閱兩個厚厚的本子。原來每個議員發言的每一句話，都會被記錄下來。這兩本是今年以來的現場紀錄。兩院大廳還安裝了直播攝影鏡頭，記者、公眾都可以同步收看。<br>我讀不懂本子上的筆記，薩賓娜叫我留意其中不同文字。瑞士有四種官方語言：德語、法語、義大利語和羅曼什語（Romansh）。多民族、多語言的國家很多，瑞士的奇特之處在於，不推廣統一語言，也沒有統一語言可推廣。即便在莊嚴的國會，議員們也是操不同方言，筆錄員飛速切換。現場配同聲傳譯，但議員大多精通兩三種語言，不需要翻譯，雞同鴨講，溝通無礙。當他們宣誓成為議員時，誓詞都是用不同語言念出來的。</p><hr><p>第 428 頁<br>國會走廊盡頭是個簡單的辦公室，總統問政處。瑞士總統不是一個人，而是七個人，輪流坐莊，一人當一年總統。七人班子其實是七個部長，各司兩三個部。目前輪值總統是女性，問政處門楣上的「總統」一詞改成陰性。</p><hr><p>第 430 頁<br>另外，「直接民主」的原則並非「簡單多數」，而是以「雙重多數」，避免人們做出愚蠢的選擇（比如戰爭），涉及修憲，除了獲得全民多數，還須取得以各州為單位的「州多數」，這一程序賦予公投結果更多理性。<br>是不是瑞士小國寡民，直接民主才找到合適的土壤？格達費的利比亞人口五百六十萬，少於瑞士的八百萬，也號稱採用直接民主，到頭來卻是獨裁者「溫情脈脈的面紗」。委內瑞拉人的公投，賦予查維斯終身連任權，更像是維護統治的工具。他們的「直接民主」少了瑞士版的兩大基礎：堅定的法律保障、嚴格的程序限定。克里斯·科巴克（Kris W. Kobach）在《公投：瑞士的直接民主》 （The Referendum: Direct Democracy in Switzerland）一書中指出，瑞士以罕見的直接民主，實現了罕見的穩定和富裕，「與其說它是個特例，不如稱之為先鋒」，它的經驗不無可取之處。</p><hr><p>第 431 頁<br>瑞士的存在，證明了另一種可能：人民的理性值得信賴，「大一統」的牢靠來自個體的平等與自由，而不是誰要誰犧牲一些權利。</p><hr><p>第 446 頁<br>平心而論，劇中英國首相不過具備一般政客都會犯的毛病：野心比能力大，私欲比公益重要。成天囈語要是英國救了歐元，自己就該成為歐盟主席。選舉前做的一切，就是為了上位，上位之後，全部目標就是保位。當局面終於搞砸，哭著喊著要找女王請辭。二號秘書終於看破，冷冷道：「首相，其實您的位子保不住，對百姓並不是壞事。」唐寧街大小人物，都被一根看不見的繩索牽制，那就是民意。一切都是為了取悅民意。媒體或理直氣壯，或死纏爛打，也是因為公眾輿論後盾堅強。</p><hr><p>第 449 頁<br>二戰後，殖民地獨立浪潮驚濤掠岸。始於伊莉莎白二世的父親喬治六世，印度、緬甸、斯里蘭卡相繼獨立。伊莉莎白二世初登王位，蘇伊士運河危機爆發，英國棄守埃及，後人多將此視為帝國衰弱的真正信號。一九五七年的馬來西亞，六〇年代的非洲諸國， 一九九四年的南非， 一九九七年的香港。帝國版圖，如沙灘上作畫，終為潮流吞沒，倏忽不見蹤影。</p><hr><p>第 454 頁<br>名義上「率土之濱，莫非王臣」，但英國君主三百年來沒有否定過議會做出的決定。普天之下就算還是王土，我花十英鎊進入的下議院，卻是女王終身不可踏足的禁地。導遊說，如果女王膽敢走過來，下院大門將毫不留情地在她面前狠狠關上。下議院英文是「House of Commons」，「平民或庶民之所」。國王的歸國王，庶民的歸庶民。</p><hr><p>第 456 頁<br>「君子訥於言而敏於行」。「說話」於我們不算頭等大事。但現實是，很多事情沒有說明，沒有解釋，於是連「行」也變得語焉不詳。</p><hr><p>第 462 頁<br>未來全球不穩定因素之一，正是飛速增長的中產階級與落後的管治之間的衝突。<br>但是這種衝突本身，很難單獨帶來徹底、積極的改變。中產階級革命改變不了什麼。他們通常手無寸鐵，跟傳統勢力缺乏聯繫。</p><hr><p>第 464 頁<br>經濟不是催生革命的決定性因素，但是統治者手中如果有經濟這張牌，就可以拖延革命的發生，土耳其、巴林鬧得再凶也無法翻天，列支敦斯登的富裕令大多數人安於現狀。經不起「阿拉伯之春」吹拂的，往往是推行經濟改革的共和體制，而躺在石油上的君主制國家，最多是吹縐春水，卻興不起浪潮。中國向委内瑞拉提供的數百億美金貸款，客觀上令查維斯和他的繼承者兩手不空。</p><hr><p>第 470 頁<br>中國人好論成敗，然而成敗最經不起時間考驗。歷史不在意歡呼或鞭撻，它多稜鏡般的顏色、謎一般的命運，期待注視與思考。阿拉伯社會變革始於二〇一〇年末，展示了無窮側面：中產革命缺乏組織，「窮人政黨」與中産對立，選票被曲解為民主政治唯一手段，舊勢力在新變局中的影響，民主轉型中的威權懷舊，威權手段在新變局中的笨拙，先進生產力第一次不為統治者壟斷，民主大門該不該向地下組織敞開，革命神聖感與神聖感的消散，法治缺失民主無以維繫，國際干預的法律模糊地帶……變革中有太多值得探討的話題，值得汲取的教訓。簡單歸於成敗，不知是因為禁忌重重，還是思維惰性？我們關上電視，看完微博上的互罵之後洗洗睡去，很少心平氣和地探尋得失原委。</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/view/subject/l/public/s29166267.jpg" alt="《拜訪革命》"><br><a href="https://book.douban.com/subject/26919483/" target="_blank" rel="noopener">《拜訪革命》</a><br>副标题: 從加德滿都、德黑蘭到倫敦，全球民主浪潮的見證<br>作者: 周軼君<br>出版社: 八旗文化<br>ISBN: 9789869384421</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第 11 頁&lt;br&gt;似曾相識的開端，踏出截然不同的路徑，兩厢對照，變革的命運更加清晰。對當權者而言，如果開放可以延續權力，他便鬆手，如果鐵腕能夠穩固執政，他便握拳。然覆手雲雨之間，時機、地理、民意、外力，多少偶然互相撞擊，革命的軌道像雲霄飛車一樣不知道下一秒的起落。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第 12 頁&lt;br&gt;許多美國人不關心世界，連護照都沒有，但這並不妨礙美國成為頭號自由之邦。但是否正因如此，以強烈排外為面貌的右翼風潮，近些年在美國、在歐洲急速抬頭？外交政策的制訂雖是精英之事，若大眾與精英之間嚴重脫節，英國脫歐、川普上台之類的事情就會一再震驚世界。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://acuario.xyz/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://acuario.xyz/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用SCP命令转移Linux文件</title>
    <link href="https://acuario.xyz/how-to-use-scp-cmd-to-transfer-linux-file/"/>
    <id>https://acuario.xyz/how-to-use-scp-cmd-to-transfer-linux-file/</id>
    <published>2018-05-30T12:51:46.000Z</published>
    <updated>2018-05-30T13:00:28.994Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>出于更换 VPS 的目的，不得不对文件进行转移。最原始的办法可能是从 <code>A</code> 服务器拷贝一份到<code>本机</code>，然后再重新上传到 <code>B</code> 服务器。这样做既繁琐又费时。不如使用 Linux 的 <code>scp</code> 命令进行快速转移来的方便。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>scp</code>（secure copy），可以用于在 Linux 下进行远程文件拷贝。类似于 <code>cp</code> 命令，<code>scp</code> 是应用于多设备间的传输拷贝，而前者是 Linux 本地命令。另外，<code>scp</code> 为 SSH 加密传输，安全性有保障——也因此，连接的端口为远端服务器的 SSH 服务端口（SSH 一般默认端口为 22）。</p><a id="more"></a><h1 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h1><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">scp -参数 <span class="comment">[<span class="comment">[user@]</span>host1:]</span>file1 ... <span class="comment">[<span class="comment">[user@]</span>host2:]</span>file2</span><br></pre></td></tr></table></figure><h1 id="常用命令参数"><a href="#常用命令参数" class="headerlink" title="常用命令参数"></a>常用命令参数</h1><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-P</td><td>SSH 端口，缺省值为 22</td></tr><tr><td>-i</td><td>SSH 密钥登录，后面一个参数为私钥地址</td></tr><tr><td>-l</td><td>带宽限制，单位 Kbps</td></tr><tr><td>-r</td><td>递归复制整个目录</td></tr><tr><td>-C</td><td>允许压缩</td></tr></tbody></table><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>以下命令假设已登录<strong>本地机器</strong>为 <code>A</code>(IP: 192.168.1.1)，<strong>远端机器</strong>为 <code>B</code>(IP: 192.168.2.1)<br>根据 SSH 登录方式和 SSH 端口的不同，拷贝命令分为以下两种：</p><ol><li><p>远端 <code>B</code> 为密码登录， SSH 为默认端口 22<br><code>A:/abc/</code> &gt;&gt;&gt;上传&gt;&gt;&gt; <code>B:/root</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -r /abc root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/root</span></span><br></pre></td></tr></table></figure><p><code>A:/root</code> &lt;&lt;&lt;下载&lt;&lt;&lt; <code>B:/abc/</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -r root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/abc</span> /root</span><br></pre></td></tr></table></figure></li><li><p>远端 <code>B</code> 为密钥（密钥文件为 <code>.ssh/id_rsa</code>）登录， SSH 端口为 2222<br><code>A:/abc/</code> &gt;&gt;&gt;上传&gt;&gt;&gt; <code>B:/root</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -P <span class="number">2222</span> -i .ssh/id_rsa -r /abc root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/root</span></span><br></pre></td></tr></table></figure><p><code>A:/root</code> &lt;&lt;&lt;下载&lt;&lt;&lt; <code>B:/abc/</code> ：</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">scp -P <span class="number">2222</span> -i .ssh/id_rsa -r root<span class="variable">@192</span>.<span class="number">168.2</span>.<span class="number">1</span><span class="symbol">:/abc</span> /root</span><br></pre></td></tr></table></figure><p>p.s. 使用密钥进行 <code>scp</code> 时，需保证密钥文件 <code>.ssh/id_rsa</code> 对应的公钥 <code>.ssh/id_rsa.pub</code> 内容已经写入到 <code>B</code> 的 <code>/root/.sshauthorized_keys</code> 文件中，否则无法正常使用密钥登录。具体原因与 SSH 密钥登录一致。</p></li></ol><hr><p>参考链接：<br><a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html" target="_blank" rel="noopener">scp 跨机远程拷贝</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;出于更换 VPS 的目的，不得不对文件进行转移。最原始的办法可能是从 &lt;code&gt;A&lt;/code&gt; 服务器拷贝一份到&lt;code&gt;本机&lt;/code&gt;，然后再重新上传到 &lt;code&gt;B&lt;/code&gt; 服务器。这样做既繁琐又费时。不如使用 Linux 的 &lt;code&gt;scp&lt;/code&gt; 命令进行快速转移来的方便。&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;code&gt;scp&lt;/code&gt;（secure copy），可以用于在 Linux 下进行远程文件拷贝。类似于 &lt;code&gt;cp&lt;/code&gt; 命令，&lt;code&gt;scp&lt;/code&gt; 是应用于多设备间的传输拷贝，而前者是 Linux 本地命令。另外，&lt;code&gt;scp&lt;/code&gt; 为 SSH 加密传输，安全性有保障——也因此，连接的端口为远端服务器的 SSH 服务端口（SSH 一般默认端口为 22）。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/Linux/"/>
    
    
      <category term="教程" scheme="https://acuario.xyz/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/tags/Linux/"/>
    
      <category term="运维" scheme="https://acuario.xyz/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="VPS" scheme="https://acuario.xyz/tags/VPS/"/>
    
      <category term="命令行" scheme="https://acuario.xyz/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>《以你的名字呼唤我》读书笔记</title>
    <link href="https://acuario.xyz/call-me-by-your-name-clip/"/>
    <id>https://acuario.xyz/call-me-by-your-name-clip/</id>
    <published>2018-05-27T09:03:15.000Z</published>
    <updated>2018-05-30T13:02:15.738Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/05/27/5b0a77b895b93.png" alt="Call Me by Your Name"></p><h1 id="以你的名字呼唤我"><a href="#以你的名字呼唤我" class="headerlink" title="以你的名字呼唤我"></a>以你的名字呼唤我</h1><blockquote><p>三四十年后，我将回到这里，回想起我永志不忘的这段对话，也有可能有一天我会想忘掉。我将与我的妻儿来到这儿，叫他们看这片风景，指着海湾、咖啡馆、“跃动舞厅”、“大饭店”，站在这里让那些雕像、草背椅和摇摇欲坠的木桌帮我回忆起曾有那么一个人名叫奥利弗。</p></blockquote><a id="more"></a><p>不得不说，在我看完《Call Me By You Name》的电影之后，我感到一丝丝遗憾和失落。不仅仅因为 Elio 和 Oliver 间那一段没有结果的感情，更因为影片无力于表达 Elio 丰富细腻的情感与心境。</p><p>我知道我知道，安德列 · 艾席蒙（即原著作者）作为编剧参与了电影的改编，但是电影镜头的表达依旧失去了 Elio 最令我着迷的内心戏。如果我没有看过原著，那么我对这部电影的评价一定是平庸而肤浅的，对此我深信不疑——因为 Elio 和 Oliver 的感情是如此波澜不惊，他们之间发生的一点一滴，不过是某人和某人的日常罢：</p><blockquote><p>-大家都在这里做些什么？<br>-不做什么。等夏天结束。<br>-那么，冬天做什么？<br>-先别告诉我：是等夏天来，对不对？ </p></blockquote><p>无论答案是什么，Oliver 其实都已看到 Elio 的内心，因为这之后的几个星期生发的情愫，会让 Elio 在这之后的多少个夏天想起这个夏天，想起曾属于自己并一直属于自己的卧室，想起被共享的属于自己的秘密基地，想起<a href="https://weibo.com/ttarticle/p/show?id=2309404158040470334211" target="_blank" rel="noopener">圣格来孟症候群</a>，想起红色、黄色、蓝色和绿色，想起植物王国的桃子，想起那个以自己名字呼唤的人。</p><blockquote><p>这话听起来有点像我几星期前第一次听到的 <strong><em>Later</em></strong>——尖锐、直率，阴郁沉闷，语调平板，没有一点我们刚刚共享的喜悦或热情。</p></blockquote><p>不可否认的是，害怕听到那句 <em>Later</em>  的不仅仅是观影者，更是 Elio 自己。因为这是来自 Oliver 的咒语和审判词——对二者间不可继续的对话不加注解地画上句点，对二者间不可继续的感情写下的休止符。无论 Elio 对李斯特的风格多么谙熟于心，无论 Elio 如何熟稔地用巴赫的风格去改写这首恋爱的变奏曲，最终获得的也仅是这满心期待的诗歌和乐章的未完成稿。</p><p>但，这已足够为内心的悸动做深刻的证明，足够为以名字呼唤的意乱情迷写下序章，足够向他展示自己的蛛丝马迹：</p><blockquote><p>我完全没想到要带他到这儿来。不只是为了向他展示我的小世界，也是为了请求我的小世界接受他，让我这个夏日午后独处的小基地也能认识他，评断他，看他适不适合这里，接纳他，以便我能回到这里来缅怀。我到这儿来逃离已知的世界，寻找我自己虚构的另一个世界。我向他引介我的起点。只要列出我在这儿读过的作品，他就知道我游历的蛛丝马迹。</p></blockquote><hr><h1 id="如果这都不算表白"><a href="#如果这都不算表白" class="headerlink" title="如果这都不算表白"></a>如果这都不算表白</h1><blockquote><p>「有什么是你不知道的？」<br>我看着他。机会来了。把握、或失去这个机会，但无论如何，我知道我永远无法摆脱这种耻辱；或者洋洋得意接受他的恭维，却对其他一切感到后悔。这或许是我这辈子第一次在毫无准备的状况下对成年人说话。我太紧张，以致无法做任何准备。<br>「我什么都不知道，奥利佛。不知道，什么都不知道。」<br>「你比这儿任何人知道的都多。」<br>为什么他要用乏味的信心喊话回应我近乎悲惨的语调？<br>「但愿你知道，我对眞正重要的事有多么无知。」<br>我拔足涉水，想办法既不溺水、也不安全游过，只是留在当场，因为这里就是眞相所在的位置——尽管我无法吐实，甚至给予暗示，但我发誓眞相就在我们身边，就像我们聊起刚刚游泳时搞丢的项链那样：我知道项链就在水里。但愿他知道，但愿他知道我给他每个机会，将二和二加在一起，然后得出比无限还大的数字<br>如果他明了，他必定早已起疑：如果他起疑，他必定曾经处于相同的立场，从平行小路的另一头，以冰冷、带着敌意、玻璃眼般犀利且无所不知的眼光观察我。<br>他必定想到什么——天晓得是什么。或许他不想露出太惊讶的神色。<br>「什么重要的事？」<br>他不老实吗？<br>「你明明知道。到了这节骨眼，就属<strong>你</strong>最该知道。」<br>沉默。<br>「你为什么要告诉我这一切？」<br>「因为我认为你该知道。」<br>「因为你认为我该知道。」他慢慢复述我的话，试着了解这几个字的完整意义，理出头绪，借着重复这句话拖延时间。我知道，铁烧得正灼热。<br>我脱口而出：「因为我希望你知道。因为除了你之外，我没有别人可说。」<br>就这样，我说出来了。<br>我说的够清楚吗？<br>我正要岔开话题，讲点海或明天的天气，聊聊父亲每年此时总是承诺要驾船去 E 城，眞不知是否可行。<br>但是多亏他，他不肯放过我。<br>「你知道你说了什么吗？」<br>这次我望着海，用含混疲倦的声调说。这是我最后的迂回、最后的掩蔽、最后的逃脱。 「知道，我知道我说什么，你<strong>一点</strong>也没误会。我只是不太擅长说话。不过你大可不再跟我说话。」<br>「等等。我没有误解你的话吗？」<br>「<strong>没有</strong>。」既然秘密已经脱口，我大可摆出从容不迫、略为恼怒的态度，就像屈服于警方的重罪犯，向一个个警察，一而再、再而三坦承自己如何抢劫店家。<br>「在这里等我，我得上楼去拿些文件。别走开。」<br>我用信任的微笑看着他「你很清楚我不会走开。」<br>如果这不算再次表白，那什么才算？</p></blockquote><hr><h1 id="我不羡慕痛苦本身，但我羡慕你会痛"><a href="#我不羡慕痛苦本身，但我羡慕你会痛" class="headerlink" title="我不羡慕痛苦本身，但我羡慕你会痛"></a>我不羡慕痛苦本身，但我羡慕你会痛</h1><p>令我遗憾的，还有那一幕 Elio 的 ASMR，电影的草草带过多半误导了太多的观众，让人以为这是因为 Elio 在一遍遍回想自己与 Oliver 释放荷尔蒙的欢愉。但恰恰相反，这正是现实上演的一出喜剧：</p><blockquote><p>或许是我的脚迷了路碰到他的。它撤退，不是马上，却也够快了，仿佛刻意留一段恰切的等待空当，好避免留下惊慌退缩的印象。我也多等了几秒，从没细想，只是让自己的脚开始搜寻另一只脚。才开始找，脚趾就碰到了他的脚；他的脚几乎动也不动，像一艘海盗船，尽管制造各种假象表示自己已经逃到数里之外，实际上却隐藏在距离仅五十码的浓雾中，一等机会出现就要突袭。我的脚还来不及采取任何行动，毫无预警，没给我任何时间接近他的脚或再度退回到安全距离之外休息，他突然温柔轻缓地伸脚压在我的脚上，开始爱抚摩擦，没有停歇。光滑圆润的脚踵顶着我的脚背，偶尔重重压上来，旋即放轻，以脚趾一阵爱抚，从头到尾暗示这是抱着好玩和游戏的心情做的。他以这种方式来冷落坐在我们对面从事“正餐苦差”那些人，也告诉我这件事与其他人无关，彻底仅限于我们之间，这是我们的事。但我不该做多余的解读，他鬼祟、顽强的爱抚让我背脊发凉，令我头昏目眩。不，我不会哭，这不是恐慌发作，这不是“意乱情迷”，我也不打算穿着短裤达到高潮，虽然我非常、非常喜欢，尤其他以足弓叠在我脚上的时刻。我盯着面前的沙拉盘，看见点缀着果汁的巧克力蛋糕上似乎有人倒人了比平常多的番茄酱汁，而且愈来愈多，那酱汁似乎来自我头上的天花板，直到我醒悟那是从我的鼻子大量涌出的。我倒吸一口气，立刻捏起餐巾往鼻子上捂，尽可能把头往后仰。“冰块，玛法尔达，拜托，快！”我轻轻说，表现出一切都在掌握中的样子。我向客人道歉：“今天早上我去了山上。常有的事。”</p></blockquote><p>我们和 Elio 一样，无法知道其父的生命经历，但我们也许可以获得启迪：</p><blockquote><p>我们的心、灵和身体是绝无仅有的。许多人活得好像自己有两个人生可活，一个是模型，另一个是成品，甚至有介于两者之间的各种版本。但我们的心和身体只被给予这一次，而在你终于领悟之前，你的心会疲惫，至于你的身体，总有一天没有人要再看它，更没有人愿意接近。现在的我觉得很遗憾。<strong>我不羡慕痛苦本身。但我羡慕你会痛。你可能感到难过，痛苦。别让它消失，更别说那些有过的快乐</strong>。</p></blockquote><div class="aplayer" data-id="516358164" data-server="netease" data-type="song" data-mode="single" data-autoplay="true"></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/05/27/5b0a77b895b93.png&quot; alt=&quot;Call Me by Your Name&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;以你的名字呼唤我&quot;&gt;&lt;a href=&quot;#以你的名字呼唤我&quot; class=&quot;headerlink&quot; title=&quot;以你的名字呼唤我&quot;&gt;&lt;/a&gt;以你的名字呼唤我&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;三四十年后，我将回到这里，回想起我永志不忘的这段对话，也有可能有一天我会想忘掉。我将与我的妻儿来到这儿，叫他们看这片风景，指着海湾、咖啡馆、“跃动舞厅”、“大饭店”，站在这里让那些雕像、草背椅和摇摇欲坠的木桌帮我回忆起曾有那么一个人名叫奥利弗。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://acuario.xyz/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://acuario.xyz/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置反向代理隐藏服务端口</title>
    <link href="https://acuario.xyz/how-to-use-reverse-proxy-to-hide-server-port/"/>
    <id>https://acuario.xyz/how-to-use-reverse-proxy-to-hide-server-port/</id>
    <published>2018-05-17T15:16:42.000Z</published>
    <updated>2018-05-17T15:23:21.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>对于个人开发者来说，在一台 Linux 服务器或自己的 VPS 上，通常会部署多个 Web 服务，有的服务默认监听的是 80/443 端口，只需对 Nginx 进行简单的配置、设置伪静态等等即可完成，而有的服务既非静态网页，也不使用 Linux 中既有的 PHP 等程序，而是使用自己项目内部构建的程序（比如 Node.js、Tomcat 等），这些服务往往监听的是非 80/443 端口，在配置个人域名后，不得不在域名后加上服务器端口才能访问，既不美观，也不方便。是否有办法可以隐藏 URL 中的服务器端口，使用域名进行区分？</p><p>例如：<br><a href="http://1.1.1.1:1111" target="_blank" rel="noopener">http://1.1.1.1:1111</a> -&gt; <a href="http://1.example.com" target="_blank" rel="noopener">http://1.example.com</a><br><a href="http://1.1.1.1:2222" target="_blank" rel="noopener">http://1.1.1.1:2222</a> -&gt; <a href="http://2.example.com" target="_blank" rel="noopener">http://2.example.com</a><br><a href="http://example.com:3333" target="_blank" rel="noopener">http://example.com:3333</a> -&gt; <a href="http://3.example.com" target="_blank" rel="noopener">http://3.example.com</a></p><a id="more"></a><h1 id="代理服务器的类型"><a href="#代理服务器的类型" class="headerlink" title="代理服务器的类型"></a>代理服务器的类型</h1><p>与代理服务器相关的概念，主要有正向代理、反向代理、透明代理。这三者的关系在<a href="http://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">这篇文章</a>里介绍的很清楚，在此言简意赅地做举例梳理：<br>假设有<code>客户端 A</code>、<code>代理服务器 B</code>、<code>Web 服务器 C</code>：</p><ul><li><p><strong>正向代理</strong>：<code>客户端 A</code> 向 <code>代理服务器 B</code> 发送一个请求并指定 <code>Web 服务器 C</code> 为目标，<code>代理服务器 B</code> 转交请求并将获得的内容返回给 <code>客户端 A</code>。主要实践是突破网络封锁的各类工具。</p></li><li><p><strong><a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" target="_blank" rel="noopener">反向代理</a></strong>：<code>客户端 A</code> 类似于 Web 服务器，发出的内容和请求将由 <code>代理服务器 B</code> 进行判断分发，<code>客户端 A</code> 不知道 <code>代理服务器 B</code> 的存在。主要实践是 WEB 服务。</p></li><li><p><strong>透明代理</strong>：<code>客户端 A</code> 不知道 <code>代理服务器 B</code> 的存在，在访问 <code>服务器 C</code> 时，由 <code>代理服务器 B</code> 代为访问，但 <code>代理服务器 B</code> 对报文进行改写和过滤。主要实践是公司内部的网络管理系统（如深某服）。</p></li></ul><h1 id="反向代理的意义"><a href="#反向代理的意义" class="headerlink" title="反向代理的意义"></a>反向代理的意义</h1><ol><li>如前言所述，把不同的子域名转发到同一机器的不同的服务上。</li><li>进一步地，把不同的请求转发到不同的服务器上——即负载均衡。</li><li>隐藏实际服务，提升安全性</li></ol><h1 id="配置-Nginx-反向代理"><a href="#配置-Nginx-反向代理" class="headerlink" title="配置 Nginx 反向代理"></a>配置 Nginx 反向代理</h1><p>实际上对前沿所述的情况，针对某个服务进行 Nginx 反向代理配置很简单，下面是监听域名 example.com 并转发到 8080 端口的例子：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>   <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  example.com;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在<a href="https://www.jianshu.com/p/2e0fe505766b" target="_blank" rel="noopener">另外一篇文章</a>中，我看到了如下示例：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">upstream</span> webServer01 &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3001</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> webServer02 &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:3002</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.myApp01.com;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/test.log;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span>       http://webServer01;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.myApp02.com;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/test.log;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span>       http://webServer02;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这一配置也能实现以 <code>www.myApp01.com</code> 访问时，将进入<code>webServer01</code>，当我们以 <code>www.myApp02.com</code> 访问时，将进入<code>webServer02</code>。其中已经用到的 <code>upstream</code> 模块就是用来配置负载均衡的。关于负载均衡的详细资料，可以参考<a href="http://tengine.taobao.org/book/chapter_05.html" target="_blank" rel="noopener">Nginx 开发从入门到精通</a></p><h1 id="宝塔面板配置"><a href="#宝塔面板配置" class="headerlink" title="宝塔面板配置"></a>宝塔面板配置</h1><p>如果使用了<a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔面板</a>进行建站，可以在面板菜单【网站】中对特定网站进行设置，转发 1200 端口的例子如下图：</p><p><img src="https://i.loli.net/2018/05/17/5afd9bba06413.png" alt="宝塔面板配置网站反向代理"></p><hr><p>参考链接：<br><a href="http://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">图解正向代理、反向代理、透明代理</a><br><a href="https://www.jianshu.com/p/2e0fe505766b" target="_blank" rel="noopener">Nginx 反向代理的一次使用总结</a><br><a href="http://tengine.taobao.org/book/chapter_05.html" target="_blank" rel="noopener">Nginx 开发从入门到精通</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;对于个人开发者来说，在一台 Linux 服务器或自己的 VPS 上，通常会部署多个 Web 服务，有的服务默认监听的是 80/443 端口，只需对 Nginx 进行简单的配置、设置伪静态等等即可完成，而有的服务既非静态网页，也不使用 Linux 中既有的 PHP 等程序，而是使用自己项目内部构建的程序（比如 Node.js、Tomcat 等），这些服务往往监听的是非 80/443 端口，在配置个人域名后，不得不在域名后加上服务器端口才能访问，既不美观，也不方便。是否有办法可以隐藏 URL 中的服务器端口，使用域名进行区分？&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;a href=&quot;http://1.1.1.1:1111&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://1.1.1.1:1111&lt;/a&gt; -&amp;gt; &lt;a href=&quot;http://1.example.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://1.example.com&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://1.1.1.1:2222&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://1.1.1.1:2222&lt;/a&gt; -&amp;gt; &lt;a href=&quot;http://2.example.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://2.example.com&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://example.com:3333&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://example.com:3333&lt;/a&gt; -&amp;gt; &lt;a href=&quot;http://3.example.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://3.example.com&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://acuario.xyz/categories/%E6%95%99%E7%A8%8B/Linux/"/>
    
    
      <category term="运维" scheme="https://acuario.xyz/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Nginx" scheme="https://acuario.xyz/tags/Nginx/"/>
    
      <category term="Web" scheme="https://acuario.xyz/tags/Web/"/>
    
      <category term="反向代理" scheme="https://acuario.xyz/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>《回锅肉和香菇菜心的语言等级》读书笔记</title>
    <link href="https://acuario.xyz/language-level-of-pork-mushrooms-and-cabbage-clip/"/>
    <id>https://acuario.xyz/language-level-of-pork-mushrooms-and-cabbage-clip/</id>
    <published>2018-05-04T09:36:07.000Z</published>
    <updated>2018-05-04T09:41:31.271Z</updated>
    
    <content type="html"><![CDATA[<p>第 4 页<br>以北京的地名来论，老北京口中，以前北京内城的九大门：正阳门、崇文门、宣武门、东直门、朝阳门、西直门、阜成门、德胜门、安定门和皇宫里的天安门、午门、前门，都是不能加“儿”的，一来这些门体量颇大，高耸巍峨；二来，它们还常常跟皇权神权紧密相关，是高高在上万民敬仰的所在，断没有皇上说：“来呀——把这乱臣贼子拖出午门儿斩首！”那也太不严肃了。相反，东便门、西便门则常常在口语里听到儿化。这就是隐藏在语言背后的文化秩序。如今北京城的大门拆得所剩无几，外地人又如何分得出哪门大哪门小？也就越说越乱了，不讨再乱地没人说天安门儿。</p><hr><p>第 6 页<br>中国人对于数字的概念，从个、十、百、千数到万跟亿，最多到兆，再往上一般人不大知道还有京、垓、秭、穰、沟、涧、正、载、极……那么大，生活中也的确用不上。但无论怎么大，递进规律是一样的，早在东汉，《数述记遗》一书中就有记载，万万为亿、万亿为兆、万兆为京……所以按照中文的计数方式，若是四位一隔，立时眉目清楚。</p><a id="more"></a><hr><p>第 11 页<br>在广州，番字两读，“几番痴心”读同“翻”，在地名番禺里却要读作“潘”。一般人觉得这就是个多音字，而语言学家从类似线索里，则发现了语言演变的规律。这就是清代大学问家钱大昕总结出的“古无轻唇音”。这条关于汉语声母演变的重要规律，说通俗点，就是上古汉语里，只有双唇触碰在一起发音的b、p、m；没有把牙齿放在下唇上发音的 f。唇齿音 f 是唐宋以后才慢慢发展演变出来的。只是后来社会在变，语言也在变，一部分双唇音分化出了唇齿音，“番”字就在变化之列，改朝换代时节，日常口语“三番两次”随波逐流，牙齿轻巧地往前探，声母成了 f。至于“番茄”、“番薯”、“番枧”，都是明清以后才从海外传入中华的东西，那时大势已定，自然也读如“翻”。但地名因为跟特定的山川、河流、区域相对应，在本地是经常挂在嘴边的，为了交际的方便，读音字形需要相对稳定，以免造成误解含混。作为在战国时候就出现了的地名“番禺”，于是成了思想保守、行动迟缓的遗老遗少，顽固地双唇一抿，保留了两千年前的古音。<br>上海开埠晚，很多马路的命名来自别处的地名。就拿番禺路来说，一公里多长，北起延安西路，南至虹桥路，早年初建时以美国城市命名为哥伦比亚路，1943 年改名番禺路，沿用至今。不少民国政要，比如胡汉民、叶公超、古应芬、叶恭绰都是广东番禺人，就算当初改名没有攀附权贵的意思，至少也沾民国望人的光。早年大家比较了解番禺二字的由来，也颇知道正音如何读。前几年还有老人家写信到报社提意见，投诉上海的 72 路公共汽车电子报站读了别字，把番禺路读成了“翻禺路”。风流云转世事变迁，在如今上海人的知识谱系里，番禺二字就只是延安西路附近的一条马路而已，甚至不知它是广州下辖的一个区，自然将番禺之番，等同于番茄之番。我接触到的上海本地人或者上海新移民，十有八九根本觉得说 fan 禺路天经地义。</p><hr><p>第 16 页<br>台湾国语会编订过《国音标准汇编》，作为推行标准国语的根据。1946 年起，“老北京”齐铁恨先生每天早晨七点，准时在电台担任“国语读音示范”，播讲当时的各种国语读本，匡正语音。说齐老先生“一言九鼎”也不为过，当时几乎全台湾的国语教师都是就着广播现听现学现卖的，这位国语运动老专家的“京片子”于是就成了台湾国语的活标准，他嘴里的连词“和”读“汗”也就深入人心街知巷闻。齐铁恨是老舍的好友，当年老舍写成名作《骆驼祥子》之前，曾经写信给他打听过骆驼的生活习性，因为齐是北京香山人，山下有许多人家养骆驼。九十年代老舍的儿子舒乙访问台湾，除了觉得“乡音灌耳”，也很好奇台湾人把连词“和”念成“汗”。当时台湾作家何欣解释说：“这是齐铁恨先生在电台上教的，他的话就是法律，怎么教就怎么说了。”舒乙大笑，说：“齐先生使劲使过分了。”舒乙有此一说，大抵因为在北京土语里，连词“和”读 han 原本是轻声，齐老先生上电台郑重其事字正腔圆，一来二去，读得重变成了四声的“汗”。以至于 1949 年以后台湾出的几本正音字典，都标成了 han。这可让纯正北京口音的舒乙，微微觉得，有点汗。</p><hr><p>第 23 页<br>事实上，粤语跟普通话，或者粤语跟闽语之间的语言距离，甚至是大过欧洲同一语系之下的两种语言的。比如一个西班牙人和一个葡萄牙人，可以自说自话，但这几乎不妨碍他俩聊天儿。而一个只懂粤语的人和一个只懂闽语的人，却完全是鸡同鸭讲。这也是为什么大多数西方语言学家坚持认为，汉语不是一种单一的语言，而是一组有亲属关系的语言（包括了粤语、闽语、吴语、赣语、湘语、客家话和北方官话）组成的庞大语族。不借助民族共同语“普通话”，大部分的汉语方言都无法互通。但事情的另一面是，可以聊天儿的西班牙人和葡萄牙人，看不懂彼此的报纸，完全听不懂对方说什么的广东人和福建人，却可以笔谈。这也是国内的语言学家坚持粤、闽、吴、赣语等等是汉语方言的重要原因。神奇的汉字，打通古今连接南北，这一点，又是使用拼音文字的欧洲人很难理解的。</p><hr><p>第 24 页<br>一直以来坊间流传着一种说法，认为 Mandarin 源于中文的“满大人”。说是以前外国人把满清官员叫作“满大人”，随之他们说的话也就成了 Mandarin，听上去似乎挺靠谱儿的。清末积贫积弱，洋人一攻进来，满大人纷纷丢盔弃甲，加上割地赔款的不堪往事，很多人也就嫌弃了这个词，不愿意它代表咱音韵铿锵的普通话。事实上，这还真是冤枉了 Mandarin。<br>据利玛窦考证说，这个词最早来源于梵文，意思是会思考的人。后来从梵文发展到印地文，流传到马来文中，又进入了葡萄牙文成为 Mandarin。不管这么曲折的路线是不是十分可靠，但从明朝起西方人便称呼中国官员甚至亚洲国家官员为 Mandarin 了，那个时候还完全没有“满大人”呢。<br>明朝及清朝中叶之前中国的官方标准语一直是南京话。清初名义上的国语是满语，怎奈汉文化力量强大，进了北京城的八旗子弟都渐渐改了口音，谁也敌不过这时代潮流。于是，雍正八年清政府设置了正音馆，推广以北京音为标准的官话——官员在庙堂上说的话，这就是今天普通话的前身。当年开科取士，写八股文倒是没什么，大家读的都是“四书五经”，用的都是汉字，但一开口，没有官话，皇上如何听得懂福建老臣说话？即便不做京官，清代规定地方上从督抚直至州县一级的各路官员，都不能在自己家乡所属的省、府、州、县内担任要职。跨省做官，也没见过县太爷升堂时还带个师爷翻详的。<br>也就是在雍正年间，英国人开始把朝廷推行的“官话”翻译成了 Mandarin。同一词根，英语里还有 mandate（政府权力、命令）、mandary（官方的、行政的）等等。用 Mandarin 正是取其“行政推广的语言”之意。这个词有三百多年的历史了，也正是它在英文世界接受程府比较高的原因。</p><hr><p>第 34 页<br>不过，在美国，虽然有 94% 的美国人说英语，却只有 31 个州将英语确立为官方语言，不久前还有国会议员提出议案，要求美国政府所有的官方活动都使用英语，为移民规划设立统一的语言标准。在美国国家层面上，英语至今都根本没有政府官方工作语言的法定地位，好玩儿吧？</p><hr><p>第 47 页<br>因为有强烈的北京口语色彩，“俩”颇得人心，常常被人拿来转京腔，于是用错的例子比比皆是。有些人错在望文生义，觉得有个人字边，写到人的时候就用它以示郑重。其实根本不关人事。北京话里有个熟语叫仨瓜俩枣，指的就是不值钱的小物件。正因为“俩”原本就隐含了量词，说“俩个人”变得叠床架屋。“小两口”也一样，已经有了量词“口”，当然就不能再用“俩”了。<br>有一次碰到编辑和校对争执，有篇文章的开头写着：我有俩姥爷。原本是个挺有悬念和情节感的开头，显然要随之铺陈的是关于姥姥的曲折人生。谁知道在校对那里，竟然被改成了“我有姥爷俩”。“俩”字乾坤大挪移，放在了姥爷后面，让人啼笑皆非。校对丝毫不觉得错，振振有词地拿出夫妻俩、姊妹俩、妯娌俩做例子——亲戚关系不都是把“俩”放在后面么？乍一听，还真被他唬住了。仔细分析，的确“俩”既可以出现在名词之前，也可以出现在名词之后。但放在名词后面的“俩”，限制要大得多，根本不能自由滑动。<br>放在后面的“俩”，要求前面的名词则必须是关系词，而非身份词。比如夫妻、妯娌、姊妹、师徒，都是由关系双方并列成词，二者缺一不可，后面加“俩”，恰好是强调了这种关系必须两个人都在才能成立。而姥爷是种身份，只要闺女生了孩子，某个人就会立即升舱做姥爷，即便外孙不在眼前，也不影响他姥爷的身份。至于表面看上去的反例哥俩、姐俩、娘俩、爷俩，在北京话口语里，中间都是要加“儿”的。它们指称的仍然是兄弟、姐妹、母子（母女），父子（父女）关系。</p><hr><p>第 57 页<br>语言学家经过大量的调查实例发现，人们倾向于用较高的抽象度去编码和传播内群体的积极行为和外群体的消极行为，反之亦然。<br>这话有点高深？把它翻译得通俗点就是，人在说自己人好事和外人坏事的时候，习惯抽象性拔高。韩老师说起焦刘洋用到了“红色中国”和“伟大时刻”，说起破纪录的美国人则很客观地描述着她的成绩和赛前承诺。中国选手失手的时候，韩老师及其他解说员都决计不会说这是“中国的失败”。从认知的角度来看，人不管属于什么群体，是好事还是坏事，总是倾向于用抽象的语言区描述符合自己期待的行为，比如西方世界通常觉得犹太人吝啬，于是任何犹太人有吝啬意味的行为，都会被抽象为犹太人的民族特性，而遇到一个犹太人慷慨解囊，由于不符合人们的预期，行为就被认为是突发的、非典型的，描述的语言就会具体起来。觉得这例子有点远？回忆一下你是怎么描述自家的聪明儿子和陌生的河南人的。偏见其实无所不在。</p><hr><p>第 63 页<br>在语言当中。汉语中有不少词汇来自外语，从早前的印度、波斯到后来的日本和西洋各国。外来词恰恰反映了汉语跟异文化交流的轨迹。早年留洋的人是把所有的外来词都音译成汉字的，比如来自梵语的“摩诃般涅槃那”，来自英语的“烟士披里纯”和来自希腊语的“奥林匹克”。问题是这些词音节实在太多了。古汉语以单音节词汇为主，发展到现代汉语，扩展成双音节词汇为主，但始终倾向组成词的每个字都有意义。名词很少长过三音节，四字格成语通常是用来描摹性状而非称呼事物。在汉语中生根发芽的外来词，比如“沙发”、“咖啡”什么的，绝大多数都是双音节，那些单个字没意义且还特别冗长的外来词可就命途多舛了：“摩诃般涅槃那”被斩首剁脚，只剩了“涅槃”；不知所云的“烟士披里纯”被清理门户，改用家生子“灵感”；至于那全球瞩目的运动会，也不得不简缩开支成了“奥运会”，只有开幕式上白岩松特别富有激情的解说，才会一字不漏地说“奥林匹克”。</p><hr><p>第 68 页<br>石头剪子布的游戏如今遍布全中国，几乎所有的孩子小时候都玩儿过。普及性这么高的东西，各地叫法却五花八门，北京人叫“cei丁壳”，上海人叫“猜咚猜”，成都人叫“实拳儿”，西安人叫“猜咚吃”，天津叫“笨桥裹”，长春人叫“钢浪锤”，杭州人叫“琴棕绷”，广州人叫“包剪揼”。相比之下，出现在汉代的“手势令”发展到今天，在各地方言中无非叫“猜拳”、“划拳”或者“豁拳”，花样并不很多。二者叫法的巨大反差恰恰说明了，石头剪子布的出现很可能要晚得多，没准儿都是明代以后的事儿。之所以找不到比较准确的记录，多半是因为文人觉得那是无聊童戏，不屑记之。编纂词条的人好古之心可以理解，但追溯到汉代，未免牵强附会。</p><hr><p>第 78 页<br>美国语言学家曾经提出过“萨丕尔一沃尔夫假说”，他们倾向认为人类所有较高层次的思维都依赖于语言，人们习惯使用的语言的结构影响人们理解周围环境的方式。这一观点后来被称为语言相对论或者语言决定论。不过好在，语言只是赋予了思维以具体的外壳，这个世界上，既有持相同语言的人彼此的误解，也有持不同语言的人可能的沟通。世界的边界，远比语言大得多。</p><hr><p>第 79 页<br><strong>柬埔寨的译法</strong><br>最近因为中国人民的伟大朋友过世，柬埔寨一时成为话题热点。就有人奇怪，柬埔寨三个字跟英文的 Cambodia 相比，除了中间的 “埔” 字约莫有点 bo 的样子，前后的 “柬” 和“寨”，似乎相去甚远。虽说两种语言间的音译，很难百分百准确，但这口音也太重了点吧？<br>这事还得话说从前。这个中南半岛的古国有两千多年的历史。柬埔寨如今的国名，按照高棉语的读音转写成拉丁拼法是 Kumpuchea，这个名字据说源自他们的建国元勋印度婆罗门僧侣 Kumpu，而 chea 意为子孙。柬埔寨就是 Kumpu 后裔的自称。中国的秦汉时期，这里是扶南属国。到了《隋书》称为真腊，是从 Siem Reap 之名译来的。<br>柬埔寨旧名 Khmer，《唐书》里称之为吉蔑、阁蔑都是由此而来。对上世纪七十年代末八十年代初国际新闻有印象的人，应该记得红色高棉的出现频率相当高，高棉是 Khmer 后来的译法。元代元成宗铁穆尔曾派温州人周达观出使真腊，周在吴哥呆了一年，回国后写了总结报告《真腊风土记》，开篇说得明白：“真腊国或称占腊，其国自称曰甘孛智。今圣朝按西番经，名其国曰澉浦只，盖亦甘孛智之近音也。” 这段话可以看出三层意思，第一，周达观标题里的真腊，就像今天有人写篇关于日本的东西，起个名儿叫《东瀛十日》或者《扶桑行迹》之类的，纯粹为了拗个复古的姿势。第二，周达观在真腊呆了一年，想来是颇学了几句当地高棉话的，他所说的甘孛智应当是自己揣摩着当地读音翻译成汉语的。第三，元朝总称西域各族为西番，“圣朝” 命名的 “澉浦只”，是从佛经里转来的二手货。<br>今天通行的 “柬埔寨”，最早的记录是明代万历年间，用“柬” 来对译 kum，今天读来相去甚远，不是古人翻译得不准确，而是 400 多年来汉语发生了变化。一个 “柬” 字，反应的恰是汉语语音古今演变的两条重要规律：舌根音的腭化和 m 尾韵的消失。语言的演变因为地域差异而不平衡，在这场语音演变的马拉松中，北方话跑得比较快，声母 k 受发音部位靠前的韵母影响变成了 j，韵尾 m 也并入了 n，就读成了 jian；粤语跑得比较慢，仍然保持了 “柬” 古时的特征，读作 kam。如同一场凶杀案的现场，法医循着半个模糊的脚印，最终描画出嫌犯的身高体重甚至职业特征普通人大惑不解的译音偏差，恰恰为研究语言演变提供了生动的证据，这样的证据还能在方言中得到印证。<br>至于那个 “寨”，对应于高棉语的 chea，中国人听来其实还满像的。英语里转写成 dia，大概是从法语 Cambodge 里来的，但若拿这个笑话人家翻得差，又着实五十步笑百步。</p><hr><p>第 84 页<br>在不同类型的语言中，语序的重要性不同。汉语是没有形态变化的语言，语序举足轻重，语序一变，“我打你”和“你打我”意思截然不同。即使“饭我吃”这种基本语义关系跟“我吃饭”没有区别的句子，也因为把受动者提到了前面，有指明语义焦点作用，把饭当作一个话题来处理。它不能单独成句，总是要放在特定的环境或上下文当中。比如可能是对比“饭我吃，活儿你干”，跟正常叙述的“我吃饭”有所区别。而在拉丁语、芬兰语当中，虽然有主流语序，但因为每个名词都有标明其语义角色的“格”的变化，有了身份标记，游走起来则变得相当灵活。<br>语言学家把汉语这种固定词序和通过独立的虚词来表达语法意义的语言称为孤立语，相对应的，德语、法语、拉丁语这种由词的形态变化实现语法作用的称为屈折语。单个汉字无变一身轻，行动却比较受限，必须各安其位；拉丁语里每个名词都要考虑性、数、格，每个动词都有时、体、态，戴着形态枷锁，相对却行动自由。这个世界真是公平。</p><hr><p>第 88 页<br>要是会说现今老南京城区八十岁以上的老人家那种保留了入声、分得出尖团的“老南京话”，段位就相当高了，穿到明朝如鱼得水。而且这种口音相当高贵，哪怕后来明朝迁了都清朝设了正音馆，但直到清末，南京官话都是官场和知识阶层的主流口音，享有非常高的地位，当时有“申话不如京话好，南京土白最堪嘉”之说。正因为明清两代作为汉语正音，老南京话相当稳定，会此种口音，当能应付“明穿”“清穿”跨代之需，管用五六百年呢。</p><hr><p>第 94 页<br>东汉末年人们开始使用反切注音。据说是因为佛教的传入，某些儒生受到梵音拼音字理的启发，以两个字来注音，取上字的声母，取下字的韵母和声调，拼合即能读出被切字的读音。最初这种注音方式写成“某某反”，因为避讳造反的“反”，唐未改称“某某切”。比如“苏”，注为素姑切，就是取了“素”的声母 s，“姑”的韵母 u 和平声的声调。直到 1918 年北洋政府教育部公布国语注音字母之前，其间的一千多年，反切法是汉语最主流的注音方法。<br>上字取声，下字取韵，反切的出现，标志着古人开始对汉字音节进行拆分，这也是中国音韵学的开端。不过，因为反切上下字都各有声韵，在拼合时需要掐头去尾，不是那么直接，而且有的韵字数很少，找不到合适的反切字不得不借用旁韵，也不能算十分精确。更何况这方法用了一千多年，若意识不到汉语声韵调都发生了变化，唐人标注的反切，清人又会百般不解。故而音韵学即便在读书人当中也被视为绝学，不敢轻言。</p><hr><p>第 103 页<br>其实，用身体作尺子，不是中国人的专美。罗马帝国的查理曼一世规定以他的脚长为“一罗马尺”，英王埃德加规定过，以他拇指的关节长度为“一英寸”，亨利国王规定他的鼻子尖到伸直手臂的中指尖距离为一码。所谓英尺 foot 跟脚是同一个词。脚的长度因人而异，这个英尺如何确定呢？有人说是约翰国王、也有人说是查理国王的脚。不过到十六世纪，德国人另辟蹊径。他们在一个礼拜日，让从教堂里走出来的 16 个男子站在一起，然后将其左脚的长度加在一起，除以 16，求出一个平均的脚长。这就是今天英尺的由来。从王的专权到普通人的平均数，这是时代的进步。<br>为什么汉语把 foot 翻译成英尺？前阵子有人在微博上发帖，声称手腕到手肘的距离恰跟自己的脚长一致，很多人搬脚比画，纷纷跟帖大呼神奇。其实，被称为测量解剖学鼻祖的达·芬奇早就发现了这个秘密，在他的素描名画《维特鲁威人》中，人手前臂的长度和脚恰是一样的比例。别忘了，汉语中前臂的那根骨头，就叫尺骨。</p><hr><p>第 179 页<br>日语除了来自日本民族原来的日常动词和具象名词之外，历史上吸收了大量的外来语，早期是汉语，到了近代明治维新后，除了一些后来还回传到中国的“政治”、“经济”、“民主”、“干部”等用汉字意译的西方文化词汇外，更大量是音译的来自英语、荷兰语、葡萄牙语、法语的现代军事、科技、艺术词汇，在日文中用片假名标示。我的朋友抱怨过他在日本读研究生的时候，计算机课本宛若天书，满篇都是片假名，“给个英文版我大概更明白点。”他苦笑着摇头。在当代，习惯了外来词汇直接拿来就用的日本人，把日文餐桌词汇直接音译成英语，也就是可以理解的事情了。</p><hr><p>第 190 页<br>这真让人有点焦虑。焦虑的不是电脑的强大，而是人脑的懒惰。如今电脑能写的，还只是些有固定模式的“陈词滥调”。但是按照计算机深度学习的能力和神经式网络的研究进展，也许它会写得越来越好。但要是人的阅读快感，仅仅来源于那种模式化的玄幻小说，渐渐丧失感受新奇与精微的能力，也许真有一天，强大的机器写作就把唐家三少给替代了。<br>人类最终能够与机器抗衡的，大概就是那些微妙的东西吧。而微妙，决定了这世界不是骇客帝国。</p><hr><p>第 214 页<br>重复，是跟幼儿的心理发展历程紧密相关的。按照弗洛伊德老人家的说法，从母体的保护中降生，面对外部世界毫无还手之力的孩子，都会有一种害怕和无能的感觉，这就是出生创伤，这样的创伤带来焦虑，因为对环境无法预期和控制。而重复的东西，让人获得安全感，那些纷至沓来的固定句型和可以预期的情节，让孩子检验着自己的记忆和期望，因此对于孩子的世界来说，既定的重复情节提供的恰是这样一种似曾相识，从而带来心理上的安全感，同时关键词的替代能够带来些许新鲜感，这就是三段式故事背后的心理依据，甚至这构成了人类文化心理原型，超越种族与时代。</p><hr><p>第 216 页<br>语言与思维的关系，是个很有趣的哲学命题。美国语言学家萨丕尔和他的弟子沃尔夫曾经提出过关于语言与思维关系的假设，他们认为所有高层次的思维都倚赖于语言。说得更明白一些，就是语言决定思维，这被称为语言决定论。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/view/subject/l/public/s28243310.jpg" alt="《回锅肉和香菇菜心的语言等级》"><br><a href="https://book.douban.com/subject/26559540/" target="_blank" rel="noopener">《回锅肉和香菇菜心的语言等级》</a><br>作者: 李倩<br>出版社: 商务印书馆<br>ISBN: 9787100112697</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第 4 页&lt;br&gt;以北京的地名来论，老北京口中，以前北京内城的九大门：正阳门、崇文门、宣武门、东直门、朝阳门、西直门、阜成门、德胜门、安定门和皇宫里的天安门、午门、前门，都是不能加“儿”的，一来这些门体量颇大，高耸巍峨；二来，它们还常常跟皇权神权紧密相关，是高高在上万民敬仰的所在，断没有皇上说：“来呀——把这乱臣贼子拖出午门儿斩首！”那也太不严肃了。相反，东便门、西便门则常常在口语里听到儿化。这就是隐藏在语言背后的文化秩序。如今北京城的大门拆得所剩无几，外地人又如何分得出哪门大哪门小？也就越说越乱了，不讨再乱地没人说天安门儿。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第 6 页&lt;br&gt;中国人对于数字的概念，从个、十、百、千数到万跟亿，最多到兆，再往上一般人不大知道还有京、垓、秭、穰、沟、涧、正、载、极……那么大，生活中也的确用不上。但无论怎么大，递进规律是一样的，早在东汉，《数述记遗》一书中就有记载，万万为亿、万亿为兆、万兆为京……所以按照中文的计数方式，若是四位一隔，立时眉目清楚。&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="https://acuario.xyz/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>《中东死生门》读书笔记</title>
    <link href="https://acuario.xyz/life-in-the-middle-east-clip/"/>
    <id>https://acuario.xyz/life-in-the-middle-east-clip/</id>
    <published>2018-04-19T08:38:46.000Z</published>
    <updated>2018-04-19T08:45:17.548Z</updated>
    
    <content type="html"><![CDATA[<p>第 IV 页<br>以色列与巴勒斯坦冲突的故事似乎陷于循环，死结除了政治复杂角力，还在于敌对双方的主流叙述，都拒绝视对方为“人”，而限定为魔鬼。发动大众跟魔鬼作战是容易的，围剿人，则会遭遇各种道义束缚。在我两年的拍摄中，从没有见过纯粹的魔鬼或天使，流泪的流血的都是人。“妖魔化”对方的手法，在全世界各种冲突中都可以见到。</p><hr><p>第 38 页<br>在加沙，日常生活与突然死亡之间，赴死是一个特殊的状态，可以延展，可以重复。它是舞台上的一记亮相，是日常生活发生的一次核聚变，它的光芒照亮了日常，令之神圣，但也足以顷刻间摧毁生活。就像观察中国人怎么吃，法国人怎么恋爱，要了解巴勒斯坦人和以色列人，就要看他们怎样对待死亡。</p><a id="more"></a><hr><p>第 46 页<br>没有多少媒体报道萨希卜的故事，因为他没有炸死其他人我在地图前站了好一会儿。不知道招募萨希卜的人用的什么诱惑。但可以想见，他生长的环境里，赴死的仪式频繁演出，它接管了所有绝望、不如意，乃至希望的去向。它指向为一个政治目的而死，是一切的最后答案。</p><hr><p>第 68 页<br>逾越节。耶路撒冷城市边缘，圣约翰受洗堂旁边的一个小咖啡馆。摆设很有创意，中国的洋铁皮壶漆成大红大蓝，描上花花草草。一看菜单，发现这家咖啡馆并不遵守逾越节不能吃含酵食品的规矩。服务小姐笑笑：“我们什么都有。”以色列有两张面孔，一张宗教，一张世俗。</p><hr><p>第 76 页<br>注意到胖主唱穿着军裤，我问他是不是在服兵役。其他人起哄说，胖子在耶路撒冷情报部门工作。“在情报部门，你不需要聪明，只要足够聪明。”胖子有几分得意地说。我问他，对巴勒斯坦人来说，什么才是“全力控诉”呢？他也说不清楚，反正“自杀爆炸损害了他们自己”。“2000年流血冲突爆发前，如果我们想派军队进约旦河西岸的巴勒斯坦城市，很犹豫，因为那是巴勒斯坦人的地方，现在一只要有一次自杀爆炸，我们毫不犹豫冲进他们的村庄……”</p><hr><p>第 89 页<br>头巾隐藏头发，听说女性的头发被视为引发邪念之物；长袍自然是为了遮盖身体线条。阿拉伯妇女非常爱美，不化妆她们是不会出门的。袍子、头巾、拎包和鞋子颜色必须统一，袍子多为一色，头巾可以斑斓。</p><hr><p>第 101 页<br>转上顶楼阳台，金顶清真寺、阿克萨清真寺，历历在目。“‘阿克萨’的意思是极远、天边，”谢姆托夫用英语飞快地说，“但阿克萨不一定在耶路撒冷，阿拉伯人无根据地把阿克萨同耶路撒冷联系在一起，还宣称对这里的主权……不过你可千万别跟穆斯林这么说，也别说这是我说的。”他一再叮嘱。</p><hr><p>第 113 页<br>冒着大雨，我和拉纳终于来到伯利恒圣诞教堂前—传说中耶稣诞生的地方。<br>低头弯腰进了一道小门。“弯腰进入谦卑之门时，别以为我心里不害怕……”美国《洛杉矶时报》女影记者科尔这样回忆。2002 年 4 月，123 个遭到以色列军队围追堵截的巴勒斯坦人闯入圣诞教堂寻求庇护，与以色列军队对峙 39 天，终获和平解决。对峙期间，科尔突破封锁，从这扇“谦卑之门”跑进教堂，拍摄了后来获得普利策新闻奖的照片。入口如此窄小，传说是基督徒为了阻挡穆斯林骑马进入。不管怎么说，为进入圣地而弯腰谦卑，仿佛天设。</p><hr><p>第 143 页<br>在一处僻静的小山头脚下，几个巴勒斯坦人沿弯弯曲曲的小道走来。安说，看，这些人穿小路，就可以绕开以色列检查站。“自杀爆炸者就是这样渗透到以色列的？”我问。“有一部分是。安承认。“那么以色列为什么不把这些道路全部封死呢？”“西岸地形错综复杂，与以色列的交界线很长，根本不可能全部堵死。”安还说，吉普车驶过的许多道路正是近几年形成的，因为原来的道路已经被以色列封死。<br>安认为，修建隔离墙并不能杜绝人弹，真正用意是攫取更多土地。隔离墙并没有按照 1949 年巴以停战分界线，也就是“绿线”修筑，而是越过“绿线”，伸进巴勒斯坦控制区，形成一道实际边界。<br>隔离墙打破了巴勒斯坦人与土地之间的联系，失去土地的巴勒斯坦人将变成以色列或邻近阿拉伯国家的工厂奴隶，安这样形容。更惊人的是，大部分修建隔离墙的工人是巴勒斯坦人——在失业率达到 70％ 以上的约旦河西岸巴勒斯坦城市，这也是一份工作。<br>吉普车再次上路。在一条5米多宽的土路两侧，各出现一道铁丝网。安指给我看，铁丝网背后各是一个巴勒斯坦村庄。两个相隔仅5米的村庄今后如何往来呢？以列建议修建地下隧道供巴勒斯坦人行走一当然，这得由巴方出钱，而以方控制出入。</p><hr><p>第 152 页<br>在失业率高达 75％ 的加沙地带，有一份工作实在不易。埃雷兹检查站旁有一个以色列工业园，在那里打工的 1500 多名巴勒斯坦人主要从事钢铁、塑料制品加工，每小时收入 5 谢克尔，一天下来可以挣 50 谢克尔。如此算来，每月收入可以达到 1500 谢克尔，相当于加沙城里一个公司职员的月薪！但工人们否定了我的想法。一星期中有三四天以色列因为‘安全原因’关闭工业区。”另外有一万多名巴勒斯坦人获准出埃雷兹，到附近以色列城镇工作，但每天必须返回加沙地带。<br>过关的辛苦且不说，最难的是两头受“威胁”。哈马斯等激进组织“恐吓”上班的工人:“给以色列人打工就是背叛巴勒斯坦人！”向工业区发射的卡桑火箭，不止一次落到工人队伍里；而大多数被迫成为“巴奸”、向以色列提供情报的巴勒斯坦人，也出自工人队伍。道理很简单，一张打工证，全家老小的生计。曾经有一名杰哈德官员遭到以色列“定点清除”，“出卖”他的正是自己的远房侄子。侄子去以色列工业区打工，从姓氏上被以色列方面发现他同那名杰哈德官员来自同一家族。摆在他面前的问题就是：要么出卖叔叔，要么失业回家。</p><hr><p>第 198 页<br>“Abraham”和“Ibrahim”分别是希伯来语、阿拉伯语对“亚伯拉罕”的不同发音。根据《圣经·旧约》和《古兰经》记载，亚伯拉罕是犹太人和阿拉伯人共同的祖先。犹太人是小儿子，亚伯拉罕同发妻生的；阿拉伯人是长子，亚伯拉罕跟婢女生的。</p><hr><p>第 219 页<br>黑漆漆的路上，他教我辨认，橙色灯光的地方就是犹太人住的，白色、青色的灯光，便是巴勒斯坦人住地，夜里很容易辨认。他说，以色列不许巴勒斯坦人用橙色灯泡，以示区别。</p><hr><p>第 223 页<br>说起埃拉特，施罗莫露出笑容。这座城市离巴勒斯坦区域较远，几乎没有遭受过恐怖袭击。以色列有个地下赌场，专赌下次自杀爆炸在哪里发生。耶路撒冷“一赔二”，埃拉特“一赔二十”可见后者安全系数较高。</p><hr><p>第 225 页<br>两分钟的工夫，莫蒂回来，手里多了支烟。他的英语不是很好，父母是摩洛哥来的犹太人，所以会几句阿拉伯语；阿拉伯语中的一些单词和犹太人使用的希伯来语相近，我也学了几句，所以我们就 3 种语言（英语、阿拉伯语、希伯来语）混着说，外加手势比画。</p><hr><p>第 227 页<br>聊天归聊天，安德烈从来没有放松对我的检查。尽管他已经非常清楚我的笔记本电脑什么品牌，开关在哪里，背景照片是什么，甚至化妆包里有多少小零碎儿，通常什么颜色的外套……安德烈每次还是戴上一次性手套，逐一翻检，嘴里重复着“请谅解，请谅解……”<br>两个月后，埃雷兹发生汽车连环爆炸袭击，此后安全控制陡然加强。记者不再享受“贵宾通道”，改走巴勒斯坦工人通道，而且至少等候两小时才能从通道进入检查大厅。终于被姗姗而来的以色列士兵带入检查大厅，接受安德烈检查时，我向他抱怨“见到你真难啊，我等了两个小时！”他的脸更加阴沉：“非常抱歉，现在形势变了，但是你不知道我们面对多少压力，每天我离开家时，妻子都对我说：‘希望晚上见到你回来’……”<br>几天以后，安德烈脖子上多了杆乌兹冲锋枪。</p><hr><p>第 238 页<br>他指着路边背书包的孩子，看，如果犹太人盯上了我，一颗炸弹掉进我车里，这些小孩也完了。你看，那个小孩，喏，那个蓝衬衣的，他难道不是平民吗？不是无辜的吗？<br>我问，那你怎么看自杀爆炸呢？公共汽车上，餐馆里，那些以色列人不是平民吗？不是无辜的吗？他回答说，你说得对，但是我们巴勒斯坦人“没有飞机，没有坦克，只有自己的身体”。</p><hr><p>第 314 页<br>十多年过去，今天看待巴以冲突，犹如活化石。仍然是旧的战争思维：为了土地。悲哀的是，就连整个中东的焦点，都转向了伊朗核问题、新能源革命和国际恐怖主义。今天世界上发生着两件极其不平等的事情：一是高科技迅猛发展，人类命运“共同感”加强；二是主要国家政府仍然提高军费，各自提防。换句话说，形成两幅落差很大的画面：一群人或许殖民火星，同时另一群人在地上用石头相互攻击。未来的科技发展，可能让现在的主要政治问题都变得荒谬，彻底改变人类社会的权力结构。没有人知道，百年冲突，或许会以意想不到的方式终结？几乎可以肯定的是，未来巴以问题不再重要，但那里的人们，他们的命运不该被遗忘。</p><hr><p>以上摘自：<br><img src="https://img3.doubanio.com/view/subject/l/public/s29495542.jpg" alt="《中东死生门》"><br><a href="https://book.douban.com/subject/27089521/" target="_blank" rel="noopener">《中东死生门》</a><br>副标题: 巴以行走观察<br>作者: 周轶君<br>出版社: 中信出版集团<br>ISBN: 9787508676432</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第 IV 页&lt;br&gt;以色列与巴勒斯坦冲突的故事似乎陷于循环，死结除了政治复杂角力，还在于敌对双方的主流叙述，都拒绝视对方为“人”，而限定为魔鬼。发动大众跟魔鬼作战是容易的，围剿人，则会遭遇各种道义束缚。在我两年的拍摄中，从没有见过纯粹的魔鬼或天使，流泪的流血的都是人。“妖魔化”对方的手法，在全世界各种冲突中都可以见到。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第 38 页&lt;br&gt;在加沙，日常生活与突然死亡之间，赴死是一个特殊的状态，可以延展，可以重复。它是舞台上的一记亮相，是日常生活发生的一次核聚变，它的光芒照亮了日常，令之神圣，但也足以顷刻间摧毁生活。就像观察中国人怎么吃，法国人怎么恋爱，要了解巴勒斯坦人和以色列人，就要看他们怎样对待死亡。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://acuario.xyz/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://acuario.xyz/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>《发条橙》读书笔记</title>
    <link href="https://acuario.xyz/a-clockwork-orange-clip/"/>
    <id>https://acuario.xyz/a-clockwork-orange-clip/</id>
    <published>2017-12-10T17:30:28.000Z</published>
    <updated>2017-12-10T17:43:30.872Z</updated>
    
    <content type="html"><![CDATA[<p>引言<br>由于人在定义中就被赋予了自由意志，可以由此来选择善恶。只能行善，或者只能行恶的人，就成了发条橙——也就是说，他的外表是有机物，似乎具有可爱的色彩和汁水，实际上仅仅是发条玩具，由着上帝、魔鬼或无所不能的国家（它日益取代了前两者）来摆弄。彻底善与彻底恶一样没有人性，重要的是道德选择权。恶必须与善共存，以便道德选择权的行使。人生是由道德实体的尖锐对立所维持的。电视新闻讲的全是这些。不幸的是，我们身上原罪深重，反而认为恶很诱人，破坏比创造更加容易，更加壮观。我们喜欢看宇宙分崩离析的幻象，哪怕吓得裤子拖地。   </p><hr><p>第 23 页<br>“是书啊？”我说道，“你正在写的是书啊？”我把嗓音弄得很沙哑，“我对会写书的人始终十二万分地钦佩。”我看了看顶上的一页，上面有书名《发条橙》，然后说：“这书名颇为傻冒。谁听说过上了发条的甜橙？”接着我以牧师布道式高亢的嗓音朗读了片断：“——硬是强迫生机勃勃、善于分泌甜味的人类，挤出最后一轮的橙汁，供给留着胡子的上帝的嘴唇，哎哟，生搬硬套只适于机械装置的定律和条件，对此我要口诛笔伐——”丁姆听着又发出了唇乐，我也忍不住笑了。于是我撕破纸头，把碎片播撒在地板上。   </p><a id="more"></a><hr><p>第 34 页<br>此后，我听了美妙的莫扎特《朱庇特交响曲》，并出现不同面孔遭到踩踏和喷射的新图景，这时我想，越过梦境前只听最后一张唱片了，我想听古典，强烈而很坚定的东西，所以就选了巴赫的《勃兰登堡协奏曲》，只配了中低音弦乐器。听着听着我产生了与以前不同的快感，并再次看到那晚撕破的纸上的这个书名，事情发生在一个名叫“家”的小屋，时间已经显得十分悠远。书名讲的是一只上了发条的甜橙。听着巴赫，我开始更深刻地理解个中意义；而心中则充盈着那位德国音乐大师带来的棕色的极致美感。我想到，我愿意更狠毒地推搡那夫妻俩就在他们家的地板上，把他们撕成碎片。   </p><hr><p>第 38 页<br>“呃，”德尔托得说，“我对你也说惯了，小同学，你要注意啊，你非常清楚，下次就不是教养学校的问题喽。下次就是送上审判台了，我嘛是前功尽弃。你若对自己可怕的一生毫不在乎的话呢，至少也该为我稍微想想吧；我为你出过力流过汗的。悄悄告诉你吧，我们每改造失败一个人，都会得到一颗大黑星；你们每有一个人进铁窗，我们都要做失败忏悔的。”   </p><hr><p>第 38 页<br>接着他以万分沉痛的口吻说，尽管仍然在摇动着旧摇椅：“你们这些人到底中什么邪啦？我们正在研究这个课题，已经搞了要命的近百年了，却毫无进展。你的家庭很不错，父母很慈爱，脑袋瓜也不赖。是不是有什么魔鬼附在你的身上？”<br>“没有人向我灌输任何东西，先生，”我说，“我已经很久没有落入条子之手了。”<br>“这正是我所担心的，”德尔托得叹息道，“是太久了，还怎么保持健康。据我估算，你快到落网的时候了。所以要警告你，小同学，放规矩点，不要让漂亮年轻的长鼻子蒙尘，对吧。我的意思清楚吗？”<br>“就像清澈的湖水，先生，”我说，“就像盛夏的蔚蓝天空一样清楚。包在我身上吧。”我朝他露齿一笑。   </p><hr><p>第 39 页<br>我说：“这挺公正，但很可惜，老爷们，因为牢笼生活我实在忍受不了啊。我的努力方向是，趁未来还向我伸出洁白的手臂的时候，好自为之，再也不要被警察捉了去；要提防别人手持刀子追上来刺一刀；不要在公路上飙车，以免金属件扭曲，碎玻璃飞溅，鲜血喷洒，凝成最终的合唱。”这话很公允，但是，弟兄们哪，他们不厌其烦咬着脚指甲去追究不良行为的“根源”，这实在令我捧腹大笑。他们不去探究“善行”的根源何在，那为什么要追究其对立的门户呢？如果人们善良，那是因为喜欢这样，我是绝不去干涉他们享受快乐的，而其对立面也该享受同等待遇才是。我是在光顾这个对立面。而且，不良行为是关乎自我的，涉及单独的一个，你或我，而那自我是上帝创造的，是上帝的大骄傲、大快乐。“非自我”是不能容忍不良行为的，也就是政府、法官、学校的人们不能允许不良行为，因为他们不能允许自我。弟兄们哪，我们的现代史，难道不是一个勇敢的小自我对抗这些大机器的故事吗？对于这一点，我跟你们是认真的。而我的所作所为，是因为喜欢做才做的。   </p><hr><p>第 101 页<br>电灯熄灭，你们的小说叙事者兼朋友——鄙人孤零零地坐在黑暗中，心中万分恐惧，身体动弹不得，眼睛闭不上，什么都不能动。此时，电影开始放映，喇叭里传出响亮的背景音乐，十分猛烈，充满了不和谐音。银幕上的画面出现了，没有片名和演职员名单。场景是大街，可以是任何城镇的任何街道是个黑夜，点着路灯。电影的质量是符合专业标准的，不像偏僻街道居民家中放映的那种肮脏电影，会出现闪亮和色斑。音乐不停地嘭嘭送出，令人毛骨悚然。画面上出现一个老头子，非常衰老，在街上踯躅，而两个穿着时髦的家伙扑上去，这时依然流行细腿裤，当然宽领带已经让位于真正的领带了。两个人开始戏弄老头，可以听见尖叫和呻吟，十分逼真，甚至能听清两个拳打脚踢者的喘气声。他们把老头揍成了肉饼，拳头啪啪啪打个不停，布拉提撕开后，赤膊的老头还领受了一顿靴子踢，直到血淋淋的躯体躺倒在明沟的污泥中才作罢，两个流氓迅速逃走了。下面是挨揍老头的头部特写，流淌的红血血真漂亮。真有趣，现实世界的色彩，只有在银幕上才能看真切。   </p><hr><p>第 104 页<br>那天被迫观看的其他可怕镜头，弟兄们，我实在不想描述了。这挖空心思的布罗兹基大夫、布拉农大夫和其他白大褂哟，记得还有这转动旋钮、观察仪表的姑娘，肯定比国监内的任何囚犯更加肮脏不堪、臭不可闻。我万万没料到，有人甚至会想得出将强迫我看的东西拍成电影，而且把我绑在椅子上，眼睛绷得大大的。我别无他法，也就是大声呼叫，请他们关掉，关掉，这稍微掩盖了打斗和戏弄的声音，压低了背景渲染音乐。我终于看完了最后一部电影，布罗兹基大夫打着哈欠，以厌烦的口吻说：“我看第一天就这样算了，你说呢，布拉农大夫？”此刻，你们可以想见我的解脱心情。电灯亮了，我坐在那儿，格利佛就像制造痛苦的庞大发动机在噗通噗通直跳，嘴巴干涩，唾沫不少，感到可以把断奶以来吃过的每一口食物呕出来，弟兄们哪。   </p><hr><p>第 122 页<br>布罗兹基大夫对观众说：“请看，我们的实验对象通过被迫趋向恶，反而被迫趋向善。暴力意图伴随着猛烈的切身痛感。为了消除痛感，不得不转向截然相反的态度。有问题吗？”<br>“选择权。”一个浑厚的声音说。我发现这是教诲师呀。他没有真正的选择权，对不对？他有利己之心，害怕痛感，所以被迫走向自我糟蹋的古怪行为。其虚假性显而易见。他不再胡作非为，同时也不再能够作道德选择。”<br>“这问题很微妙，”布罗兹基大夫微笑着，“我们所关心的不是动机，不是高尚的伦理规范，而仅仅是减少犯罪——”<br>“还有，”那衣冠楚楚的大部长插话道，“缓解监狱的人满为患。”   </p><hr><p>第 125 页<br>“他会成为你的好基督徒的，”布罗兹基大夫大声说，“准备转过另外一边脸给你打，准备自己上十字架，而不是送人家上十字架；他即使想到捏死个把苍蝇，都会打心眼里感到恶心。”这话倒没错，弟兄们，他提起捏死苍蝇的时候，我感到一点点恶心，便尽力使自己想着用糖喂苍蝇，把它当做要命的宠物来照料，才消退了恶心和疼痛。“改邪归正了，”他喊道，“在上帝的天使面前真欢乐。”   </p><hr><p>第 146 页<br>他们动手的时候，驾驶员一直坐在方向盘前，边抽烟边看书。汽车里有灯光可供看书，他根本不看比利仔和丁姆对叙事者鄙人的行动。他们的所作所为我也不想详述了，只听农机马达声、秃枝鸟鸣声衬托着喘气声、捶打声，只见汽车灯光中有烟雾热气，驾驶员平静地翻动书页，而在此期间，他们一直在“修理”我，弟兄们哪。然后，我也分不清是比利仔还是丁姆说：“我看差不多了，哥们儿，你说呢？”接着他们每人给我的面孔最后打一拳，我倒下，躺在草地上。天气寒冷，而我一点没有感到冷。他们掸掸袖口，穿戴好刚才脱掉的头盔和上衣，回到了车上。“后会有期，亚历克斯。”比利仔说，丁姆只是发出小丑式的大笑。驾驶员看完那页，把书放好，随之发动汽车，向城里开去，我的前哥们儿和前敌人在挥手。我直挺挺躺着，蓬头垢面精疲力竭。   </p><hr><p>第 149 页<br>“又一个受害人，”他叹息着，“现代受害人。我去拿威士忌，然后必须将伤口稍加清洗。”他走开了。我扫视一眼这舒适的小房间，简直到处都是书，一个壁炉，几把椅子；不知怎么，看得出屋子里没有女主人。桌上有一架打字机，乱堆着大量的文稿，我记得这家伙是个作家。《发条橙》，就是它。它在我脑海中萦绕不去，真有趣。但我不能泄露出来，我正需要主人的帮助和善心呢。那些可怕的狗杂种在白大楼里就是那样整治我的，迫使我急切地依赖帮助和善心，同时渴望自己也能提供帮助和善心，如果有人愿意接受的话。   </p><hr><p>第 152 页<br>“我想你确是犯了罪，但刑罚实在不相称。他们已经把你变成了非人的东西，你再也没有选择的权利。你已经委身于社会所接受的行为，成了台行善的小机器。这一点我看得一清二楚——无非是意识域边缘条件反射的营生罢了。音乐、性行为、文学艺术，全都必须成为痛苦的来源，而不是快乐的源泉。”<br>“对的，先生。”我说，一边吸着这位善人给的软木过滤嘴香烟。<br>“他们一贯贪多务得，”他说，心不在焉地擦干一只盘子，“但其基本意图是真正的犯罪。不会选择的人，就不再是人了。”   </p><hr><p>第 154 页<br>那里还有三两个书架，不出我所料，果然有一本《发条橙》，书的背面，书脊上，写着作者的名字——F.亚历山大，上帝呀，我想道，他也叫亚历克斯啊。我翻了翻，身穿他的睡衣，赤着脚，却一点不感到冷，整个屋子很暖和；不过，我看不出书是讲什么的。它的写作风格似乎非常疯狂，充斥着“哪”、“啊”之类的废话，但大概的意思是，如今的人们都变成了机器，他们、你们、我、他，还有拍我的马屁吧——外表却分明是自然生长的水果。F·亚历山大似乎认为，我们都生长在上帝种植的世界果园中他称之为世界之树之上，我们的存在是因为上帝需要我们来解渴，爱的饥渴云云。   </p><hr><p>第 162 页<br>我醒来时，可以听到墙上传出音乐声，非常响亮，是它把我拖出了那点点瞌睡。那是我十分熟悉的交响乐，已经好几年没有欣赏过了。它是丹麦人奥托·斯卡德里克的《第三交响曲》，是响亮狂热的作品，特别是第一乐章，正在放的就是这一章。我兴致勃勃、快乐地听了两秒钟，接着疼痛和恶心排山倒海地压过来，我的肚子深处开始呻吟。就这样，当初这么热爱音乐的我爬下了床，一边哎哟哎哟地喊叫，接着嘭嘭嘭地敲墙，一边喊道：停下，停下，关掉！”但音乐照放不误，而且显得更响亮了。我向墙上击拳，直到骨节全都是红红血和撕脱的皮，喊叫喊叫啊，但音乐没有停止。然后我想，我得逃出去，于是踉踉跄跄地出了小卧室，冲向公寓的前门，但门反锁上了，根本出不去。与此同时，音乐越来越响亮，好像有意折磨我似的，弟兄们哪。于是，我把手指深深地插入耳朵，可长号和铜鼓声透过手指来还是很响。我再次喊叫，让他们停止，捶打着墙壁，但毫无作用。“哎哟，我怎么办呢？”我独自哭泣着，“上帝保佑我吧。”我疼痛而恶心地满公寓摸索，试图把音乐关掉，呻吟似乎是发自腹中深处。此刻，在起居室桌上那堆书本、纸头上面，我发现了自己不得不做的事情，即图书馆里的老头们、假扮成警察的丁姆和比利仔没让我做成的事情，也就是干掉自己，一死了之，永远离开这邪恶凶残的世界。我看到一份传单封面有“死”字，尽管是《政府去死吧》就像命中注定一样，另一份小传单的封面有一扇打开的窗户说：“打开窗户放进新鲜空气、新鲜观念、新鲜的生活方式。”我知道了，它告诉我，跳窗可以结束一切。也许会有一时的疼痛，然后是永远永远永远的长眠。   </p><hr><p>第 179 页<br>天色很黑，刀割般的寒风越刮越猛，四周行人很少很少。巡警车载着凶神恶煞般的条子开来开去游弋，不时可见三两个年轻的警察在街角处跺脚取暖，在寒风中喷着热气，弟兄们哪。我想，如今条子对抓获的人极尽折磨之能事，大概大部分的超级暴力和烧杀抢掠已经销声匿迹了吧，其实，现在的形势成了调皮捣蛋的纳查奇和不失时机舞刀弄棍，乃至拔枪相向的条子之间的械斗。而这些天困扰我的问题在于，我已经什么也不在乎了。仿佛某种温柔之气侵入了体内，而我却不懂得为了什么。当时，我不知道自己到底想要什么。连喜欢躲进小室聆听的乐曲，也属于以前要耻笑的曲目，弟兄们。我现在更爱听小小的浪漫歌曲，即所谓的“德国抒情歌曲”，是钢琴伴唱的，很恬静，很有思慕情调，而不是从前那样全是大乐队，身体躺倒在床上，夹在小提琴、长号、铜鼓之间。我的体内正在发生蜕变，我不知道那是病变，还是他们那次在我身上注入的东西在捣鼓我的格利佛？说不定它在逼我走向真正的疯狂。   </p><hr><p>附录《那不是我的发条橙》<br>《时代》周刊说：“本书也许看似一本淫秽惊悚的小书，但伯吉斯用英语写了一部珍品——一部哲理小说。这一点也许会被忽视，因为小说主人公说的都是纳查奇语，以便给予他应有的特殊身份—半人半非人。这个‘垮掉的一代’的斯塔夫罗金的朝圣之路是一篇严肃而成功的道德随笔。伯吉斯直截了当地认为作为恶人的亚历克斯比作为一个善良的僵尸的亚历克斯更像是一个人。机械社会的发条决不能冒充道德选择的有机生命。如果恶不能被接受为一种可能性，那么善就是无意义的。”</p><hr><p>以上摘自：<br><img src="https://img1.doubanio.com/lpic/s29066459.jpg" alt="《发条橙（纪念版）》"><br><a href="https://book.douban.com/subject/26882001/" target="_blank" rel="noopener">《发条橙（纪念版）》</a><br>作者: <a href="https://book.douban.com/author/4506326/" target="_blank" rel="noopener">Anthony Burgess</a><br>译者: 王之光<br>出版社: 译林出版社<br>ISBN: 9787544764759</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引言&lt;br&gt;由于人在定义中就被赋予了自由意志，可以由此来选择善恶。只能行善，或者只能行恶的人，就成了发条橙——也就是说，他的外表是有机物，似乎具有可爱的色彩和汁水，实际上仅仅是发条玩具，由着上帝、魔鬼或无所不能的国家（它日益取代了前两者）来摆弄。彻底善与彻底恶一样没有人性，重要的是道德选择权。恶必须与善共存，以便道德选择权的行使。人生是由道德实体的尖锐对立所维持的。电视新闻讲的全是这些。不幸的是，我们身上原罪深重，反而认为恶很诱人，破坏比创造更加容易，更加壮观。我们喜欢看宇宙分崩离析的幻象，哪怕吓得裤子拖地。   &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第 23 页&lt;br&gt;“是书啊？”我说道，“你正在写的是书啊？”我把嗓音弄得很沙哑，“我对会写书的人始终十二万分地钦佩。”我看了看顶上的一页，上面有书名《发条橙》，然后说：“这书名颇为傻冒。谁听说过上了发条的甜橙？”接着我以牧师布道式高亢的嗓音朗读了片断：“——硬是强迫生机勃勃、善于分泌甜味的人类，挤出最后一轮的橙汁，供给留着胡子的上帝的嘴唇，哎哟，生搬硬套只适于机械装置的定律和条件，对此我要口诛笔伐——”丁姆听着又发出了唇乐，我也忍不住笑了。于是我撕破纸头，把碎片播撒在地板上。   &lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://acuario.xyz/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://acuario.xyz/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
